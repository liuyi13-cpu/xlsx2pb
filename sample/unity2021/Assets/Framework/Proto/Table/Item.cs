// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: item.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RES {

  /// <summary>Holder for reflection information generated from item.proto</summary>
  public static partial class ItemReflection {

    #region Descriptor
    /// <summary>File descriptor for item.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ItemReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgppdGVtLnByb3RvEgNSRVMaDHRzdjJwYi5wcm90bxoOa2V5d29yZHMucHJv",
            "dG8aFWtleXdvcmRzX2NsaWVudC5wcm90byKyAgoHUmVzSXRlbRIYCgJpZBgB",
            "IAEoBUIMivEECOeJqeWTgUlEEh4KBG5hbWUYAiABKAlCEIrxBAznianlk4Hl",
            "kI3np7ASGgoEaWNvbhgDIAEoCUIMivEECFVJ5Zu+5qCHEh8KBWltYWdlGAQg",
            "ASgJQhCK8QQM5Zy65pmv5Zu+5qCHEh4KBGRlc2MYBSABKAlCEIrxBAznianl",
            "k4Hmj4/ov7ASHgoEdHlwZRgGIAEoBUIQivEEDOeJqeWTgeexu+WeixIqCgd0",
            "aW1lUHJlGAcgASgFQhmK8QQV6LSt5Lmw5YmN562J5b6F5pe26Ze0EiwKCXRp",
            "bWVBZnRlchgIIAEoBUIZivEEFei0reS5sOWQjuetieW+heaXtumXtDoWiuIJ",
            "EueJqeWTgeihqCNyZXNfaXRlbSIrCgxSZXNJdGVtQXJyYXkSGwoFaXRlbXMY",
            "ASADKAsyDC5SRVMuUmVzSXRlbSLeAQoKUmVzSXRlbUJhZxISCgJpZBgBIAEo",
            "BUIGivEEAmlkEhgKBHR5cGUYAiABKAVCCorxBAbnp43nsbsSHAoGdHlwZUlk",
            "GAMgASgFQgyK8QQI57G75Z6LSUQSHgoKZHJvcF9hcnJheRgEIAMoBUIKivEE",
            "BuaOieiQvRIpChBkcm9wX2NvdW50X2FycmF5GAUgAygFQg+K8QQL5o6J6JC9",
            "Y291bnQSGgoEaWNvbhgGIAEoCUIMivEECFVJ5pi+56S6Oh2K4gkZ54mp5ZOB",
            "5YyF6KGoI3Jlc19pdGVtX2JhZyIxCg9SZXNJdGVtQmFnQXJyYXkSHgoFaXRl",
            "bXMYASADKAsyDy5SRVMuUmVzSXRlbUJhZyLwAgoLUmVzSXRlbURyb3ASEgoC",
            "aWQYASABKAVCBorxBAJpZBIiCghkcm9wVHlwZRgCIAEoBUIQivEEDOaOieiQ",
            "veexu+WeixIfCgVpbWFnZRgDIAEoCUIQivEEDOWcuuaZr+aYvuekuhIhCgdz",
            "ZWxsRXhwGAQgASgFQhCK8QQM5bim6LSn57uP6aqMEi0KEnJld2FyZFByb2Jh",
            "YmlsaXR5MRgFIAEoBUIRivEEDeWlluWKsTHmpoLnjocSMQoMcmV3YXJkMV9s",
            "aXN0GAYgAygLMg4uUkVTLlJlc1Jld2FyZEILivEEB+WlluWKsTESLQoScmV3",
            "YXJkUHJvYmFiaWxpdHkyGAcgASgFQhGK8QQN5aWW5YqxMuamgueOhxIxCgxy",
            "ZXdhcmQyX2xpc3QYCCADKAsyDi5SRVMuUmVzUmV3YXJkQguK8QQH5aWW5Yqx",
            "MjohiuIJHeeJqeWTgeaOieiQveihqCNyZXNfaXRlbV9kcm9wIjMKEFJlc0l0",
            "ZW1Ecm9wQXJyYXkSHwoFaXRlbXMYASADKAsyEC5SRVMuUmVzSXRlbURyb3Ai",
            "0AMKDFJlc0l0ZW1SYW5nZRIcCgJpZBgBIAEoBUIQivEEDOa+oeWgguetiee6",
            "pxIjCgljb2luc19taW4YAiABKAVCEIrxBAzph5HluIHkuIvpmZASIwoJY29p",
            "bnNfbWF4GAMgASgFQhCK8QQM6YeR5biB5LiK6ZmQEiUKC2RpYW1vbmRfbWlu",
            "GAQgASgFQhCK8QQM6ZK755+z5LiL6ZmQEiUKC2RpYW1vbmRfbWF4GAUgASgF",
            "QhCK8QQM6ZK755+z5LiK6ZmQEiEKB2V4cF9taW4YBiABKAVCEIrxBAznu4/p",
            "qozkuIvpmZASIQoHZXhwX21heBgHIAEoBUIQivEEDOe7j+mqjOS4iumZkBIj",
            "Cglwb3dlcl9taW4YCCABKAVCEIrxBAzkvZPlipvkuIvpmZASIwoJcG93ZXJf",
            "bWF4GAkgASgFQhCK8QQM5L2T5Yqb5LiK6ZmQEioKDWFjaF9wb2ludF9taW4Y",
            "CiABKAVCE4rxBA/miJDlsLHngrnkuIvpmZASKgoNYWNoX3BvaW50X21heBgL",
            "IAEoBUITivEED+aIkOWwseeCueS4iumZkDoiiuIJHueJqeWTgeiMg+WbtOih",
            "qCNyZXNfaXRlbV9yYW5nZSI1ChFSZXNJdGVtUmFuZ2VBcnJheRIgCgVpdGVt",
            "cxgBIAMoCzIRLlJFUy5SZXNJdGVtUmFuZ2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Tsv2PbReflection.Descriptor, global::RES.KeywordsReflection.Descriptor, global::RES.KeywordsClientReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RES.ResItem), global::RES.ResItem.Parser, new[]{ "id", "name", "icon", "image", "desc", "type", "timePre", "timeAfter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RES.ResItemArray), global::RES.ResItemArray.Parser, new[]{ "items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RES.ResItemBag), global::RES.ResItemBag.Parser, new[]{ "id", "type", "typeId", "drop_array", "drop_count_array", "icon" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RES.ResItemBagArray), global::RES.ResItemBagArray.Parser, new[]{ "items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RES.ResItemDrop), global::RES.ResItemDrop.Parser, new[]{ "id", "dropType", "image", "sellExp", "rewardProbability1", "reward1_list", "rewardProbability2", "reward2_list" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RES.ResItemDropArray), global::RES.ResItemDropArray.Parser, new[]{ "items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RES.ResItemRange), global::RES.ResItemRange.Parser, new[]{ "id", "coins_min", "coins_max", "diamond_min", "diamond_max", "exp_min", "exp_max", "power_min", "power_max", "ach_point_min", "ach_point_max" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RES.ResItemRangeArray), global::RES.ResItemRangeArray.Parser, new[]{ "items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ResItem : pb::IMessage<ResItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResItem> _parser = new pb::MessageParser<ResItem>(() => new ResItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RES.ItemReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItem(ResItem other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      icon_ = other.icon_;
      image_ = other.image_;
      desc_ = other.desc_;
      type_ = other.type_;
      timePre_ = other.timePre_;
      timeAfter_ = other.timeAfter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItem Clone() {
      return new ResItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int idFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int nameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int iconFieldNumber = 3;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int imageFieldNumber = 4;
    private string image_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "desc" field.</summary>
    public const int descFieldNumber = 5;
    private string desc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string desc {
      get { return desc_; }
      set {
        desc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int typeFieldNumber = 6;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "timePre" field.</summary>
    public const int timePreFieldNumber = 7;
    private int timePre_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int timePre {
      get { return timePre_; }
      set {
        timePre_ = value;
      }
    }

    /// <summary>Field number for the "timeAfter" field.</summary>
    public const int timeAfterFieldNumber = 8;
    private int timeAfter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int timeAfter {
      get { return timeAfter_; }
      set {
        timeAfter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (id != other.id) return false;
      if (name != other.name) return false;
      if (icon != other.icon) return false;
      if (image != other.image) return false;
      if (desc != other.desc) return false;
      if (type != other.type) return false;
      if (timePre != other.timePre) return false;
      if (timeAfter != other.timeAfter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id != 0) hash ^= id.GetHashCode();
      if (name.Length != 0) hash ^= name.GetHashCode();
      if (icon.Length != 0) hash ^= icon.GetHashCode();
      if (image.Length != 0) hash ^= image.GetHashCode();
      if (desc.Length != 0) hash ^= desc.GetHashCode();
      if (type != 0) hash ^= type.GetHashCode();
      if (timePre != 0) hash ^= timePre.GetHashCode();
      if (timeAfter != 0) hash ^= timeAfter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(id);
      }
      if (name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(name);
      }
      if (icon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(icon);
      }
      if (image.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(image);
      }
      if (desc.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(desc);
      }
      if (type != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(type);
      }
      if (timePre != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(timePre);
      }
      if (timeAfter != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(timeAfter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(id);
      }
      if (name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(name);
      }
      if (icon.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(icon);
      }
      if (image.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(image);
      }
      if (desc.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(desc);
      }
      if (type != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(type);
      }
      if (timePre != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(timePre);
      }
      if (timeAfter != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(timeAfter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(id);
      }
      if (name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(name);
      }
      if (icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(icon);
      }
      if (image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(image);
      }
      if (desc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(desc);
      }
      if (type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(type);
      }
      if (timePre != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(timePre);
      }
      if (timeAfter != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(timeAfter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResItem other) {
      if (other == null) {
        return;
      }
      if (other.id != 0) {
        id = other.id;
      }
      if (other.name.Length != 0) {
        name = other.name;
      }
      if (other.icon.Length != 0) {
        icon = other.icon;
      }
      if (other.image.Length != 0) {
        image = other.image;
      }
      if (other.desc.Length != 0) {
        desc = other.desc;
      }
      if (other.type != 0) {
        type = other.type;
      }
      if (other.timePre != 0) {
        timePre = other.timePre;
      }
      if (other.timeAfter != 0) {
        timeAfter = other.timeAfter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            id = input.ReadInt32();
            break;
          }
          case 18: {
            name = input.ReadString();
            break;
          }
          case 26: {
            icon = input.ReadString();
            break;
          }
          case 34: {
            image = input.ReadString();
            break;
          }
          case 42: {
            desc = input.ReadString();
            break;
          }
          case 48: {
            type = input.ReadInt32();
            break;
          }
          case 56: {
            timePre = input.ReadInt32();
            break;
          }
          case 64: {
            timeAfter = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            id = input.ReadInt32();
            break;
          }
          case 18: {
            name = input.ReadString();
            break;
          }
          case 26: {
            icon = input.ReadString();
            break;
          }
          case 34: {
            image = input.ReadString();
            break;
          }
          case 42: {
            desc = input.ReadString();
            break;
          }
          case 48: {
            type = input.ReadInt32();
            break;
          }
          case 56: {
            timePre = input.ReadInt32();
            break;
          }
          case 64: {
            timeAfter = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResItemArray : pb::IMessage<ResItemArray>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResItemArray> _parser = new pb::MessageParser<ResItemArray>(() => new ResItemArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResItemArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RES.ItemReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemArray(ResItemArray other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemArray Clone() {
      return new ResItemArray(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int itemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RES.ResItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::RES.ResItem.Parser);
    private readonly pbc::RepeatedField<global::RES.ResItem> items_ = new pbc::RepeatedField<global::RES.ResItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::RES.ResItem> items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResItemArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResItemArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResItemArray other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResItemBag : pb::IMessage<ResItemBag>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResItemBag> _parser = new pb::MessageParser<ResItemBag>(() => new ResItemBag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResItemBag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RES.ItemReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemBag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemBag(ResItemBag other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      typeId_ = other.typeId_;
      drop_array_ = other.drop_array_.Clone();
      drop_count_array_ = other.drop_count_array_.Clone();
      icon_ = other.icon_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemBag Clone() {
      return new ResItemBag(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int idFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int typeFieldNumber = 2;
    private int type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "typeId" field.</summary>
    public const int typeIdFieldNumber = 3;
    private int typeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int typeId {
      get { return typeId_; }
      set {
        typeId_ = value;
      }
    }

    /// <summary>Field number for the "drop_array" field.</summary>
    public const int drop_arrayFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_drop_array_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> drop_array_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> drop_array {
      get { return drop_array_; }
    }

    /// <summary>Field number for the "drop_count_array" field.</summary>
    public const int drop_count_arrayFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_drop_count_array_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> drop_count_array_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> drop_count_array {
      get { return drop_count_array_; }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int iconFieldNumber = 6;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResItemBag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResItemBag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (id != other.id) return false;
      if (type != other.type) return false;
      if (typeId != other.typeId) return false;
      if(!drop_array_.Equals(other.drop_array_)) return false;
      if(!drop_count_array_.Equals(other.drop_count_array_)) return false;
      if (icon != other.icon) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id != 0) hash ^= id.GetHashCode();
      if (type != 0) hash ^= type.GetHashCode();
      if (typeId != 0) hash ^= typeId.GetHashCode();
      hash ^= drop_array_.GetHashCode();
      hash ^= drop_count_array_.GetHashCode();
      if (icon.Length != 0) hash ^= icon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(id);
      }
      if (type != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(type);
      }
      if (typeId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(typeId);
      }
      drop_array_.WriteTo(output, _repeated_drop_array_codec);
      drop_count_array_.WriteTo(output, _repeated_drop_count_array_codec);
      if (icon.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(id);
      }
      if (type != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(type);
      }
      if (typeId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(typeId);
      }
      drop_array_.WriteTo(ref output, _repeated_drop_array_codec);
      drop_count_array_.WriteTo(ref output, _repeated_drop_count_array_codec);
      if (icon.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(icon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(id);
      }
      if (type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(type);
      }
      if (typeId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(typeId);
      }
      size += drop_array_.CalculateSize(_repeated_drop_array_codec);
      size += drop_count_array_.CalculateSize(_repeated_drop_count_array_codec);
      if (icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(icon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResItemBag other) {
      if (other == null) {
        return;
      }
      if (other.id != 0) {
        id = other.id;
      }
      if (other.type != 0) {
        type = other.type;
      }
      if (other.typeId != 0) {
        typeId = other.typeId;
      }
      drop_array_.Add(other.drop_array_);
      drop_count_array_.Add(other.drop_count_array_);
      if (other.icon.Length != 0) {
        icon = other.icon;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            id = input.ReadInt32();
            break;
          }
          case 16: {
            type = input.ReadInt32();
            break;
          }
          case 24: {
            typeId = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            drop_array_.AddEntriesFrom(input, _repeated_drop_array_codec);
            break;
          }
          case 42:
          case 40: {
            drop_count_array_.AddEntriesFrom(input, _repeated_drop_count_array_codec);
            break;
          }
          case 50: {
            icon = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            id = input.ReadInt32();
            break;
          }
          case 16: {
            type = input.ReadInt32();
            break;
          }
          case 24: {
            typeId = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            drop_array_.AddEntriesFrom(ref input, _repeated_drop_array_codec);
            break;
          }
          case 42:
          case 40: {
            drop_count_array_.AddEntriesFrom(ref input, _repeated_drop_count_array_codec);
            break;
          }
          case 50: {
            icon = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResItemBagArray : pb::IMessage<ResItemBagArray>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResItemBagArray> _parser = new pb::MessageParser<ResItemBagArray>(() => new ResItemBagArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResItemBagArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RES.ItemReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemBagArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemBagArray(ResItemBagArray other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemBagArray Clone() {
      return new ResItemBagArray(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int itemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RES.ResItemBag> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::RES.ResItemBag.Parser);
    private readonly pbc::RepeatedField<global::RES.ResItemBag> items_ = new pbc::RepeatedField<global::RES.ResItemBag>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::RES.ResItemBag> items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResItemBagArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResItemBagArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResItemBagArray other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResItemDrop : pb::IMessage<ResItemDrop>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResItemDrop> _parser = new pb::MessageParser<ResItemDrop>(() => new ResItemDrop());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResItemDrop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RES.ItemReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemDrop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemDrop(ResItemDrop other) : this() {
      id_ = other.id_;
      dropType_ = other.dropType_;
      image_ = other.image_;
      sellExp_ = other.sellExp_;
      rewardProbability1_ = other.rewardProbability1_;
      reward1_list_ = other.reward1_list_.Clone();
      rewardProbability2_ = other.rewardProbability2_;
      reward2_list_ = other.reward2_list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemDrop Clone() {
      return new ResItemDrop(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int idFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "dropType" field.</summary>
    public const int dropTypeFieldNumber = 2;
    private int dropType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int dropType {
      get { return dropType_; }
      set {
        dropType_ = value;
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int imageFieldNumber = 3;
    private string image_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string image {
      get { return image_; }
      set {
        image_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sellExp" field.</summary>
    public const int sellExpFieldNumber = 4;
    private int sellExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int sellExp {
      get { return sellExp_; }
      set {
        sellExp_ = value;
      }
    }

    /// <summary>Field number for the "rewardProbability1" field.</summary>
    public const int rewardProbability1FieldNumber = 5;
    private int rewardProbability1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int rewardProbability1 {
      get { return rewardProbability1_; }
      set {
        rewardProbability1_ = value;
      }
    }

    /// <summary>Field number for the "reward1_list" field.</summary>
    public const int reward1_listFieldNumber = 6;
    private static readonly pb::FieldCodec<global::RES.ResReward> _repeated_reward1_list_codec
        = pb::FieldCodec.ForMessage(50, global::RES.ResReward.Parser);
    private readonly pbc::RepeatedField<global::RES.ResReward> reward1_list_ = new pbc::RepeatedField<global::RES.ResReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::RES.ResReward> reward1_list {
      get { return reward1_list_; }
    }

    /// <summary>Field number for the "rewardProbability2" field.</summary>
    public const int rewardProbability2FieldNumber = 7;
    private int rewardProbability2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int rewardProbability2 {
      get { return rewardProbability2_; }
      set {
        rewardProbability2_ = value;
      }
    }

    /// <summary>Field number for the "reward2_list" field.</summary>
    public const int reward2_listFieldNumber = 8;
    private static readonly pb::FieldCodec<global::RES.ResReward> _repeated_reward2_list_codec
        = pb::FieldCodec.ForMessage(66, global::RES.ResReward.Parser);
    private readonly pbc::RepeatedField<global::RES.ResReward> reward2_list_ = new pbc::RepeatedField<global::RES.ResReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::RES.ResReward> reward2_list {
      get { return reward2_list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResItemDrop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResItemDrop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (id != other.id) return false;
      if (dropType != other.dropType) return false;
      if (image != other.image) return false;
      if (sellExp != other.sellExp) return false;
      if (rewardProbability1 != other.rewardProbability1) return false;
      if(!reward1_list_.Equals(other.reward1_list_)) return false;
      if (rewardProbability2 != other.rewardProbability2) return false;
      if(!reward2_list_.Equals(other.reward2_list_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id != 0) hash ^= id.GetHashCode();
      if (dropType != 0) hash ^= dropType.GetHashCode();
      if (image.Length != 0) hash ^= image.GetHashCode();
      if (sellExp != 0) hash ^= sellExp.GetHashCode();
      if (rewardProbability1 != 0) hash ^= rewardProbability1.GetHashCode();
      hash ^= reward1_list_.GetHashCode();
      if (rewardProbability2 != 0) hash ^= rewardProbability2.GetHashCode();
      hash ^= reward2_list_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(id);
      }
      if (dropType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(dropType);
      }
      if (image.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(image);
      }
      if (sellExp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(sellExp);
      }
      if (rewardProbability1 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(rewardProbability1);
      }
      reward1_list_.WriteTo(output, _repeated_reward1_list_codec);
      if (rewardProbability2 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(rewardProbability2);
      }
      reward2_list_.WriteTo(output, _repeated_reward2_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(id);
      }
      if (dropType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(dropType);
      }
      if (image.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(image);
      }
      if (sellExp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(sellExp);
      }
      if (rewardProbability1 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(rewardProbability1);
      }
      reward1_list_.WriteTo(ref output, _repeated_reward1_list_codec);
      if (rewardProbability2 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(rewardProbability2);
      }
      reward2_list_.WriteTo(ref output, _repeated_reward2_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(id);
      }
      if (dropType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(dropType);
      }
      if (image.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(image);
      }
      if (sellExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(sellExp);
      }
      if (rewardProbability1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(rewardProbability1);
      }
      size += reward1_list_.CalculateSize(_repeated_reward1_list_codec);
      if (rewardProbability2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(rewardProbability2);
      }
      size += reward2_list_.CalculateSize(_repeated_reward2_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResItemDrop other) {
      if (other == null) {
        return;
      }
      if (other.id != 0) {
        id = other.id;
      }
      if (other.dropType != 0) {
        dropType = other.dropType;
      }
      if (other.image.Length != 0) {
        image = other.image;
      }
      if (other.sellExp != 0) {
        sellExp = other.sellExp;
      }
      if (other.rewardProbability1 != 0) {
        rewardProbability1 = other.rewardProbability1;
      }
      reward1_list_.Add(other.reward1_list_);
      if (other.rewardProbability2 != 0) {
        rewardProbability2 = other.rewardProbability2;
      }
      reward2_list_.Add(other.reward2_list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            id = input.ReadInt32();
            break;
          }
          case 16: {
            dropType = input.ReadInt32();
            break;
          }
          case 26: {
            image = input.ReadString();
            break;
          }
          case 32: {
            sellExp = input.ReadInt32();
            break;
          }
          case 40: {
            rewardProbability1 = input.ReadInt32();
            break;
          }
          case 50: {
            reward1_list_.AddEntriesFrom(input, _repeated_reward1_list_codec);
            break;
          }
          case 56: {
            rewardProbability2 = input.ReadInt32();
            break;
          }
          case 66: {
            reward2_list_.AddEntriesFrom(input, _repeated_reward2_list_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            id = input.ReadInt32();
            break;
          }
          case 16: {
            dropType = input.ReadInt32();
            break;
          }
          case 26: {
            image = input.ReadString();
            break;
          }
          case 32: {
            sellExp = input.ReadInt32();
            break;
          }
          case 40: {
            rewardProbability1 = input.ReadInt32();
            break;
          }
          case 50: {
            reward1_list_.AddEntriesFrom(ref input, _repeated_reward1_list_codec);
            break;
          }
          case 56: {
            rewardProbability2 = input.ReadInt32();
            break;
          }
          case 66: {
            reward2_list_.AddEntriesFrom(ref input, _repeated_reward2_list_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResItemDropArray : pb::IMessage<ResItemDropArray>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResItemDropArray> _parser = new pb::MessageParser<ResItemDropArray>(() => new ResItemDropArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResItemDropArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RES.ItemReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemDropArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemDropArray(ResItemDropArray other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemDropArray Clone() {
      return new ResItemDropArray(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int itemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RES.ResItemDrop> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::RES.ResItemDrop.Parser);
    private readonly pbc::RepeatedField<global::RES.ResItemDrop> items_ = new pbc::RepeatedField<global::RES.ResItemDrop>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::RES.ResItemDrop> items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResItemDropArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResItemDropArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResItemDropArray other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResItemRange : pb::IMessage<ResItemRange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResItemRange> _parser = new pb::MessageParser<ResItemRange>(() => new ResItemRange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResItemRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RES.ItemReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemRange(ResItemRange other) : this() {
      id_ = other.id_;
      coins_min_ = other.coins_min_;
      coins_max_ = other.coins_max_;
      diamond_min_ = other.diamond_min_;
      diamond_max_ = other.diamond_max_;
      exp_min_ = other.exp_min_;
      exp_max_ = other.exp_max_;
      power_min_ = other.power_min_;
      power_max_ = other.power_max_;
      ach_point_min_ = other.ach_point_min_;
      ach_point_max_ = other.ach_point_max_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemRange Clone() {
      return new ResItemRange(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int idFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "coins_min" field.</summary>
    public const int coins_minFieldNumber = 2;
    private int coins_min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int coins_min {
      get { return coins_min_; }
      set {
        coins_min_ = value;
      }
    }

    /// <summary>Field number for the "coins_max" field.</summary>
    public const int coins_maxFieldNumber = 3;
    private int coins_max_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int coins_max {
      get { return coins_max_; }
      set {
        coins_max_ = value;
      }
    }

    /// <summary>Field number for the "diamond_min" field.</summary>
    public const int diamond_minFieldNumber = 4;
    private int diamond_min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int diamond_min {
      get { return diamond_min_; }
      set {
        diamond_min_ = value;
      }
    }

    /// <summary>Field number for the "diamond_max" field.</summary>
    public const int diamond_maxFieldNumber = 5;
    private int diamond_max_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int diamond_max {
      get { return diamond_max_; }
      set {
        diamond_max_ = value;
      }
    }

    /// <summary>Field number for the "exp_min" field.</summary>
    public const int exp_minFieldNumber = 6;
    private int exp_min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int exp_min {
      get { return exp_min_; }
      set {
        exp_min_ = value;
      }
    }

    /// <summary>Field number for the "exp_max" field.</summary>
    public const int exp_maxFieldNumber = 7;
    private int exp_max_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int exp_max {
      get { return exp_max_; }
      set {
        exp_max_ = value;
      }
    }

    /// <summary>Field number for the "power_min" field.</summary>
    public const int power_minFieldNumber = 8;
    private int power_min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int power_min {
      get { return power_min_; }
      set {
        power_min_ = value;
      }
    }

    /// <summary>Field number for the "power_max" field.</summary>
    public const int power_maxFieldNumber = 9;
    private int power_max_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int power_max {
      get { return power_max_; }
      set {
        power_max_ = value;
      }
    }

    /// <summary>Field number for the "ach_point_min" field.</summary>
    public const int ach_point_minFieldNumber = 10;
    private int ach_point_min_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ach_point_min {
      get { return ach_point_min_; }
      set {
        ach_point_min_ = value;
      }
    }

    /// <summary>Field number for the "ach_point_max" field.</summary>
    public const int ach_point_maxFieldNumber = 11;
    private int ach_point_max_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ach_point_max {
      get { return ach_point_max_; }
      set {
        ach_point_max_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResItemRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResItemRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (id != other.id) return false;
      if (coins_min != other.coins_min) return false;
      if (coins_max != other.coins_max) return false;
      if (diamond_min != other.diamond_min) return false;
      if (diamond_max != other.diamond_max) return false;
      if (exp_min != other.exp_min) return false;
      if (exp_max != other.exp_max) return false;
      if (power_min != other.power_min) return false;
      if (power_max != other.power_max) return false;
      if (ach_point_min != other.ach_point_min) return false;
      if (ach_point_max != other.ach_point_max) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id != 0) hash ^= id.GetHashCode();
      if (coins_min != 0) hash ^= coins_min.GetHashCode();
      if (coins_max != 0) hash ^= coins_max.GetHashCode();
      if (diamond_min != 0) hash ^= diamond_min.GetHashCode();
      if (diamond_max != 0) hash ^= diamond_max.GetHashCode();
      if (exp_min != 0) hash ^= exp_min.GetHashCode();
      if (exp_max != 0) hash ^= exp_max.GetHashCode();
      if (power_min != 0) hash ^= power_min.GetHashCode();
      if (power_max != 0) hash ^= power_max.GetHashCode();
      if (ach_point_min != 0) hash ^= ach_point_min.GetHashCode();
      if (ach_point_max != 0) hash ^= ach_point_max.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(id);
      }
      if (coins_min != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(coins_min);
      }
      if (coins_max != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(coins_max);
      }
      if (diamond_min != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(diamond_min);
      }
      if (diamond_max != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(diamond_max);
      }
      if (exp_min != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(exp_min);
      }
      if (exp_max != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(exp_max);
      }
      if (power_min != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(power_min);
      }
      if (power_max != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(power_max);
      }
      if (ach_point_min != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ach_point_min);
      }
      if (ach_point_max != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(ach_point_max);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(id);
      }
      if (coins_min != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(coins_min);
      }
      if (coins_max != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(coins_max);
      }
      if (diamond_min != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(diamond_min);
      }
      if (diamond_max != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(diamond_max);
      }
      if (exp_min != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(exp_min);
      }
      if (exp_max != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(exp_max);
      }
      if (power_min != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(power_min);
      }
      if (power_max != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(power_max);
      }
      if (ach_point_min != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(ach_point_min);
      }
      if (ach_point_max != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(ach_point_max);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(id);
      }
      if (coins_min != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(coins_min);
      }
      if (coins_max != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(coins_max);
      }
      if (diamond_min != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(diamond_min);
      }
      if (diamond_max != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(diamond_max);
      }
      if (exp_min != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(exp_min);
      }
      if (exp_max != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(exp_max);
      }
      if (power_min != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(power_min);
      }
      if (power_max != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(power_max);
      }
      if (ach_point_min != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ach_point_min);
      }
      if (ach_point_max != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ach_point_max);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResItemRange other) {
      if (other == null) {
        return;
      }
      if (other.id != 0) {
        id = other.id;
      }
      if (other.coins_min != 0) {
        coins_min = other.coins_min;
      }
      if (other.coins_max != 0) {
        coins_max = other.coins_max;
      }
      if (other.diamond_min != 0) {
        diamond_min = other.diamond_min;
      }
      if (other.diamond_max != 0) {
        diamond_max = other.diamond_max;
      }
      if (other.exp_min != 0) {
        exp_min = other.exp_min;
      }
      if (other.exp_max != 0) {
        exp_max = other.exp_max;
      }
      if (other.power_min != 0) {
        power_min = other.power_min;
      }
      if (other.power_max != 0) {
        power_max = other.power_max;
      }
      if (other.ach_point_min != 0) {
        ach_point_min = other.ach_point_min;
      }
      if (other.ach_point_max != 0) {
        ach_point_max = other.ach_point_max;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            id = input.ReadInt32();
            break;
          }
          case 16: {
            coins_min = input.ReadInt32();
            break;
          }
          case 24: {
            coins_max = input.ReadInt32();
            break;
          }
          case 32: {
            diamond_min = input.ReadInt32();
            break;
          }
          case 40: {
            diamond_max = input.ReadInt32();
            break;
          }
          case 48: {
            exp_min = input.ReadInt32();
            break;
          }
          case 56: {
            exp_max = input.ReadInt32();
            break;
          }
          case 64: {
            power_min = input.ReadInt32();
            break;
          }
          case 72: {
            power_max = input.ReadInt32();
            break;
          }
          case 80: {
            ach_point_min = input.ReadInt32();
            break;
          }
          case 88: {
            ach_point_max = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            id = input.ReadInt32();
            break;
          }
          case 16: {
            coins_min = input.ReadInt32();
            break;
          }
          case 24: {
            coins_max = input.ReadInt32();
            break;
          }
          case 32: {
            diamond_min = input.ReadInt32();
            break;
          }
          case 40: {
            diamond_max = input.ReadInt32();
            break;
          }
          case 48: {
            exp_min = input.ReadInt32();
            break;
          }
          case 56: {
            exp_max = input.ReadInt32();
            break;
          }
          case 64: {
            power_min = input.ReadInt32();
            break;
          }
          case 72: {
            power_max = input.ReadInt32();
            break;
          }
          case 80: {
            ach_point_min = input.ReadInt32();
            break;
          }
          case 88: {
            ach_point_max = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ResItemRangeArray : pb::IMessage<ResItemRangeArray>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ResItemRangeArray> _parser = new pb::MessageParser<ResItemRangeArray>(() => new ResItemRangeArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResItemRangeArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RES.ItemReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemRangeArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemRangeArray(ResItemRangeArray other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResItemRangeArray Clone() {
      return new ResItemRangeArray(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int itemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RES.ResItemRange> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::RES.ResItemRange.Parser);
    private readonly pbc::RepeatedField<global::RES.ResItemRange> items_ = new pbc::RepeatedField<global::RES.ResItemRange>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::RES.ResItemRange> items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResItemRangeArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResItemRangeArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResItemRangeArray other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
