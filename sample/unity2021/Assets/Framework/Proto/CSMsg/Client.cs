// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: client.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from client.proto</summary>
public static partial class ClientReflection {

  #region Descriptor
  /// <summary>File descriptor for client.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static ClientReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CgxjbGllbnQucHJvdG8aDWtleXdvcmQucHJvdG8iogcKCkluZm9QbGF5ZXIS",
          "IgoMaW5mb192ZXJzaW9uGAEgASgLMgwuSW5mb1ZlcnNpb24SHAoJaW5mb19y",
          "b2xlGAIgASgLMgkuSW5mb1JvbGUSKQoQaW5mb19zaG9wX3N5c3RlbRgDIAEo",
          "CzIPLkluZm9TaG9wU3lzdGVtEisKEWluZm9fY2xlcmtfc3lzdGVtGAQgASgL",
          "MhAuSW5mb0NsZXJrU3lzdGVtEisKEWluZm9fZ3Vlc3Rfc3lzdGVtGAUgASgL",
          "MhAuSW5mb0d1ZXN0U3lzdGVtEjMKFWluZm9faG9tZXdvcmxkX3N5c3RlbRgG",
          "IAEoCzIULkluZm9Ib21ld29ybGRTeXN0ZW0SNwoXaW5mb19hY2hpZXZlbWVu",
          "dF9zeXN0ZW0YByABKAsyFi5JbmZvQWNoaWV2ZW1lbnRTeXN0ZW0SIgoMaW5m",
          "b192aXBHYW1lGAggASgLMgwuSW5mb1ZpcEdhbWUSIgoJaW5mb19idWZmGAkg",
          "ASgLMg8uSW5mb0J1ZmZTeXN0ZW0SKQoQaW5mb19pdGVtX3N5c3RlbRgKIAEo",
          "CzIPLkluZm9JdGVtU3lzdGVtEikKEGluZm9fdGFza19zeXN0ZW0YCyABKAsy",
          "Dy5JbmZvVGFza1N5c3RlbRIgCgtpbmZvX3VubG9jaxgMIAEoCzILLkluZm9V",
          "bmxvY2sSKQoSZ2lmdENvZGVVc2FnZVRpbWVzGA0gASgLMg0uSW5mb0dpZnRD",
          "b2RlEiQKDWluZm9fcm91bGV0dGUYDiABKAsyDS5JbmZvUm91bGV0dGUSHgoK",
          "aW5mb19zdG9yZRgPIAEoCzIKLkluZm9TdG9yZRIgCgtpbmZvX3NpZ25JbhgQ",
          "IAEoCzILLkluZm9TaWduSW4SKwoOaW5mb190aW1lX2J1ZmYYESABKAsyEy5J",
          "bmZvVGltZUdsb2JhbEJ1ZmYSIAoLaW5mb19kaWFsb2cYEiABKAsyCy5JbmZv",
          "RGlhbG9nEjIKEWluZm9fZ3Vlc3RDb2xsZWN0GBMgASgLMhcuSW5mb0d1ZXN0",
          "Q29sbGVjdFN5c3RlbRItCg9pbmZvX2F1dG9SZWREb3QYFCABKAsyFC5JbmZv",
          "QXV0b0dvb2RzUmVkRG90EikKEGluZm9fc2hvcF9yZXBhaXIYFSABKAsyDy5J",
          "bmZvU2hvcFJlcGFpchIvChNpbmZvX3NjZW5lX2RlY29yYXRlGBYgASgLMhIu",
          "SW5mb1NjZW5lRGVjb3JhdGUiPgoOSW5mb1Nob3BSZXBhaXISFQoNZnJlZVJl",
          "cGFpck51bRgBIAEoBRIVCg1mcmVlUmVwYWlyVG1zGAIgASgDIoMBChNJbmZv",
          "QXV0b0dvb2RzUmVkRG90EjkKC3JlZERvdF9saXN0GAEgAygLMiQuSW5mb0F1",
          "dG9Hb29kc1JlZERvdC5SZWREb3RMaXN0RW50cnkaMQoPUmVkRG90TGlzdEVu",
          "dHJ5EgsKA2tleRgBIAEoBRINCgV2YWx1ZRgCIAEoBToCOAEitAIKFkluZm9H",
          "dWVzdENvbGxlY3RTeXN0ZW0SOgoKZ3Vlc3RfbGlzdBgBIAMoCzImLkluZm9H",
          "dWVzdENvbGxlY3RTeXN0ZW0uR3Vlc3RMaXN0RW50cnkSEwoLdW5sb2NrX2xp",
          "c3QYAiADKAUSFgoOZmluZEd1ZXN0Q291bnQYAyABKAUSOgoKZ29vZHNfbGlz",
          "dBgEIAMoCzImLkluZm9HdWVzdENvbGxlY3RTeXN0ZW0uR29vZHNMaXN0RW50",
          "cnkaQwoOR3Vlc3RMaXN0RW50cnkSCwoDa2V5GAEgASgFEiAKBXZhbHVlGAIg",
          "ASgLMhEuSW5mb0d1ZXN0Q29sbGVjdDoCOAEaMAoOR29vZHNMaXN0RW50cnkS",
          "CwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4ASKEAQoQSW5mb0d1ZXN0",
          "Q29sbGVjdBILCgN1aWQYASABKAUSDQoFbGV2ZWwYAiABKAUSCwoDZXhwGAMg",
          "ASgFEhAKCGlzVW5sb2NrGAQgASgFEhQKDHJld2FyZFJlY29yZBgFIAMoBRIQ",
          "CghjdXJEcmVzcxgGIAEoBRINCgVpc05ldxgHIAEoBSIvCg9JbmZvVW5sb2Nr",
          "VmFsdWUSDQoFdmFsdWUYASABKAgSDQoFbGV2ZWwYAiABKAUigAEKCkluZm9V",
          "bmxvY2sSLgoKdW5sb2NrX21hcBgBIAMoCzIaLkluZm9VbmxvY2suVW5sb2Nr",
          "TWFwRW50cnkaQgoOVW5sb2NrTWFwRW50cnkSCwoDa2V5GAEgASgFEh8KBXZh",
          "bHVlGAIgASgLMhAuSW5mb1VubG9ja1ZhbHVlOgI4ASIZCghJbnRBcnJheRIN",
          "CgV2YWx1ZRgBIAMoAyKSAQoHSW5mb0JveBIKCgJpZBgBIAEoBRISCgppbnN0",
          "YW5jZUlkGAIgASgFEh4KBnN0YXR1cxgDIAEoDjIOLkluZm9Cb3hTdGF0dXMS",
          "DQoFY29pbnMYBCABKAMSEwoLc2tpbGxQb2ludHMYBSADKAUSEQoJdGltZVN0",
          "YW1wGAYgASgDEhAKCHBvc2l0aW9uGAcgASgFIn0KDkluZm9OZXdiaWVUYXNr",
          "EgoKAmlkGAEgASgFEhEKCW5lZWRWYWx1ZRgCIAMoAxIUCgxjdXJyZW50VmFs",
          "dWUYAyADKAMSHwoGc3RhdHVzGAQgASgOMg8uSW5mb1Rhc2tTdGF0dXMSFQoD",
          "Ym94GAUgASgLMgguSW5mb0JveCL2AgoISW5mb1Rhc2sSCgoCaWQYASABKAUS",
          "EgoKaW5zdGFuY2VJZBgCIAEoBRIfCgZzdGF0dXMYAyABKA4yDy5JbmZvVGFz",
          "a1N0YXR1cxIRCgl0aW1lU3RhbXAYBCABKAMSEgoKZGlmZmljdWx0eRgFIAEo",
          "BRIMCgRleHBzGAYgAygDEisKCW5lZWRWYWx1ZRgHIAMoCzIYLkluZm9UYXNr",
          "Lk5lZWRWYWx1ZUVudHJ5EjEKDGN1cnJlbnRWYWx1ZRgIIAMoCzIbLkluZm9U",
          "YXNrLkN1cnJlbnRWYWx1ZUVudHJ5EhcKBWJveGVzGAkgAygLMgguSW5mb0Jv",
          "eBo7Cg5OZWVkVmFsdWVFbnRyeRILCgNrZXkYASABKAUSGAoFdmFsdWUYAiAB",
          "KAsyCS5JbnRBcnJheToCOAEaPgoRQ3VycmVudFZhbHVlRW50cnkSCwoDa2V5",
          "GAEgASgFEhgKBXZhbHVlGAIgASgLMgkuSW50QXJyYXk6AjgBItcCCg1JbmZv",
          "RGFpbHlUYXNrEgoKAmlkGAEgASgFEhIKCmluc3RhbmNlSWQYAiABKAUSJAoG",
          "c3RhdHVzGAMgASgOMhQuSW5mb0RhaWx5VGFza1N0YXR1cxIRCglzdGFydFRp",
          "bWUYBCABKAMSFAoMY3VycmVudFN0YWdlGAUgASgFEhIKCmRhaWx5U3RhZ2UY",
          "BiABKAUSFAoMY3VycmVudFZhbHVlGAcgASgFEhEKCW5lZWRWYWx1ZRgIIAEo",
          "BRIQCgh0YXNrVGltZRgJIAEoAxINCgV0aW1lcxgKIAEoBRISCgpkYWlseVZh",
          "bHVlGAsgASgFEjIKCmhpc3RvcnlNYXAYDCADKAsyHi5JbmZvRGFpbHlUYXNr",
          "Lkhpc3RvcnlNYXBFbnRyeRoxCg9IaXN0b3J5TWFwRW50cnkSCwoDa2V5GAEg",
          "ASgFEg0KBXZhbHVlGAIgASgFOgI4ASIiChJJbmZvQ2hhbmdlVGFza1RpbWUS",
          "DAoEdGltZRgBIAEoAyIdCg1JbmZvRm9jdXNUYXNrEgwKBHR5cGUYASABKAUi",
          "wQEKDkluZm9UYXNrU3lzdGVtEiMKCm5ld2JpZVRhc2sYASABKAsyDy5JbmZv",
          "TmV3YmllVGFzaxIXCgR0YXNrGAIgASgLMgkuSW5mb1Rhc2sSIQoJZGFpbHlU",
          "YXNrGAMgASgLMg4uSW5mb0RhaWx5VGFzaxIrCg5jaGFuZ2VUYXNrVGltZRgE",
          "IAEoCzITLkluZm9DaGFuZ2VUYXNrVGltZRIhCglmb2N1c1Rhc2sYBSABKAsy",
          "Di5JbmZvRm9jdXNUYXNrIjoKFEluZm9TaG9wQnVmZkFkZEdvb2RzEhMKC3By",
          "b2JhYmlsaXR5GAEgASgFEg0KBWdvb2RzGAIgAygFIo8CCgxJbmZvU2hvcEJ1",
          "ZmYSDwoHcHJpY2VVcBgBIAEoBRIUCgxwcm9kdWNlU3BlZWQYAiABKAUSEAoI",
          "YnV5U3BlZWQYAyABKAUSEwoLZnJlZVByb2R1Y2UYBCABKAUSMQoKZXh0cmFH",
          "b29kcxgFIAMoCzIdLkluZm9TaG9wQnVmZi5FeHRyYUdvb2RzRW50cnkSEQoJ",
          "YXV0b0NvdW50GAYgASgFEg8KB3NhbGVFeHAYByABKAUSJwoIYWRkR29vZHMY",
          "CCADKAsyFS5JbmZvU2hvcEJ1ZmZBZGRHb29kcxoxCg9FeHRyYUdvb2RzRW50",
          "cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4ASKPAwoNSW5mb0J1",
          "ZmZWYWx1ZRIuCghzaG9wQnVmZhgBIAMoCzIcLkluZm9CdWZmVmFsdWUuU2hv",
          "cEJ1ZmZFbnRyeRIRCgllbmVyZ3lNYXgYAiABKAUSEAoIZ3Vlc3RNYXgYAyAB",
          "KAUSEwoLZW5lcmd5U3BlZWQYBCABKAUSEgoKdGFza1RpbWVVcBgFIAEoBRIR",
          "Cgl0YXNrRXhwVXAYBiABKAUSEAoIYm94U3BlZWQYByABKAUSFgoOZ3Vlc3RN",
          "b3ZlU3BlZWQYCCABKAUSFgoOb25saW5lUmV3YXJkVXAYCSABKAUSNgoMZ3Vl",
          "c3RDb2luc1VwGAogAygLMiAuSW5mb0J1ZmZWYWx1ZS5HdWVzdENvaW5zVXBF",
          "bnRyeRo+Cg1TaG9wQnVmZkVudHJ5EgsKA2tleRgBIAEoBRIcCgV2YWx1ZRgC",
          "IAEoCzINLkluZm9TaG9wQnVmZjoCOAEaMwoRR3Vlc3RDb2luc1VwRW50cnkS",
          "CwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4ASKAAQoOSW5mb0J1ZmZT",
          "eXN0ZW0SLgoIYnVmZl9tYXAYASADKAsyHC5JbmZvQnVmZlN5c3RlbS5CdWZm",
          "TWFwRW50cnkaPgoMQnVmZk1hcEVudHJ5EgsKA2tleRgBIAEoBRIdCgV2YWx1",
          "ZRgCIAEoCzIOLkluZm9CdWZmVmFsdWU6AjgBImAKC0luZm9WZXJzaW9uEg8K",
          "B3ZlcnNpb24YASABKAkSEwoLZGF0YVZlcnNpb24YAiABKAUSFAoMbGFzdFNh",
          "dmVUaW1lGAMgASgDEhUKDXN0YXJ0R2FtZVRpbWUYBCABKAMiTgoLSW5mb1Jv",
          "bGVCb3gSEQoJYm94X2NvdW50GAEgASgFEhQKDGJveF91bmxvY2tlchgCIAEo",
          "BRIWCg5vcGVuX2JveF9jb3VudBgDIAEoAyJVCgxJbmZvVGltZURhdGESCgoC",
          "aWQYASABKAUSEgoKdG90YWxDb3VudBgCIAEoBRITCgtyZW1haW5Db3VudBgD",
          "IAEoBRIQCghsYXN0VGltZRgEIAEoAyLKAwoISW5mb1JvbGUSCwoDdWlkGAEg",
          "ASgFEh4KCmluZm9fbGV2ZWwYAiABKAsyCi5JbmZvTGV2ZWwSHwoIY3VycmVu",
          "Y3kYAyABKAsyDS5JbmZvQ3VycmVuY3kSGwoGZW5lcmd5GAQgASgLMgsuSW5m",
          "b0VuZXJneRIoCg1kb3VibGVfcmV3YXJkGAUgASgLMhEuSW5mb0RvdWJsZVJl",
          "d2FyZBIeCghpbmZvX2JveBgGIAEoCzIMLkluZm9Sb2xlQm94EicKD2xhc3Rf",
          "Z3Vlc3RfZGF0YRgHIAEoCzIOLkxhc3RHdWVzdERhdGESFQoFZ3VpZGUYCCAB",
          "KAsyBi5HdWlkZRIjCgVib3hlcxgJIAMoCzIULkluZm9Sb2xlLkJveGVzRW50",
          "cnkSKwoJdGltZXNEYXRhGAogAygLMhguSW5mb1JvbGUuVGltZXNEYXRhRW50",
          "cnkaNgoKQm94ZXNFbnRyeRILCgNrZXkYASABKAUSFwoFdmFsdWUYAiABKAsy",
          "CC5JbmZvQm94OgI4ARo/Cg5UaW1lc0RhdGFFbnRyeRILCgNrZXkYASABKAUS",
          "HAoFdmFsdWUYAiABKAsyDS5JbmZvVGltZURhdGE6AjgBIi4KBUd1aWRlEg0K",
          "BXZhbHVlGAEgASgFEhYKDmhhc1RyaWdnZXJMaXN0GAIgAygFIksKDUxhc3RH",
          "dWVzdERhdGESDQoFYmF0Y2gYASABKAMSDQoFdG90YWwYAiABKAMSDAoEY29z",
          "dBgDIAEoAxIOCgZmaW5pc2gYBCABKAUiOAoJSW5mb0xldmVsEg0KBWxldmVs",
          "GAEgASgFEgsKA2V4cBgCIAEoAxIPCgdjdXJfZXhwGAMgASgDIkYKEEluZm9E",
          "b3VibGVSZXdhcmQSGAoQZG9idWxlX3Jld2FyZF90cxgBIAEoAxIYChBkb2J1",
          "bGVfcmV3YXJkX3J0GAIgASgDIi8KDEluZm9DdXJyZW5jeRINCgVjb2lucxgB",
          "IAEoBRIQCghkaWFtb25kcxgCIAEoBSI1CgpJbmZvRW5lcmd5Eg4KBmVuZXJn",
          "eRgBIAEoBRIXCg9lbmVyZ3lUaW1lU3RhbXAYAiABKAMiiAEKDkluZm9TaG9w",
          "U3lzdGVtEjcKDWluZm9fc2hvcF9tYXAYASADKAsyIC5JbmZvU2hvcFN5c3Rl",
          "bS5JbmZvU2hvcE1hcEVudHJ5Gj0KEEluZm9TaG9wTWFwRW50cnkSCwoDa2V5",
          "GAEgASgFEhgKBXZhbHVlGAIgASgLMgkuSW5mb1Nob3A6AjgBIi8KClJlcGFp",
          "ckluZm8SDgoGc3RhdHVzGAEgASgFEhEKCXJlcGFpclRtcxgCIAEoAyLzBAoI",
          "SW5mb1Nob3ASCwoDdWlkGAEgASgFEgsKA2V4cBgCIAEoBRINCgVsZXZlbBgD",
          "IAEoBRISCgpndWVzdFNwYWNlGAQgASgFEhIKCmNsZXJrU3BhY2UYBSABKAUS",
          "EgoKc3RvcmVTcGFjZRgGIAEoBRIaCgZndWVzdHMYByADKAsyCi5JbmZvR3Vl",
          "c3QSJQoGY2xlcmtzGAggAygLMhUuSW5mb1Nob3AuQ2xlcmtzRW50cnkSGAoF",
          "Z29vZHMYCSADKAsyCS5JbmZvR29vZBIYChBhY3RpdmVTa2lsbEluZGV4GAog",
          "AygFEjMKDWFjdGl2ZVNraWxsSWQYCyADKAsyHC5JbmZvU2hvcC5BY3RpdmVT",
          "a2lsbElkRW50cnkSHwoGc3RhdHVzGAwgASgOMg8uSW5mb1Nob3BTdGF0dXMS",
          "EQoJZ3Vlc3RTbG90GA0gASgFEhgKEHNhbGVfZ29vZHNfY291bnQYDiABKAUS",
          "JwoFYnVmZnMYDyADKAsyGC5JbmZvU2hvcEluZGVwZW5kZW50QnVmZhIfCgpy",
          "ZXBhaXJJbmZvGBAgASgLMgsuUmVwYWlySW5mbxIWCg5kZWNvcmF0ZUJ1ZmZJ",
          "ZBgRIAEoBRIYChBpc05lZWREZWNvcmF0aW9uGBIgASgFEhYKDmJ1aWxkU3Rh",
          "cnRUaW1lGBMgASgDEg8KB21lZGFsSWQYFCABKAUaLQoLQ2xlcmtzRW50cnkS",
          "CwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4ARo0ChJBY3RpdmVTa2ls",
          "bElkRW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgFOgI4ASJNChdJ",
          "bmZvU2hvcEluZGVwZW5kZW50QnVmZhIOCgZidWZmSWQYASABKAUSEwoLb2Zm",
          "U2V0VmFsdWUYAiABKAUSDQoFbGltaXQYAyABKAkizwEKCEluZm9Hb29kEgsK",
          "A3VpZBgBIAEoBRINCgVjb3VudBgCIAEoBRINCgVwcmljZRgDIAEoBRINCgVs",
          "ZXZlbBgEIAEoBRITCgtmYWlsZWRDb3VudBgFIAEoBRIMCgRhdXRvGAYgASgF",
          "Eg8KB2NsZXJrSWQYByABKAUSHwoGc3RhdHVzGAggASgOMg8uSW5mb0dvb2RT",
          "dGF0dXMSHAoUcHJvZHVjaW5nX3N0YXJ0X3RpbWUYCSABKAUSFgoOcHJvZHVj",
          "aW5nX3RpbWUYCiABKAUiQwoJSW5mb1NraWxsEgoKAmlkGAEgASgFEgsKA2V4",
          "cBgCIAEoBRINCgVsZXZlbBgDIAEoBRIOCgZhY3RpdmUYBCABKAgigQEKD0lu",
          "Zm9DbGVya1N5c3RlbRIxCgljbGVya19tYXAYASADKAsyHi5JbmZvQ2xlcmtT",
          "eXN0ZW0uQ2xlcmtNYXBFbnRyeRo7Cg1DbGVya01hcEVudHJ5EgsKA2tleRgB",
          "IAEoBRIZCgV2YWx1ZRgCIAEoCzIKLkluZm9DbGVyazoCOAEi6QEKCUluZm9D",
          "bGVyaxIKCgJpZBgBIAEoBRILCgNleHAYAiABKAUSDQoFbGV2ZWwYAyABKAUS",
          "FAoMaGlzdG9yeUxldmVsGAQgASgFEhUKDWJ1eVNraWxsUG9pbnQYBSABKAUS",
          "FQoNYnV5U2tpbGxUaW1lcxgGIAEoBRISCgpza2lsbFBvaW50GAcgASgFEhkK",
          "BXNraWxsGAggAygLMgouSW5mb1NraWxsEhMKC2FjdGl2ZVNraWxsGAkgAygF",
          "Eg4KBnNob3BJZBgKIAEoBRIcCgZzdGF0dXMYCyABKA4yDC5DbGVya1N0YXR1",
          "cyKBAQoPSW5mb0d1ZXN0U3lzdGVtEjEKCWd1ZXN0X21hcBgBIAMoCzIeLklu",
          "Zm9HdWVzdFN5c3RlbS5HdWVzdE1hcEVudHJ5GjsKDUd1ZXN0TWFwRW50cnkS",
          "CwoDa2V5GAEgASgFEhkKBXZhbHVlGAIgASgLMgouSW5mb0d1ZXN0OgI4ASLa",
          "AgoJSW5mb0d1ZXN0EgsKA3VpZBgBIAEoBRISCgppbnN0YW5jZUlkGAIgASgF",
          "EhIKCnRvdGFsQ29pbnMYAyABKAUSDQoFY29pbnMYBCABKAUSEQoJdGltZVN0",
          "YW1wGAUgASgDEgwKBHNsb3QYBiABKAUSGAoFZ29vZHMYByADKAsyCS5JbmZv",
          "R29vZBIbCgh0bXBHb29kcxgIIAEoCzIJLkluZm9Hb29kEhIKCmJhdGNoQ291",
          "bnQYCSABKAUSHQoKZXh0cmFHb29kcxgKIAEoCzIJLkluZm9Hb29kEhgKEGNv",
          "bnN1bWVUaW1lU3RhbXAYCyABKAMSGAoQY29uc3VtZUFmdGVyVGltZRgMIAEo",
          "AxIYChBmaW5pc2hOZWVkTnVtYmVyGA0gASgFEhgKEGNyZWF0ZU5lZWROdW1i",
          "ZXIYDiABKAUSFgoOY29uc3VtZUdvb2RzSWQYDyABKAUi6AIKFUluZm9BY2hp",
          "ZXZlbWVudFN5c3RlbRI3CglhY2hfaXRlbXMYASADKAsyJC5JbmZvQWNoaWV2",
          "ZW1lbnRTeXN0ZW0uQWNoSXRlbXNFbnRyeRIcCgVwb2ludBgCIAEoCzINLklu",
          "Zm9BY2hQb2ludBIdCgdzaG93aW5nGAMgASgLMgwuSW5mb0FjaFNob3cSGwoH",
          "aW5mb19hZBgEIAEoCzIKLkluZm9BY2hBZBI7CgtzdG9yZV9pdGVtcxgFIAMo",
          "CzImLkluZm9BY2hpZXZlbWVudFN5c3RlbS5TdG9yZUl0ZW1zRW50cnkaOQoN",
          "QWNoSXRlbXNFbnRyeRILCgNrZXkYASABKAUSFwoFdmFsdWUYAiABKAsyCC5J",
          "QVNJdGVtOgI4ARpECg9TdG9yZUl0ZW1zRW50cnkSCwoDa2V5GAEgASgFEiAK",
          "BXZhbHVlGAIgASgLMhEuSW5mb0FjaFN0b3JlSXRlbToCOAEiaAoQSW5mb0Fj",
          "aFN0b3JlSXRlbRIKCgJpZBgBIAEoBRIjCgZzdGF0dXMYAiABKA4yEy5JQVNT",
          "dG9yZUl0ZW1TdGF0dXMSEwoLZXhjaGFuZ2VfdHMYAyABKAMSDgoGdHJ5X3Rz",
          "GAQgASgDIiQKC0luZm9BY2hTaG93EhUKDXNob3dpbmdfaW5kZXgYASABKAUi",
          "oAEKDEluZm9BY2hQb2ludBIRCglhY2hfcG9pbnQYASABKAMSGAoQcmVtYWlu",
          "X2FjaF9wb2ludBgCIAEoAxIpCgZzdGF0dXMYAyADKAsyGS5JbmZvQWNoUG9p",
          "bnQuU3RhdHVzRW50cnkaOAoLU3RhdHVzRW50cnkSCwoDa2V5GAEgASgFEhgK",
          "BXZhbHVlGAIgASgOMgkuSUFTdGF0dXM6AjgBIiEKCUluZm9BY2hBZBIUCgxh",
          "ZF90aW1lc3RhbXAYASABKAMibQoHSUFTSXRlbRIKCgJpZBgBIAEoBRIdCgZz",
          "dGF0dXMYAiABKA4yDS5JQVNJdGVtdGF0dXMSFQoNY3VycmVudF92YWx1ZRgD",
          "IAEoAxISCgpuZWVkX3ZhbHVlGAQgASgDEgwKBGJ1ZmYYBSABKAUiZgoTSW5m",
          "b0hvbWV3b3JsZFVubG9jaxIgCgZzdGF0dXMYASABKA4yEC5Ib21ld29ybGRT",
          "dGF0dXMSFAoMY2RfdGltZXN0YW1wGAIgASgDEhcKD2FkX2NkX3RpbWVzdGFt",
          "cBgDIAEoAyKOAQoWSW5mb0hvbWV3b3JsZEZsb3dlcmJlZBIOCgZiZWRfaWQY",
          "ASABKAUSEQoJZmxvd2VyX2lkGAIgASgFEg0KBWxldmVsGAMgASgFEikKBnN0",
          "YXR1cxgEIAEoDjIZLkhvbWV3b3JsZEZsb3dlcmJlZFN0YXR1cxIXCg9zdGFy",
          "dF90aW1lc3RhbXAYBSABKAMiYAoRSW5mb0hvbWV3b3JsZEZpc2gSDQoFbGV2",
          "ZWwYASABKAUSDQoFdGltZXMYAiABKAUSFAoMY2RfdGltZXN0YW1wGAMgASgD",
          "EhcKD2FkX2NkX3RpbWVzdGFtcBgEIAEoAyImChJJbmZvSG9tZXdvcmxkU3Rv",
          "cmUSEAoIY2FwYWNpdHkYASABKAUiwAEKEkluZm9Ib21ld29ybGRBc3NldBIQ",
          "CghjdXJIb3VzZRgBIAEoBRIOCgZjdXJDYXIYAiABKAUSEwoLY3VyUGV0SG91",
          "c2UYAyABKAUSLwoGYXNzZXRzGAQgAygLMh8uSW5mb0hvbWV3b3JsZEFzc2V0",
          "LkFzc2V0c0VudHJ5GkIKC0Fzc2V0c0VudHJ5EgsKA2tleRgBIAEoBRIiCgV2",
          "YWx1ZRgCIAEoCzITLkhvbWV3b3JsZEFzc2V0SXRlbToCOAEiZwoSSG9tZXdv",
          "cmxkQXNzZXRJdGVtEgoKAmlkGAEgASgFEiUKBnN0YXR1cxgCIAEoDjIVLkhv",
          "bWV3b3JsZEFzc2V0U3RhdHVzEhAKCGhhc1Nob3duGAMgASgIEgwKBHR5cGUY",
          "BCABKAUilQIKEEluZm9Ib21ld29ybGRQZXQSDgoGcGV0X2lkGAEgASgFEgsK",
          "A2V4cBgCIAEoBRINCgVsZXZlbBgDIAEoBRIjCgZzdGF0dXMYBCABKA4yEy5I",
          "b21ld29ybGRQZXRTdGF0dXMSGAoQcmV3YXJkX3RpbWVzdGFtcBgFIAEoAxIW",
          "Cg5mZWVkX3RpbWVzdGFtcBgGIAEoAxISCgpmZWVkX3RpbWVzGAcgASgFEhAK",
          "CHBldF9uYW1lGAggASgJEioKEml0ZW1faG9tZXdvcmxkX3BldBgJIAEoCzIO",
          "LkluZm9JdGVtQXJyYXkSLAoUcmV3YXJkX2hvbWV3b3JsZF9wZXQYCiABKAsy",
          "Di5JbmZvSXRlbUFycmF5ItMCChNJbmZvSG9tZXdvcmxkU3lzdGVtEi4KEGhv",
          "bWV3b3JsZF91bmxvY2sYASABKAsyFC5JbmZvSG9tZXdvcmxkVW5sb2NrEisK",
          "CmZsb3dlcmJlZHMYAiADKAsyFy5JbmZvSG9tZXdvcmxkRmxvd2VyYmVkEioK",
          "DmhvbWV3b3JsZF9maXNoGAMgASgLMhIuSW5mb0hvbWV3b3JsZEZpc2gSLAoP",
          "aG9tZXdvcmxkX3N0b3JlGAQgASgLMhMuSW5mb0hvbWV3b3JsZFN0b3JlEiwK",
          "D2hvbWV3b3JsZF9hc3NldBgFIAEoCzITLkluZm9Ib21ld29ybGRBc3NldBIt",
          "ChVob21ld29ybGRfcmV3YXJkX2xpc3QYBiADKAsyDi5JbmZvSXRlbUFycmF5",
          "EigKDWhvbWV3b3JsZF9wZXQYByADKAsyES5JbmZvSG9tZXdvcmxkUGV0IkYK",
          "C0luZm9WaXBHYW1lEhgKEGlzUGFzc05ld01pc3Npb24YASABKAUSHQoLdmlw",
          "RGF0YUxpc3QYAiADKAsyCC5WaXBEYXRhIncKB1ZpcERhdGESCwoDdWlkGAEg",
          "ASgFEg0KBWxldmVsGAIgASgFEhQKDGZhdm9yYWJpbGl0eRgDIAEoBRIQCghp",
          "c1VubG9jaxgEIAEoBRIOCgZlbmVyZ3kYBSABKAUSGAoQcmVjb3ZlclRpbWVT",
          "dGFtcBgGIAEoAyLJAQoOSW5mb0l0ZW1TeXN0ZW0SJgoOaXRlbV9ob21ld29y",
          "bGQYASABKAsyDi5JbmZvSXRlbUFycmF5EiwKGWl0ZW1faG9tZXdvcmxkX0dv",
          "b2RzU2hlbGYYAiADKAsyCS5JbmZvSXRlbRIuChZpdGVtX2hvbWV3b3JsZF9w",
          "ZXRfYmFnGAMgAygLMg4uSW5mb0l0ZW1BcnJheRIxChlpdGVtX2hvbWV3b3Js",
          "ZF9wZXRfcmV3YXJkGAQgAygLMg4uSW5mb0l0ZW1BcnJheSIlCghJbmZvSXRl",
          "bRIKCgJpZBgBIAEoBRINCgVjb3VudBgDIAEoBSItCg1JbmZvSXRlbUFycmF5",
          "EhwKCWl0ZW1fbGlzdBgBIAMoCzIJLkluZm9JdGVtInUKC0luZm9JdGVtTWFw",
          "EisKCGl0ZW1fbWFwGAEgAygLMhkuSW5mb0l0ZW1NYXAuSXRlbU1hcEVudHJ5",
          "GjkKDEl0ZW1NYXBFbnRyeRILCgNrZXkYASABKAUSGAoFdmFsdWUYAiABKAsy",
          "CS5JbmZvSXRlbToCOAEibwoMSW5mb0dpZnRDb2RlEi4KCXVzZWRfY29kZRgB",
          "IAMoCzIbLkluZm9HaWZ0Q29kZS5Vc2VkQ29kZUVudHJ5Gi8KDVVzZWRDb2Rl",
          "RW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVlGAIgASgJOgI4ASKcAQoMSW5m",
          "b1JvdWxldHRlEhgKEHRvZGF5QXBwZWFyQ291bnQYASABKAUSGAoQdG9kYXlH",
          "YWluZWRDb3VudBgCIAEoBRIbChNsYXN0QXBwZWFyVGltZXN0YW1wGAMgASgD",
          "Eh4KFmxhc3REaXNhcHBlYXJUaW1lc3RhbXAYBCABKAMSGwoTbGFzdFJld2Fy",
          "ZFRpbWVzdGFtcBgFIAEoAyLqAQoJSW5mb1N0b3JlEhYKDmxpbWl0R2lmdENv",
          "dW50GAEgASgFEhUKDWxpbWl0R2lmdFRpbWUYAiABKAUSFQoNZGlhbW9uZHND",
          "b3VudBgDIAEoBRIUCgxkaWFtb25kc1RpbWUYBCABKAUSFgoOc2lsdmVyQm94",
          "Q291bnQYBSABKAUSFQoNc2lsdmVyQm94VGltZRgGIAEoBRIVCg1nb2xkZW5C",
          "b3hUaW1lGAcgASgFEhMKC2V2aWxCb3hUaW1lGAggASgFEhQKDGZyZWVHaWZ0",
          "VGltZRgJIAEoBRIQCghnaWZ0TGlzdBgKIAMoBSJPCgpJbmZvU2lnbkluEhMK",
          "C3JlY2VpdmVkRGF5GAEgASgFEhAKCGxvZ2luRGF5GAIgASgFEhoKEmxhc3RM",
          "b2dpblRpbWVzdGFtcBgDIAEoAyJ3ChJUaW1lR2xvYmFsQnVmZkl0ZW0SCgoC",
          "aWQYASABKAUSEwoLZ2VuZXJhdGVfdHMYAiABKAMSFAoMZHVyYXRpb25UaW1l",
          "GAMgASgFEg0KBWxpbWl0GAQgAygFEg0KBXZhbHVlGAUgASgFEgwKBHR5cGUY",
          "BiABKAUiOAoSSW5mb1RpbWVHbG9iYWxCdWZmEiIKBWJ1ZmZzGAEgAygLMhMu",
          "VGltZUdsb2JhbEJ1ZmZJdGVtIj0KCkluZm9EaWFsb2cSFQoNZGlhbG9nT3Jk",
          "ZXJJZBgFIAEoBRIYChBkaWFsb2dSYW5kb21MaXN0GAYgAygFIm8KDEluZm9E",
          "ZWNvcmF0ZRIKCgJpZBgBIAEoBRIjCgZzdGF0dXMYAiABKA4yEy5JbmZvRGVj",
          "b3JhdGVTdGF0dXMSGQoRZGVjb3JhdGVUaW1lc3RhbXAYAyABKAUSEwoLaGFz",
          "U2hvd0luZm8YBCABKAUijwEKD0luZm9EZWNvcmF0ZU1hcBI4CgxkZWNvcmF0",
          "ZUxpc3QYASADKAsyIi5JbmZvRGVjb3JhdGVNYXAuRGVjb3JhdGVMaXN0RW50",
          "cnkaQgoRRGVjb3JhdGVMaXN0RW50cnkSCwoDa2V5GAEgASgFEhwKBXZhbHVl",
          "GAIgASgLMg0uSW5mb0RlY29yYXRlOgI4ASKZAgoRSW5mb1NjZW5lRGVjb3Jh",
          "dGUSQAoPY3VyRGVjb3JhdGVMaXN0GAEgAygLMicuSW5mb1NjZW5lRGVjb3Jh",
          "dGUuQ3VyRGVjb3JhdGVMaXN0RW50cnkSQAoPYWxsRGVjb3JhdGVMaXN0GAIg",
          "AygLMicuSW5mb1NjZW5lRGVjb3JhdGUuQWxsRGVjb3JhdGVMaXN0RW50cnka",
          "NgoUQ3VyRGVjb3JhdGVMaXN0RW50cnkSCwoDa2V5GAEgASgFEg0KBXZhbHVl",
          "GAIgASgFOgI4ARpIChRBbGxEZWNvcmF0ZUxpc3RFbnRyeRILCgNrZXkYASAB",
          "KAUSHwoFdmFsdWUYAiABKAsyEC5JbmZvRGVjb3JhdGVNYXA6AjgBYgZwcm90",
          "bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { global::KeywordReflection.Descriptor, },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoPlayer), global::InfoPlayer.Parser, new[]{ "info_version", "info_role", "info_shop_system", "info_clerk_system", "info_guest_system", "info_homeworld_system", "info_achievement_system", "info_vipGame", "info_buff", "info_item_system", "info_task_system", "info_unlock", "giftCodeUsageTimes", "info_roulette", "info_store", "info_signIn", "info_time_buff", "info_dialog", "info_guestCollect", "info_autoRedDot", "info_shop_repair", "info_scene_decorate" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoShopRepair), global::InfoShopRepair.Parser, new[]{ "freeRepairNum", "freeRepairTms" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoAutoGoodsRedDot), global::InfoAutoGoodsRedDot.Parser, new[]{ "redDot_list" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoGuestCollectSystem), global::InfoGuestCollectSystem.Parser, new[]{ "guest_list", "unlock_list", "findGuestCount", "goods_list" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoGuestCollect), global::InfoGuestCollect.Parser, new[]{ "uid", "level", "exp", "isUnlock", "rewardRecord", "curDress", "isNew" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoUnlockValue), global::InfoUnlockValue.Parser, new[]{ "value", "level" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoUnlock), global::InfoUnlock.Parser, new[]{ "unlock_map" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::IntArray), global::IntArray.Parser, new[]{ "value" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoBox), global::InfoBox.Parser, new[]{ "id", "instanceId", "status", "coins", "skillPoints", "timeStamp", "position" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoNewbieTask), global::InfoNewbieTask.Parser, new[]{ "id", "needValue", "currentValue", "status", "box" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoTask), global::InfoTask.Parser, new[]{ "id", "instanceId", "status", "timeStamp", "difficulty", "exps", "needValue", "currentValue", "boxes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoDailyTask), global::InfoDailyTask.Parser, new[]{ "id", "instanceId", "status", "startTime", "currentStage", "dailyStage", "currentValue", "needValue", "taskTime", "times", "dailyValue", "historyMap" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoChangeTaskTime), global::InfoChangeTaskTime.Parser, new[]{ "time" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoFocusTask), global::InfoFocusTask.Parser, new[]{ "type" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoTaskSystem), global::InfoTaskSystem.Parser, new[]{ "newbieTask", "task", "dailyTask", "changeTaskTime", "focusTask" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoShopBuffAddGoods), global::InfoShopBuffAddGoods.Parser, new[]{ "probability", "goods" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoShopBuff), global::InfoShopBuff.Parser, new[]{ "priceUp", "produceSpeed", "buySpeed", "freeProduce", "extraGoods", "autoCount", "saleExp", "addGoods" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoBuffValue), global::InfoBuffValue.Parser, new[]{ "shopBuff", "energyMax", "guestMax", "energySpeed", "taskTimeUp", "taskExpUp", "boxSpeed", "guestMoveSpeed", "onlineRewardUp", "guestCoinsUp" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoBuffSystem), global::InfoBuffSystem.Parser, new[]{ "buff_map" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoVersion), global::InfoVersion.Parser, new[]{ "version", "dataVersion", "lastSaveTime", "startGameTime" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoRoleBox), global::InfoRoleBox.Parser, new[]{ "box_count", "box_unlocker", "open_box_count" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoTimeData), global::InfoTimeData.Parser, new[]{ "id", "totalCount", "remainCount", "lastTime" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoRole), global::InfoRole.Parser, new[]{ "uid", "info_level", "currency", "energy", "double_reward", "info_box", "last_guest_data", "guide", "boxes", "timesData" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::Guide), global::Guide.Parser, new[]{ "value", "hasTriggerList" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LastGuestData), global::LastGuestData.Parser, new[]{ "batch", "total", "cost", "finish" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoLevel), global::InfoLevel.Parser, new[]{ "level", "exp", "cur_exp" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoDoubleReward), global::InfoDoubleReward.Parser, new[]{ "dobule_reward_ts", "dobule_reward_rt" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoCurrency), global::InfoCurrency.Parser, new[]{ "coins", "diamonds" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoEnergy), global::InfoEnergy.Parser, new[]{ "energy", "energyTimeStamp" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoShopSystem), global::InfoShopSystem.Parser, new[]{ "info_shop_map" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::RepairInfo), global::RepairInfo.Parser, new[]{ "status", "repairTms" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoShop), global::InfoShop.Parser, new[]{ "uid", "exp", "level", "guestSpace", "clerkSpace", "storeSpace", "guests", "clerks", "goods", "activeSkillIndex", "activeSkillId", "status", "guestSlot", "sale_goods_count", "buffs", "repairInfo", "decorateBuffId", "isNeedDecoration", "buildStartTime", "medalId" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoShopIndependentBuff), global::InfoShopIndependentBuff.Parser, new[]{ "buffId", "offSetValue", "limit" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoGood), global::InfoGood.Parser, new[]{ "uid", "count", "price", "level", "failedCount", "auto", "clerkId", "status", "producing_start_time", "producing_time" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoSkill), global::InfoSkill.Parser, new[]{ "id", "exp", "level", "active" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoClerkSystem), global::InfoClerkSystem.Parser, new[]{ "clerk_map" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoClerk), global::InfoClerk.Parser, new[]{ "id", "exp", "level", "historyLevel", "buySkillPoint", "buySkillTimes", "skillPoint", "skill", "activeSkill", "shopId", "status" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoGuestSystem), global::InfoGuestSystem.Parser, new[]{ "guest_map" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoGuest), global::InfoGuest.Parser, new[]{ "uid", "instanceId", "totalCoins", "coins", "timeStamp", "slot", "goods", "tmpGoods", "batchCount", "extraGoods", "consumeTimeStamp", "consumeAfterTime", "finishNeedNumber", "createNeedNumber", "consumeGoodsId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoAchievementSystem), global::InfoAchievementSystem.Parser, new[]{ "ach_items", "point", "showing", "info_ad", "store_items" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoAchStoreItem), global::InfoAchStoreItem.Parser, new[]{ "id", "status", "exchange_ts", "try_ts" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoAchShow), global::InfoAchShow.Parser, new[]{ "showing_index" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoAchPoint), global::InfoAchPoint.Parser, new[]{ "ach_point", "remain_ach_point", "status" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoAchAd), global::InfoAchAd.Parser, new[]{ "ad_timestamp" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::IASItem), global::IASItem.Parser, new[]{ "id", "status", "current_value", "need_value", "buff" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoHomeworldUnlock), global::InfoHomeworldUnlock.Parser, new[]{ "status", "cd_timestamp", "ad_cd_timestamp" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoHomeworldFlowerbed), global::InfoHomeworldFlowerbed.Parser, new[]{ "bed_id", "flower_id", "level", "status", "start_timestamp" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoHomeworldFish), global::InfoHomeworldFish.Parser, new[]{ "level", "times", "cd_timestamp", "ad_cd_timestamp" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoHomeworldStore), global::InfoHomeworldStore.Parser, new[]{ "capacity" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoHomeworldAsset), global::InfoHomeworldAsset.Parser, new[]{ "curHouse", "curCar", "curPetHouse", "assets" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::HomeworldAssetItem), global::HomeworldAssetItem.Parser, new[]{ "id", "status", "hasShown", "type" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoHomeworldPet), global::InfoHomeworldPet.Parser, new[]{ "pet_id", "exp", "level", "status", "reward_timestamp", "feed_timestamp", "feed_times", "pet_name", "item_homeworld_pet", "reward_homeworld_pet" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoHomeworldSystem), global::InfoHomeworldSystem.Parser, new[]{ "homeworld_unlock", "flowerbeds", "homeworld_fish", "homeworld_store", "homeworld_asset", "homeworld_reward_list", "homeworld_pet" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoVipGame), global::InfoVipGame.Parser, new[]{ "isPassNewMission", "vipDataList" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::VipData), global::VipData.Parser, new[]{ "uid", "level", "favorability", "isUnlock", "energy", "recoverTimeStamp" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoItemSystem), global::InfoItemSystem.Parser, new[]{ "item_homeworld", "item_homeworld_GoodsShelf", "item_homeworld_pet_bag", "item_homeworld_pet_reward" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoItem), global::InfoItem.Parser, new[]{ "id", "count" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoItemArray), global::InfoItemArray.Parser, new[]{ "item_list" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoItemMap), global::InfoItemMap.Parser, new[]{ "item_map" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoGiftCode), global::InfoGiftCode.Parser, new[]{ "used_code" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoRoulette), global::InfoRoulette.Parser, new[]{ "todayAppearCount", "todayGainedCount", "lastAppearTimestamp", "lastDisappearTimestamp", "lastRewardTimestamp" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoStore), global::InfoStore.Parser, new[]{ "limitGiftCount", "limitGiftTime", "diamondsCount", "diamondsTime", "silverBoxCount", "silverBoxTime", "goldenBoxTime", "evilBoxTime", "freeGiftTime", "giftList" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoSignIn), global::InfoSignIn.Parser, new[]{ "receivedDay", "loginDay", "lastLoginTimestamp" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TimeGlobalBuffItem), global::TimeGlobalBuffItem.Parser, new[]{ "id", "generate_ts", "durationTime", "limit", "value", "type" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoTimeGlobalBuff), global::InfoTimeGlobalBuff.Parser, new[]{ "buffs" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoDialog), global::InfoDialog.Parser, new[]{ "dialogOrderId", "dialogRandomList" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoDecorate), global::InfoDecorate.Parser, new[]{ "id", "status", "decorateTimestamp", "hasShowInfo" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoDecorateMap), global::InfoDecorateMap.Parser, new[]{ "decorateList" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::InfoSceneDecorate), global::InfoSceneDecorate.Parser, new[]{ "curDecorateList", "allDecorateList" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
        }));
  }
  #endregion

}
#region Messages
public sealed partial class InfoPlayer : pb::IMessage<InfoPlayer>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoPlayer> _parser = new pb::MessageParser<InfoPlayer>(() => new InfoPlayer());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoPlayer> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoPlayer() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoPlayer(InfoPlayer other) : this() {
    info_version_ = other.info_version_ != null ? other.info_version_.Clone() : null;
    info_role_ = other.info_role_ != null ? other.info_role_.Clone() : null;
    info_shop_system_ = other.info_shop_system_ != null ? other.info_shop_system_.Clone() : null;
    info_clerk_system_ = other.info_clerk_system_ != null ? other.info_clerk_system_.Clone() : null;
    info_guest_system_ = other.info_guest_system_ != null ? other.info_guest_system_.Clone() : null;
    info_homeworld_system_ = other.info_homeworld_system_ != null ? other.info_homeworld_system_.Clone() : null;
    info_achievement_system_ = other.info_achievement_system_ != null ? other.info_achievement_system_.Clone() : null;
    info_vipGame_ = other.info_vipGame_ != null ? other.info_vipGame_.Clone() : null;
    info_buff_ = other.info_buff_ != null ? other.info_buff_.Clone() : null;
    info_item_system_ = other.info_item_system_ != null ? other.info_item_system_.Clone() : null;
    info_task_system_ = other.info_task_system_ != null ? other.info_task_system_.Clone() : null;
    info_unlock_ = other.info_unlock_ != null ? other.info_unlock_.Clone() : null;
    giftCodeUsageTimes_ = other.giftCodeUsageTimes_ != null ? other.giftCodeUsageTimes_.Clone() : null;
    info_roulette_ = other.info_roulette_ != null ? other.info_roulette_.Clone() : null;
    info_store_ = other.info_store_ != null ? other.info_store_.Clone() : null;
    info_signIn_ = other.info_signIn_ != null ? other.info_signIn_.Clone() : null;
    info_time_buff_ = other.info_time_buff_ != null ? other.info_time_buff_.Clone() : null;
    info_dialog_ = other.info_dialog_ != null ? other.info_dialog_.Clone() : null;
    info_guestCollect_ = other.info_guestCollect_ != null ? other.info_guestCollect_.Clone() : null;
    info_autoRedDot_ = other.info_autoRedDot_ != null ? other.info_autoRedDot_.Clone() : null;
    info_shop_repair_ = other.info_shop_repair_ != null ? other.info_shop_repair_.Clone() : null;
    info_scene_decorate_ = other.info_scene_decorate_ != null ? other.info_scene_decorate_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoPlayer Clone() {
    return new InfoPlayer(this);
  }

  /// <summary>Field number for the "info_version" field.</summary>
  public const int info_versionFieldNumber = 1;
  private global::InfoVersion info_version_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoVersion info_version {
    get { return info_version_; }
    set {
      info_version_ = value;
    }
  }

  /// <summary>Field number for the "info_role" field.</summary>
  public const int info_roleFieldNumber = 2;
  private global::InfoRole info_role_;
  /// <summary>
  /// 角色相关信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoRole info_role {
    get { return info_role_; }
    set {
      info_role_ = value;
    }
  }

  /// <summary>Field number for the "info_shop_system" field.</summary>
  public const int info_shop_systemFieldNumber = 3;
  private global::InfoShopSystem info_shop_system_;
  /// <summary>
  /// 店铺
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoShopSystem info_shop_system {
    get { return info_shop_system_; }
    set {
      info_shop_system_ = value;
    }
  }

  /// <summary>Field number for the "info_clerk_system" field.</summary>
  public const int info_clerk_systemFieldNumber = 4;
  private global::InfoClerkSystem info_clerk_system_;
  /// <summary>
  /// 店员
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoClerkSystem info_clerk_system {
    get { return info_clerk_system_; }
    set {
      info_clerk_system_ = value;
    }
  }

  /// <summary>Field number for the "info_guest_system" field.</summary>
  public const int info_guest_systemFieldNumber = 5;
  private global::InfoGuestSystem info_guest_system_;
  /// <summary>
  /// 客人
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoGuestSystem info_guest_system {
    get { return info_guest_system_; }
    set {
      info_guest_system_ = value;
    }
  }

  /// <summary>Field number for the "info_homeworld_system" field.</summary>
  public const int info_homeworld_systemFieldNumber = 6;
  private global::InfoHomeworldSystem info_homeworld_system_;
  /// <summary>
  /// 家园
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoHomeworldSystem info_homeworld_system {
    get { return info_homeworld_system_; }
    set {
      info_homeworld_system_ = value;
    }
  }

  /// <summary>Field number for the "info_achievement_system" field.</summary>
  public const int info_achievement_systemFieldNumber = 7;
  private global::InfoAchievementSystem info_achievement_system_;
  /// <summary>
  /// 成就
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoAchievementSystem info_achievement_system {
    get { return info_achievement_system_; }
    set {
      info_achievement_system_ = value;
    }
  }

  /// <summary>Field number for the "info_vipGame" field.</summary>
  public const int info_vipGameFieldNumber = 8;
  private global::InfoVipGame info_vipGame_;
  /// <summary>
  /// 小游戏
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoVipGame info_vipGame {
    get { return info_vipGame_; }
    set {
      info_vipGame_ = value;
    }
  }

  /// <summary>Field number for the "info_buff" field.</summary>
  public const int info_buffFieldNumber = 9;
  private global::InfoBuffSystem info_buff_;
  /// <summary>
  /// 全局buff
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoBuffSystem info_buff {
    get { return info_buff_; }
    set {
      info_buff_ = value;
    }
  }

  /// <summary>Field number for the "info_item_system" field.</summary>
  public const int info_item_systemFieldNumber = 10;
  private global::InfoItemSystem info_item_system_;
  /// <summary>
  /// 道具
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoItemSystem info_item_system {
    get { return info_item_system_; }
    set {
      info_item_system_ = value;
    }
  }

  /// <summary>Field number for the "info_task_system" field.</summary>
  public const int info_task_systemFieldNumber = 11;
  private global::InfoTaskSystem info_task_system_;
  /// <summary>
  /// 任务
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoTaskSystem info_task_system {
    get { return info_task_system_; }
    set {
      info_task_system_ = value;
    }
  }

  /// <summary>Field number for the "info_unlock" field.</summary>
  public const int info_unlockFieldNumber = 12;
  private global::InfoUnlock info_unlock_;
  /// <summary>
  /// 功能解锁
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoUnlock info_unlock {
    get { return info_unlock_; }
    set {
      info_unlock_ = value;
    }
  }

  /// <summary>Field number for the "giftCodeUsageTimes" field.</summary>
  public const int giftCodeUsageTimesFieldNumber = 13;
  private global::InfoGiftCode giftCodeUsageTimes_;
  /// <summary>
  /// 礼品码
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoGiftCode giftCodeUsageTimes {
    get { return giftCodeUsageTimes_; }
    set {
      giftCodeUsageTimes_ = value;
    }
  }

  /// <summary>Field number for the "info_roulette" field.</summary>
  public const int info_rouletteFieldNumber = 14;
  private global::InfoRoulette info_roulette_;
  /// <summary>
  /// 转盘状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoRoulette info_roulette {
    get { return info_roulette_; }
    set {
      info_roulette_ = value;
    }
  }

  /// <summary>Field number for the "info_store" field.</summary>
  public const int info_storeFieldNumber = 15;
  private global::InfoStore info_store_;
  /// <summary>
  /// 商城
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoStore info_store {
    get { return info_store_; }
    set {
      info_store_ = value;
    }
  }

  /// <summary>Field number for the "info_signIn" field.</summary>
  public const int info_signInFieldNumber = 16;
  private global::InfoSignIn info_signIn_;
  /// <summary>
  /// 七日签到
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoSignIn info_signIn {
    get { return info_signIn_; }
    set {
      info_signIn_ = value;
    }
  }

  /// <summary>Field number for the "info_time_buff" field.</summary>
  public const int info_time_buffFieldNumber = 17;
  private global::InfoTimeGlobalBuff info_time_buff_;
  /// <summary>
  /// 全局计时buff
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoTimeGlobalBuff info_time_buff {
    get { return info_time_buff_; }
    set {
      info_time_buff_ = value;
    }
  }

  /// <summary>Field number for the "info_dialog" field.</summary>
  public const int info_dialogFieldNumber = 18;
  private global::InfoDialog info_dialog_;
  /// <summary>
  /// 剧情对话
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoDialog info_dialog {
    get { return info_dialog_; }
    set {
      info_dialog_ = value;
    }
  }

  /// <summary>Field number for the "info_guestCollect" field.</summary>
  public const int info_guestCollectFieldNumber = 19;
  private global::InfoGuestCollectSystem info_guestCollect_;
  /// <summary>
  /// 客人图鉴
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoGuestCollectSystem info_guestCollect {
    get { return info_guestCollect_; }
    set {
      info_guestCollect_ = value;
    }
  }

  /// <summary>Field number for the "info_autoRedDot" field.</summary>
  public const int info_autoRedDotFieldNumber = 20;
  private global::InfoAutoGoodsRedDot info_autoRedDot_;
  /// <summary>
  /// 自动补货红点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoAutoGoodsRedDot info_autoRedDot {
    get { return info_autoRedDot_; }
    set {
      info_autoRedDot_ = value;
    }
  }

  /// <summary>Field number for the "info_shop_repair" field.</summary>
  public const int info_shop_repairFieldNumber = 21;
  private global::InfoShopRepair info_shop_repair_;
  /// <summary>
  /// 店铺修复全局数据存储
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoShopRepair info_shop_repair {
    get { return info_shop_repair_; }
    set {
      info_shop_repair_ = value;
    }
  }

  /// <summary>Field number for the "info_scene_decorate" field.</summary>
  public const int info_scene_decorateFieldNumber = 22;
  private global::InfoSceneDecorate info_scene_decorate_;
  /// <summary>
  /// 场景换装
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoSceneDecorate info_scene_decorate {
    get { return info_scene_decorate_; }
    set {
      info_scene_decorate_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoPlayer);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoPlayer other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(info_version, other.info_version)) return false;
    if (!object.Equals(info_role, other.info_role)) return false;
    if (!object.Equals(info_shop_system, other.info_shop_system)) return false;
    if (!object.Equals(info_clerk_system, other.info_clerk_system)) return false;
    if (!object.Equals(info_guest_system, other.info_guest_system)) return false;
    if (!object.Equals(info_homeworld_system, other.info_homeworld_system)) return false;
    if (!object.Equals(info_achievement_system, other.info_achievement_system)) return false;
    if (!object.Equals(info_vipGame, other.info_vipGame)) return false;
    if (!object.Equals(info_buff, other.info_buff)) return false;
    if (!object.Equals(info_item_system, other.info_item_system)) return false;
    if (!object.Equals(info_task_system, other.info_task_system)) return false;
    if (!object.Equals(info_unlock, other.info_unlock)) return false;
    if (!object.Equals(giftCodeUsageTimes, other.giftCodeUsageTimes)) return false;
    if (!object.Equals(info_roulette, other.info_roulette)) return false;
    if (!object.Equals(info_store, other.info_store)) return false;
    if (!object.Equals(info_signIn, other.info_signIn)) return false;
    if (!object.Equals(info_time_buff, other.info_time_buff)) return false;
    if (!object.Equals(info_dialog, other.info_dialog)) return false;
    if (!object.Equals(info_guestCollect, other.info_guestCollect)) return false;
    if (!object.Equals(info_autoRedDot, other.info_autoRedDot)) return false;
    if (!object.Equals(info_shop_repair, other.info_shop_repair)) return false;
    if (!object.Equals(info_scene_decorate, other.info_scene_decorate)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (info_version_ != null) hash ^= info_version.GetHashCode();
    if (info_role_ != null) hash ^= info_role.GetHashCode();
    if (info_shop_system_ != null) hash ^= info_shop_system.GetHashCode();
    if (info_clerk_system_ != null) hash ^= info_clerk_system.GetHashCode();
    if (info_guest_system_ != null) hash ^= info_guest_system.GetHashCode();
    if (info_homeworld_system_ != null) hash ^= info_homeworld_system.GetHashCode();
    if (info_achievement_system_ != null) hash ^= info_achievement_system.GetHashCode();
    if (info_vipGame_ != null) hash ^= info_vipGame.GetHashCode();
    if (info_buff_ != null) hash ^= info_buff.GetHashCode();
    if (info_item_system_ != null) hash ^= info_item_system.GetHashCode();
    if (info_task_system_ != null) hash ^= info_task_system.GetHashCode();
    if (info_unlock_ != null) hash ^= info_unlock.GetHashCode();
    if (giftCodeUsageTimes_ != null) hash ^= giftCodeUsageTimes.GetHashCode();
    if (info_roulette_ != null) hash ^= info_roulette.GetHashCode();
    if (info_store_ != null) hash ^= info_store.GetHashCode();
    if (info_signIn_ != null) hash ^= info_signIn.GetHashCode();
    if (info_time_buff_ != null) hash ^= info_time_buff.GetHashCode();
    if (info_dialog_ != null) hash ^= info_dialog.GetHashCode();
    if (info_guestCollect_ != null) hash ^= info_guestCollect.GetHashCode();
    if (info_autoRedDot_ != null) hash ^= info_autoRedDot.GetHashCode();
    if (info_shop_repair_ != null) hash ^= info_shop_repair.GetHashCode();
    if (info_scene_decorate_ != null) hash ^= info_scene_decorate.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (info_version_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(info_version);
    }
    if (info_role_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(info_role);
    }
    if (info_shop_system_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(info_shop_system);
    }
    if (info_clerk_system_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(info_clerk_system);
    }
    if (info_guest_system_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(info_guest_system);
    }
    if (info_homeworld_system_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(info_homeworld_system);
    }
    if (info_achievement_system_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(info_achievement_system);
    }
    if (info_vipGame_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(info_vipGame);
    }
    if (info_buff_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(info_buff);
    }
    if (info_item_system_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(info_item_system);
    }
    if (info_task_system_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(info_task_system);
    }
    if (info_unlock_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(info_unlock);
    }
    if (giftCodeUsageTimes_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(giftCodeUsageTimes);
    }
    if (info_roulette_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(info_roulette);
    }
    if (info_store_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(info_store);
    }
    if (info_signIn_ != null) {
      output.WriteRawTag(130, 1);
      output.WriteMessage(info_signIn);
    }
    if (info_time_buff_ != null) {
      output.WriteRawTag(138, 1);
      output.WriteMessage(info_time_buff);
    }
    if (info_dialog_ != null) {
      output.WriteRawTag(146, 1);
      output.WriteMessage(info_dialog);
    }
    if (info_guestCollect_ != null) {
      output.WriteRawTag(154, 1);
      output.WriteMessage(info_guestCollect);
    }
    if (info_autoRedDot_ != null) {
      output.WriteRawTag(162, 1);
      output.WriteMessage(info_autoRedDot);
    }
    if (info_shop_repair_ != null) {
      output.WriteRawTag(170, 1);
      output.WriteMessage(info_shop_repair);
    }
    if (info_scene_decorate_ != null) {
      output.WriteRawTag(178, 1);
      output.WriteMessage(info_scene_decorate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (info_version_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(info_version);
    }
    if (info_role_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(info_role);
    }
    if (info_shop_system_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(info_shop_system);
    }
    if (info_clerk_system_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(info_clerk_system);
    }
    if (info_guest_system_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(info_guest_system);
    }
    if (info_homeworld_system_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(info_homeworld_system);
    }
    if (info_achievement_system_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(info_achievement_system);
    }
    if (info_vipGame_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(info_vipGame);
    }
    if (info_buff_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(info_buff);
    }
    if (info_item_system_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(info_item_system);
    }
    if (info_task_system_ != null) {
      output.WriteRawTag(90);
      output.WriteMessage(info_task_system);
    }
    if (info_unlock_ != null) {
      output.WriteRawTag(98);
      output.WriteMessage(info_unlock);
    }
    if (giftCodeUsageTimes_ != null) {
      output.WriteRawTag(106);
      output.WriteMessage(giftCodeUsageTimes);
    }
    if (info_roulette_ != null) {
      output.WriteRawTag(114);
      output.WriteMessage(info_roulette);
    }
    if (info_store_ != null) {
      output.WriteRawTag(122);
      output.WriteMessage(info_store);
    }
    if (info_signIn_ != null) {
      output.WriteRawTag(130, 1);
      output.WriteMessage(info_signIn);
    }
    if (info_time_buff_ != null) {
      output.WriteRawTag(138, 1);
      output.WriteMessage(info_time_buff);
    }
    if (info_dialog_ != null) {
      output.WriteRawTag(146, 1);
      output.WriteMessage(info_dialog);
    }
    if (info_guestCollect_ != null) {
      output.WriteRawTag(154, 1);
      output.WriteMessage(info_guestCollect);
    }
    if (info_autoRedDot_ != null) {
      output.WriteRawTag(162, 1);
      output.WriteMessage(info_autoRedDot);
    }
    if (info_shop_repair_ != null) {
      output.WriteRawTag(170, 1);
      output.WriteMessage(info_shop_repair);
    }
    if (info_scene_decorate_ != null) {
      output.WriteRawTag(178, 1);
      output.WriteMessage(info_scene_decorate);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (info_version_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(info_version);
    }
    if (info_role_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(info_role);
    }
    if (info_shop_system_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(info_shop_system);
    }
    if (info_clerk_system_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(info_clerk_system);
    }
    if (info_guest_system_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(info_guest_system);
    }
    if (info_homeworld_system_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(info_homeworld_system);
    }
    if (info_achievement_system_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(info_achievement_system);
    }
    if (info_vipGame_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(info_vipGame);
    }
    if (info_buff_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(info_buff);
    }
    if (info_item_system_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(info_item_system);
    }
    if (info_task_system_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(info_task_system);
    }
    if (info_unlock_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(info_unlock);
    }
    if (giftCodeUsageTimes_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(giftCodeUsageTimes);
    }
    if (info_roulette_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(info_roulette);
    }
    if (info_store_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(info_store);
    }
    if (info_signIn_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(info_signIn);
    }
    if (info_time_buff_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(info_time_buff);
    }
    if (info_dialog_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(info_dialog);
    }
    if (info_guestCollect_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(info_guestCollect);
    }
    if (info_autoRedDot_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(info_autoRedDot);
    }
    if (info_shop_repair_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(info_shop_repair);
    }
    if (info_scene_decorate_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(info_scene_decorate);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoPlayer other) {
    if (other == null) {
      return;
    }
    if (other.info_version_ != null) {
      if (info_version_ == null) {
        info_version = new global::InfoVersion();
      }
      info_version.MergeFrom(other.info_version);
    }
    if (other.info_role_ != null) {
      if (info_role_ == null) {
        info_role = new global::InfoRole();
      }
      info_role.MergeFrom(other.info_role);
    }
    if (other.info_shop_system_ != null) {
      if (info_shop_system_ == null) {
        info_shop_system = new global::InfoShopSystem();
      }
      info_shop_system.MergeFrom(other.info_shop_system);
    }
    if (other.info_clerk_system_ != null) {
      if (info_clerk_system_ == null) {
        info_clerk_system = new global::InfoClerkSystem();
      }
      info_clerk_system.MergeFrom(other.info_clerk_system);
    }
    if (other.info_guest_system_ != null) {
      if (info_guest_system_ == null) {
        info_guest_system = new global::InfoGuestSystem();
      }
      info_guest_system.MergeFrom(other.info_guest_system);
    }
    if (other.info_homeworld_system_ != null) {
      if (info_homeworld_system_ == null) {
        info_homeworld_system = new global::InfoHomeworldSystem();
      }
      info_homeworld_system.MergeFrom(other.info_homeworld_system);
    }
    if (other.info_achievement_system_ != null) {
      if (info_achievement_system_ == null) {
        info_achievement_system = new global::InfoAchievementSystem();
      }
      info_achievement_system.MergeFrom(other.info_achievement_system);
    }
    if (other.info_vipGame_ != null) {
      if (info_vipGame_ == null) {
        info_vipGame = new global::InfoVipGame();
      }
      info_vipGame.MergeFrom(other.info_vipGame);
    }
    if (other.info_buff_ != null) {
      if (info_buff_ == null) {
        info_buff = new global::InfoBuffSystem();
      }
      info_buff.MergeFrom(other.info_buff);
    }
    if (other.info_item_system_ != null) {
      if (info_item_system_ == null) {
        info_item_system = new global::InfoItemSystem();
      }
      info_item_system.MergeFrom(other.info_item_system);
    }
    if (other.info_task_system_ != null) {
      if (info_task_system_ == null) {
        info_task_system = new global::InfoTaskSystem();
      }
      info_task_system.MergeFrom(other.info_task_system);
    }
    if (other.info_unlock_ != null) {
      if (info_unlock_ == null) {
        info_unlock = new global::InfoUnlock();
      }
      info_unlock.MergeFrom(other.info_unlock);
    }
    if (other.giftCodeUsageTimes_ != null) {
      if (giftCodeUsageTimes_ == null) {
        giftCodeUsageTimes = new global::InfoGiftCode();
      }
      giftCodeUsageTimes.MergeFrom(other.giftCodeUsageTimes);
    }
    if (other.info_roulette_ != null) {
      if (info_roulette_ == null) {
        info_roulette = new global::InfoRoulette();
      }
      info_roulette.MergeFrom(other.info_roulette);
    }
    if (other.info_store_ != null) {
      if (info_store_ == null) {
        info_store = new global::InfoStore();
      }
      info_store.MergeFrom(other.info_store);
    }
    if (other.info_signIn_ != null) {
      if (info_signIn_ == null) {
        info_signIn = new global::InfoSignIn();
      }
      info_signIn.MergeFrom(other.info_signIn);
    }
    if (other.info_time_buff_ != null) {
      if (info_time_buff_ == null) {
        info_time_buff = new global::InfoTimeGlobalBuff();
      }
      info_time_buff.MergeFrom(other.info_time_buff);
    }
    if (other.info_dialog_ != null) {
      if (info_dialog_ == null) {
        info_dialog = new global::InfoDialog();
      }
      info_dialog.MergeFrom(other.info_dialog);
    }
    if (other.info_guestCollect_ != null) {
      if (info_guestCollect_ == null) {
        info_guestCollect = new global::InfoGuestCollectSystem();
      }
      info_guestCollect.MergeFrom(other.info_guestCollect);
    }
    if (other.info_autoRedDot_ != null) {
      if (info_autoRedDot_ == null) {
        info_autoRedDot = new global::InfoAutoGoodsRedDot();
      }
      info_autoRedDot.MergeFrom(other.info_autoRedDot);
    }
    if (other.info_shop_repair_ != null) {
      if (info_shop_repair_ == null) {
        info_shop_repair = new global::InfoShopRepair();
      }
      info_shop_repair.MergeFrom(other.info_shop_repair);
    }
    if (other.info_scene_decorate_ != null) {
      if (info_scene_decorate_ == null) {
        info_scene_decorate = new global::InfoSceneDecorate();
      }
      info_scene_decorate.MergeFrom(other.info_scene_decorate);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (info_version_ == null) {
            info_version = new global::InfoVersion();
          }
          input.ReadMessage(info_version);
          break;
        }
        case 18: {
          if (info_role_ == null) {
            info_role = new global::InfoRole();
          }
          input.ReadMessage(info_role);
          break;
        }
        case 26: {
          if (info_shop_system_ == null) {
            info_shop_system = new global::InfoShopSystem();
          }
          input.ReadMessage(info_shop_system);
          break;
        }
        case 34: {
          if (info_clerk_system_ == null) {
            info_clerk_system = new global::InfoClerkSystem();
          }
          input.ReadMessage(info_clerk_system);
          break;
        }
        case 42: {
          if (info_guest_system_ == null) {
            info_guest_system = new global::InfoGuestSystem();
          }
          input.ReadMessage(info_guest_system);
          break;
        }
        case 50: {
          if (info_homeworld_system_ == null) {
            info_homeworld_system = new global::InfoHomeworldSystem();
          }
          input.ReadMessage(info_homeworld_system);
          break;
        }
        case 58: {
          if (info_achievement_system_ == null) {
            info_achievement_system = new global::InfoAchievementSystem();
          }
          input.ReadMessage(info_achievement_system);
          break;
        }
        case 66: {
          if (info_vipGame_ == null) {
            info_vipGame = new global::InfoVipGame();
          }
          input.ReadMessage(info_vipGame);
          break;
        }
        case 74: {
          if (info_buff_ == null) {
            info_buff = new global::InfoBuffSystem();
          }
          input.ReadMessage(info_buff);
          break;
        }
        case 82: {
          if (info_item_system_ == null) {
            info_item_system = new global::InfoItemSystem();
          }
          input.ReadMessage(info_item_system);
          break;
        }
        case 90: {
          if (info_task_system_ == null) {
            info_task_system = new global::InfoTaskSystem();
          }
          input.ReadMessage(info_task_system);
          break;
        }
        case 98: {
          if (info_unlock_ == null) {
            info_unlock = new global::InfoUnlock();
          }
          input.ReadMessage(info_unlock);
          break;
        }
        case 106: {
          if (giftCodeUsageTimes_ == null) {
            giftCodeUsageTimes = new global::InfoGiftCode();
          }
          input.ReadMessage(giftCodeUsageTimes);
          break;
        }
        case 114: {
          if (info_roulette_ == null) {
            info_roulette = new global::InfoRoulette();
          }
          input.ReadMessage(info_roulette);
          break;
        }
        case 122: {
          if (info_store_ == null) {
            info_store = new global::InfoStore();
          }
          input.ReadMessage(info_store);
          break;
        }
        case 130: {
          if (info_signIn_ == null) {
            info_signIn = new global::InfoSignIn();
          }
          input.ReadMessage(info_signIn);
          break;
        }
        case 138: {
          if (info_time_buff_ == null) {
            info_time_buff = new global::InfoTimeGlobalBuff();
          }
          input.ReadMessage(info_time_buff);
          break;
        }
        case 146: {
          if (info_dialog_ == null) {
            info_dialog = new global::InfoDialog();
          }
          input.ReadMessage(info_dialog);
          break;
        }
        case 154: {
          if (info_guestCollect_ == null) {
            info_guestCollect = new global::InfoGuestCollectSystem();
          }
          input.ReadMessage(info_guestCollect);
          break;
        }
        case 162: {
          if (info_autoRedDot_ == null) {
            info_autoRedDot = new global::InfoAutoGoodsRedDot();
          }
          input.ReadMessage(info_autoRedDot);
          break;
        }
        case 170: {
          if (info_shop_repair_ == null) {
            info_shop_repair = new global::InfoShopRepair();
          }
          input.ReadMessage(info_shop_repair);
          break;
        }
        case 178: {
          if (info_scene_decorate_ == null) {
            info_scene_decorate = new global::InfoSceneDecorate();
          }
          input.ReadMessage(info_scene_decorate);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (info_version_ == null) {
            info_version = new global::InfoVersion();
          }
          input.ReadMessage(info_version);
          break;
        }
        case 18: {
          if (info_role_ == null) {
            info_role = new global::InfoRole();
          }
          input.ReadMessage(info_role);
          break;
        }
        case 26: {
          if (info_shop_system_ == null) {
            info_shop_system = new global::InfoShopSystem();
          }
          input.ReadMessage(info_shop_system);
          break;
        }
        case 34: {
          if (info_clerk_system_ == null) {
            info_clerk_system = new global::InfoClerkSystem();
          }
          input.ReadMessage(info_clerk_system);
          break;
        }
        case 42: {
          if (info_guest_system_ == null) {
            info_guest_system = new global::InfoGuestSystem();
          }
          input.ReadMessage(info_guest_system);
          break;
        }
        case 50: {
          if (info_homeworld_system_ == null) {
            info_homeworld_system = new global::InfoHomeworldSystem();
          }
          input.ReadMessage(info_homeworld_system);
          break;
        }
        case 58: {
          if (info_achievement_system_ == null) {
            info_achievement_system = new global::InfoAchievementSystem();
          }
          input.ReadMessage(info_achievement_system);
          break;
        }
        case 66: {
          if (info_vipGame_ == null) {
            info_vipGame = new global::InfoVipGame();
          }
          input.ReadMessage(info_vipGame);
          break;
        }
        case 74: {
          if (info_buff_ == null) {
            info_buff = new global::InfoBuffSystem();
          }
          input.ReadMessage(info_buff);
          break;
        }
        case 82: {
          if (info_item_system_ == null) {
            info_item_system = new global::InfoItemSystem();
          }
          input.ReadMessage(info_item_system);
          break;
        }
        case 90: {
          if (info_task_system_ == null) {
            info_task_system = new global::InfoTaskSystem();
          }
          input.ReadMessage(info_task_system);
          break;
        }
        case 98: {
          if (info_unlock_ == null) {
            info_unlock = new global::InfoUnlock();
          }
          input.ReadMessage(info_unlock);
          break;
        }
        case 106: {
          if (giftCodeUsageTimes_ == null) {
            giftCodeUsageTimes = new global::InfoGiftCode();
          }
          input.ReadMessage(giftCodeUsageTimes);
          break;
        }
        case 114: {
          if (info_roulette_ == null) {
            info_roulette = new global::InfoRoulette();
          }
          input.ReadMessage(info_roulette);
          break;
        }
        case 122: {
          if (info_store_ == null) {
            info_store = new global::InfoStore();
          }
          input.ReadMessage(info_store);
          break;
        }
        case 130: {
          if (info_signIn_ == null) {
            info_signIn = new global::InfoSignIn();
          }
          input.ReadMessage(info_signIn);
          break;
        }
        case 138: {
          if (info_time_buff_ == null) {
            info_time_buff = new global::InfoTimeGlobalBuff();
          }
          input.ReadMessage(info_time_buff);
          break;
        }
        case 146: {
          if (info_dialog_ == null) {
            info_dialog = new global::InfoDialog();
          }
          input.ReadMessage(info_dialog);
          break;
        }
        case 154: {
          if (info_guestCollect_ == null) {
            info_guestCollect = new global::InfoGuestCollectSystem();
          }
          input.ReadMessage(info_guestCollect);
          break;
        }
        case 162: {
          if (info_autoRedDot_ == null) {
            info_autoRedDot = new global::InfoAutoGoodsRedDot();
          }
          input.ReadMessage(info_autoRedDot);
          break;
        }
        case 170: {
          if (info_shop_repair_ == null) {
            info_shop_repair = new global::InfoShopRepair();
          }
          input.ReadMessage(info_shop_repair);
          break;
        }
        case 178: {
          if (info_scene_decorate_ == null) {
            info_scene_decorate = new global::InfoSceneDecorate();
          }
          input.ReadMessage(info_scene_decorate);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoShopRepair : pb::IMessage<InfoShopRepair>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoShopRepair> _parser = new pb::MessageParser<InfoShopRepair>(() => new InfoShopRepair());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoShopRepair> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShopRepair() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShopRepair(InfoShopRepair other) : this() {
    freeRepairNum_ = other.freeRepairNum_;
    freeRepairTms_ = other.freeRepairTms_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShopRepair Clone() {
    return new InfoShopRepair(this);
  }

  /// <summary>Field number for the "freeRepairNum" field.</summary>
  public const int freeRepairNumFieldNumber = 1;
  private int freeRepairNum_;
  /// <summary>
  ///店铺免费修复次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int freeRepairNum {
    get { return freeRepairNum_; }
    set {
      freeRepairNum_ = value;
    }
  }

  /// <summary>Field number for the "freeRepairTms" field.</summary>
  public const int freeRepairTmsFieldNumber = 2;
  private long freeRepairTms_;
  /// <summary>
  ///免费修复时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long freeRepairTms {
    get { return freeRepairTms_; }
    set {
      freeRepairTms_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoShopRepair);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoShopRepair other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (freeRepairNum != other.freeRepairNum) return false;
    if (freeRepairTms != other.freeRepairTms) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (freeRepairNum != 0) hash ^= freeRepairNum.GetHashCode();
    if (freeRepairTms != 0L) hash ^= freeRepairTms.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (freeRepairNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(freeRepairNum);
    }
    if (freeRepairTms != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(freeRepairTms);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (freeRepairNum != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(freeRepairNum);
    }
    if (freeRepairTms != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(freeRepairTms);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (freeRepairNum != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(freeRepairNum);
    }
    if (freeRepairTms != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(freeRepairTms);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoShopRepair other) {
    if (other == null) {
      return;
    }
    if (other.freeRepairNum != 0) {
      freeRepairNum = other.freeRepairNum;
    }
    if (other.freeRepairTms != 0L) {
      freeRepairTms = other.freeRepairTms;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          freeRepairNum = input.ReadInt32();
          break;
        }
        case 16: {
          freeRepairTms = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          freeRepairNum = input.ReadInt32();
          break;
        }
        case 16: {
          freeRepairTms = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoAutoGoodsRedDot : pb::IMessage<InfoAutoGoodsRedDot>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoAutoGoodsRedDot> _parser = new pb::MessageParser<InfoAutoGoodsRedDot>(() => new InfoAutoGoodsRedDot());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoAutoGoodsRedDot> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAutoGoodsRedDot() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAutoGoodsRedDot(InfoAutoGoodsRedDot other) : this() {
    redDot_list_ = other.redDot_list_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAutoGoodsRedDot Clone() {
    return new InfoAutoGoodsRedDot(this);
  }

  /// <summary>Field number for the "redDot_list" field.</summary>
  public const int redDot_listFieldNumber = 1;
  private static readonly pbc::MapField<int, int>.Codec _map_redDot_list_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 10);
  private readonly pbc::MapField<int, int> redDot_list_ = new pbc::MapField<int, int>();
  /// <summary>
  /// 自动补货红点记录
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> redDot_list {
    get { return redDot_list_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoAutoGoodsRedDot);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoAutoGoodsRedDot other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!redDot_list.Equals(other.redDot_list)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= redDot_list.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    redDot_list_.WriteTo(output, _map_redDot_list_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    redDot_list_.WriteTo(ref output, _map_redDot_list_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += redDot_list_.CalculateSize(_map_redDot_list_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoAutoGoodsRedDot other) {
    if (other == null) {
      return;
    }
    redDot_list_.Add(other.redDot_list_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          redDot_list_.AddEntriesFrom(input, _map_redDot_list_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          redDot_list_.AddEntriesFrom(ref input, _map_redDot_list_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoGuestCollectSystem : pb::IMessage<InfoGuestCollectSystem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoGuestCollectSystem> _parser = new pb::MessageParser<InfoGuestCollectSystem>(() => new InfoGuestCollectSystem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoGuestCollectSystem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGuestCollectSystem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGuestCollectSystem(InfoGuestCollectSystem other) : this() {
    guest_list_ = other.guest_list_.Clone();
    unlock_list_ = other.unlock_list_.Clone();
    findGuestCount_ = other.findGuestCount_;
    goods_list_ = other.goods_list_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGuestCollectSystem Clone() {
    return new InfoGuestCollectSystem(this);
  }

  /// <summary>Field number for the "guest_list" field.</summary>
  public const int guest_listFieldNumber = 1;
  private static readonly pbc::MapField<int, global::InfoGuestCollect>.Codec _map_guest_list_codec
      = new pbc::MapField<int, global::InfoGuestCollect>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::InfoGuestCollect.Parser), 10);
  private readonly pbc::MapField<int, global::InfoGuestCollect> guest_list_ = new pbc::MapField<int, global::InfoGuestCollect>();
  /// <summary>
  /// 客人列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::InfoGuestCollect> guest_list {
    get { return guest_list_; }
  }

  /// <summary>Field number for the "unlock_list" field.</summary>
  public const int unlock_listFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_unlock_list_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> unlock_list_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 等待解锁的客人列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> unlock_list {
    get { return unlock_list_; }
  }

  /// <summary>Field number for the "findGuestCount" field.</summary>
  public const int findGuestCountFieldNumber = 3;
  private int findGuestCount_;
  /// <summary>
  /// 拉客次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int findGuestCount {
    get { return findGuestCount_; }
    set {
      findGuestCount_ = value;
    }
  }

  /// <summary>Field number for the "goods_list" field.</summary>
  public const int goods_listFieldNumber = 4;
  private static readonly pbc::MapField<int, int>.Codec _map_goods_list_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 34);
  private readonly pbc::MapField<int, int> goods_list_ = new pbc::MapField<int, int>();
  /// <summary>
  /// 已生产商品列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> goods_list {
    get { return goods_list_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoGuestCollectSystem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoGuestCollectSystem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!guest_list.Equals(other.guest_list)) return false;
    if(!unlock_list_.Equals(other.unlock_list_)) return false;
    if (findGuestCount != other.findGuestCount) return false;
    if (!goods_list.Equals(other.goods_list)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= guest_list.GetHashCode();
    hash ^= unlock_list_.GetHashCode();
    if (findGuestCount != 0) hash ^= findGuestCount.GetHashCode();
    hash ^= goods_list.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    guest_list_.WriteTo(output, _map_guest_list_codec);
    unlock_list_.WriteTo(output, _repeated_unlock_list_codec);
    if (findGuestCount != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(findGuestCount);
    }
    goods_list_.WriteTo(output, _map_goods_list_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    guest_list_.WriteTo(ref output, _map_guest_list_codec);
    unlock_list_.WriteTo(ref output, _repeated_unlock_list_codec);
    if (findGuestCount != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(findGuestCount);
    }
    goods_list_.WriteTo(ref output, _map_goods_list_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += guest_list_.CalculateSize(_map_guest_list_codec);
    size += unlock_list_.CalculateSize(_repeated_unlock_list_codec);
    if (findGuestCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(findGuestCount);
    }
    size += goods_list_.CalculateSize(_map_goods_list_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoGuestCollectSystem other) {
    if (other == null) {
      return;
    }
    guest_list_.Add(other.guest_list_);
    unlock_list_.Add(other.unlock_list_);
    if (other.findGuestCount != 0) {
      findGuestCount = other.findGuestCount;
    }
    goods_list_.Add(other.goods_list_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          guest_list_.AddEntriesFrom(input, _map_guest_list_codec);
          break;
        }
        case 18:
        case 16: {
          unlock_list_.AddEntriesFrom(input, _repeated_unlock_list_codec);
          break;
        }
        case 24: {
          findGuestCount = input.ReadInt32();
          break;
        }
        case 34: {
          goods_list_.AddEntriesFrom(input, _map_goods_list_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          guest_list_.AddEntriesFrom(ref input, _map_guest_list_codec);
          break;
        }
        case 18:
        case 16: {
          unlock_list_.AddEntriesFrom(ref input, _repeated_unlock_list_codec);
          break;
        }
        case 24: {
          findGuestCount = input.ReadInt32();
          break;
        }
        case 34: {
          goods_list_.AddEntriesFrom(ref input, _map_goods_list_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoGuestCollect : pb::IMessage<InfoGuestCollect>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoGuestCollect> _parser = new pb::MessageParser<InfoGuestCollect>(() => new InfoGuestCollect());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoGuestCollect> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGuestCollect() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGuestCollect(InfoGuestCollect other) : this() {
    uid_ = other.uid_;
    level_ = other.level_;
    exp_ = other.exp_;
    isUnlock_ = other.isUnlock_;
    rewardRecord_ = other.rewardRecord_.Clone();
    curDress_ = other.curDress_;
    isNew_ = other.isNew_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGuestCollect Clone() {
    return new InfoGuestCollect(this);
  }

  /// <summary>Field number for the "uid" field.</summary>
  public const int uidFieldNumber = 1;
  private int uid_;
  /// <summary>
  /// 客人uid
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int uid {
    get { return uid_; }
    set {
      uid_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int levelFieldNumber = 2;
  private int level_;
  /// <summary>
  /// 客人等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "exp" field.</summary>
  public const int expFieldNumber = 3;
  private int exp_;
  /// <summary>
  /// 经验值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int exp {
    get { return exp_; }
    set {
      exp_ = value;
    }
  }

  /// <summary>Field number for the "isUnlock" field.</summary>
  public const int isUnlockFieldNumber = 4;
  private int isUnlock_;
  /// <summary>
  /// 是否解锁
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int isUnlock {
    get { return isUnlock_; }
    set {
      isUnlock_ = value;
    }
  }

  /// <summary>Field number for the "rewardRecord" field.</summary>
  public const int rewardRecordFieldNumber = 5;
  private static readonly pb::FieldCodec<int> _repeated_rewardRecord_codec
      = pb::FieldCodec.ForInt32(42);
  private readonly pbc::RepeatedField<int> rewardRecord_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 等级对应奖励是否领取
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> rewardRecord {
    get { return rewardRecord_; }
  }

  /// <summary>Field number for the "curDress" field.</summary>
  public const int curDressFieldNumber = 6;
  private int curDress_;
  /// <summary>
  /// 当前装扮
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int curDress {
    get { return curDress_; }
    set {
      curDress_ = value;
    }
  }

  /// <summary>Field number for the "isNew" field.</summary>
  public const int isNewFieldNumber = 7;
  private int isNew_;
  /// <summary>
  /// 是否为新顾客（影响红点）
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int isNew {
    get { return isNew_; }
    set {
      isNew_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoGuestCollect);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoGuestCollect other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (uid != other.uid) return false;
    if (level != other.level) return false;
    if (exp != other.exp) return false;
    if (isUnlock != other.isUnlock) return false;
    if(!rewardRecord_.Equals(other.rewardRecord_)) return false;
    if (curDress != other.curDress) return false;
    if (isNew != other.isNew) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (uid != 0) hash ^= uid.GetHashCode();
    if (level != 0) hash ^= level.GetHashCode();
    if (exp != 0) hash ^= exp.GetHashCode();
    if (isUnlock != 0) hash ^= isUnlock.GetHashCode();
    hash ^= rewardRecord_.GetHashCode();
    if (curDress != 0) hash ^= curDress.GetHashCode();
    if (isNew != 0) hash ^= isNew.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(uid);
    }
    if (level != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(level);
    }
    if (exp != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(exp);
    }
    if (isUnlock != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(isUnlock);
    }
    rewardRecord_.WriteTo(output, _repeated_rewardRecord_codec);
    if (curDress != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(curDress);
    }
    if (isNew != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(isNew);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(uid);
    }
    if (level != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(level);
    }
    if (exp != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(exp);
    }
    if (isUnlock != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(isUnlock);
    }
    rewardRecord_.WriteTo(ref output, _repeated_rewardRecord_codec);
    if (curDress != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(curDress);
    }
    if (isNew != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(isNew);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (uid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(uid);
    }
    if (level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(level);
    }
    if (exp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(exp);
    }
    if (isUnlock != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(isUnlock);
    }
    size += rewardRecord_.CalculateSize(_repeated_rewardRecord_codec);
    if (curDress != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(curDress);
    }
    if (isNew != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(isNew);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoGuestCollect other) {
    if (other == null) {
      return;
    }
    if (other.uid != 0) {
      uid = other.uid;
    }
    if (other.level != 0) {
      level = other.level;
    }
    if (other.exp != 0) {
      exp = other.exp;
    }
    if (other.isUnlock != 0) {
      isUnlock = other.isUnlock;
    }
    rewardRecord_.Add(other.rewardRecord_);
    if (other.curDress != 0) {
      curDress = other.curDress;
    }
    if (other.isNew != 0) {
      isNew = other.isNew;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          uid = input.ReadInt32();
          break;
        }
        case 16: {
          level = input.ReadInt32();
          break;
        }
        case 24: {
          exp = input.ReadInt32();
          break;
        }
        case 32: {
          isUnlock = input.ReadInt32();
          break;
        }
        case 42:
        case 40: {
          rewardRecord_.AddEntriesFrom(input, _repeated_rewardRecord_codec);
          break;
        }
        case 48: {
          curDress = input.ReadInt32();
          break;
        }
        case 56: {
          isNew = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          uid = input.ReadInt32();
          break;
        }
        case 16: {
          level = input.ReadInt32();
          break;
        }
        case 24: {
          exp = input.ReadInt32();
          break;
        }
        case 32: {
          isUnlock = input.ReadInt32();
          break;
        }
        case 42:
        case 40: {
          rewardRecord_.AddEntriesFrom(ref input, _repeated_rewardRecord_codec);
          break;
        }
        case 48: {
          curDress = input.ReadInt32();
          break;
        }
        case 56: {
          isNew = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoUnlockValue : pb::IMessage<InfoUnlockValue>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoUnlockValue> _parser = new pb::MessageParser<InfoUnlockValue>(() => new InfoUnlockValue());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoUnlockValue> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoUnlockValue() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoUnlockValue(InfoUnlockValue other) : this() {
    value_ = other.value_;
    level_ = other.level_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoUnlockValue Clone() {
    return new InfoUnlockValue(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int valueFieldNumber = 1;
  private bool value_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool value {
    get { return value_; }
    set {
      value_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int levelFieldNumber = 2;
  private int level_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoUnlockValue);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoUnlockValue other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (value != other.value) return false;
    if (level != other.level) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (value != false) hash ^= value.GetHashCode();
    if (level != 0) hash ^= level.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (value != false) {
      output.WriteRawTag(8);
      output.WriteBool(value);
    }
    if (level != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(level);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (value != false) {
      output.WriteRawTag(8);
      output.WriteBool(value);
    }
    if (level != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(level);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (value != false) {
      size += 1 + 1;
    }
    if (level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(level);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoUnlockValue other) {
    if (other == null) {
      return;
    }
    if (other.value != false) {
      value = other.value;
    }
    if (other.level != 0) {
      level = other.level;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          value = input.ReadBool();
          break;
        }
        case 16: {
          level = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          value = input.ReadBool();
          break;
        }
        case 16: {
          level = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoUnlock : pb::IMessage<InfoUnlock>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoUnlock> _parser = new pb::MessageParser<InfoUnlock>(() => new InfoUnlock());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoUnlock> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[6]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoUnlock() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoUnlock(InfoUnlock other) : this() {
    unlock_map_ = other.unlock_map_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoUnlock Clone() {
    return new InfoUnlock(this);
  }

  /// <summary>Field number for the "unlock_map" field.</summary>
  public const int unlock_mapFieldNumber = 1;
  private static readonly pbc::MapField<int, global::InfoUnlockValue>.Codec _map_unlock_map_codec
      = new pbc::MapField<int, global::InfoUnlockValue>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::InfoUnlockValue.Parser), 10);
  private readonly pbc::MapField<int, global::InfoUnlockValue> unlock_map_ = new pbc::MapField<int, global::InfoUnlockValue>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::InfoUnlockValue> unlock_map {
    get { return unlock_map_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoUnlock);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoUnlock other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!unlock_map.Equals(other.unlock_map)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= unlock_map.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    unlock_map_.WriteTo(output, _map_unlock_map_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    unlock_map_.WriteTo(ref output, _map_unlock_map_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += unlock_map_.CalculateSize(_map_unlock_map_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoUnlock other) {
    if (other == null) {
      return;
    }
    unlock_map_.Add(other.unlock_map_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          unlock_map_.AddEntriesFrom(input, _map_unlock_map_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          unlock_map_.AddEntriesFrom(ref input, _map_unlock_map_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class IntArray : pb::IMessage<IntArray>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<IntArray> _parser = new pb::MessageParser<IntArray>(() => new IntArray());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<IntArray> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[7]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IntArray() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IntArray(IntArray other) : this() {
    value_ = other.value_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IntArray Clone() {
    return new IntArray(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int valueFieldNumber = 1;
  private static readonly pb::FieldCodec<long> _repeated_value_codec
      = pb::FieldCodec.ForInt64(10);
  private readonly pbc::RepeatedField<long> value_ = new pbc::RepeatedField<long>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<long> value {
    get { return value_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as IntArray);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(IntArray other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!value_.Equals(other.value_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= value_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    value_.WriteTo(output, _repeated_value_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    value_.WriteTo(ref output, _repeated_value_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += value_.CalculateSize(_repeated_value_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(IntArray other) {
    if (other == null) {
      return;
    }
    value_.Add(other.value_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 8: {
          value_.AddEntriesFrom(input, _repeated_value_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10:
        case 8: {
          value_.AddEntriesFrom(ref input, _repeated_value_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoBox : pb::IMessage<InfoBox>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoBox> _parser = new pb::MessageParser<InfoBox>(() => new InfoBox());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoBox> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[8]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoBox() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoBox(InfoBox other) : this() {
    id_ = other.id_;
    instanceId_ = other.instanceId_;
    status_ = other.status_;
    coins_ = other.coins_;
    skillPoints_ = other.skillPoints_.Clone();
    timeStamp_ = other.timeStamp_;
    position_ = other.position_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoBox Clone() {
    return new InfoBox(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int idFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 宝箱id，也是宝箱等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "instanceId" field.</summary>
  public const int instanceIdFieldNumber = 2;
  private int instanceId_;
  /// <summary>
  /// 宝箱实例id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int instanceId {
    get { return instanceId_; }
    set {
      instanceId_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int statusFieldNumber = 3;
  private global::InfoBoxStatus status_ = global::InfoBoxStatus.Locked;
  /// <summary>
  /// 宝箱状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoBoxStatus status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "coins" field.</summary>
  public const int coinsFieldNumber = 4;
  private long coins_;
  /// <summary>
  /// 金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long coins {
    get { return coins_; }
    set {
      coins_ = value;
    }
  }

  /// <summary>Field number for the "skillPoints" field.</summary>
  public const int skillPointsFieldNumber = 5;
  private static readonly pb::FieldCodec<int> _repeated_skillPoints_codec
      = pb::FieldCodec.ForInt32(42);
  private readonly pbc::RepeatedField<int> skillPoints_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 技能点数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> skillPoints {
    get { return skillPoints_; }
  }

  /// <summary>Field number for the "timeStamp" field.</summary>
  public const int timeStampFieldNumber = 6;
  private long timeStamp_;
  /// <summary>
  /// 宝箱开始解锁时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long timeStamp {
    get { return timeStamp_; }
    set {
      timeStamp_ = value;
    }
  }

  /// <summary>Field number for the "position" field.</summary>
  public const int positionFieldNumber = 7;
  private int position_;
  /// <summary>
  /// 宝箱位置
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int position {
    get { return position_; }
    set {
      position_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoBox);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoBox other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (id != other.id) return false;
    if (instanceId != other.instanceId) return false;
    if (status != other.status) return false;
    if (coins != other.coins) return false;
    if(!skillPoints_.Equals(other.skillPoints_)) return false;
    if (timeStamp != other.timeStamp) return false;
    if (position != other.position) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (id != 0) hash ^= id.GetHashCode();
    if (instanceId != 0) hash ^= instanceId.GetHashCode();
    if (status != global::InfoBoxStatus.Locked) hash ^= status.GetHashCode();
    if (coins != 0L) hash ^= coins.GetHashCode();
    hash ^= skillPoints_.GetHashCode();
    if (timeStamp != 0L) hash ^= timeStamp.GetHashCode();
    if (position != 0) hash ^= position.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (instanceId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(instanceId);
    }
    if (status != global::InfoBoxStatus.Locked) {
      output.WriteRawTag(24);
      output.WriteEnum((int) status);
    }
    if (coins != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(coins);
    }
    skillPoints_.WriteTo(output, _repeated_skillPoints_codec);
    if (timeStamp != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(timeStamp);
    }
    if (position != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(position);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (instanceId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(instanceId);
    }
    if (status != global::InfoBoxStatus.Locked) {
      output.WriteRawTag(24);
      output.WriteEnum((int) status);
    }
    if (coins != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(coins);
    }
    skillPoints_.WriteTo(ref output, _repeated_skillPoints_codec);
    if (timeStamp != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(timeStamp);
    }
    if (position != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(position);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(id);
    }
    if (instanceId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(instanceId);
    }
    if (status != global::InfoBoxStatus.Locked) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) status);
    }
    if (coins != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(coins);
    }
    size += skillPoints_.CalculateSize(_repeated_skillPoints_codec);
    if (timeStamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(timeStamp);
    }
    if (position != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(position);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoBox other) {
    if (other == null) {
      return;
    }
    if (other.id != 0) {
      id = other.id;
    }
    if (other.instanceId != 0) {
      instanceId = other.instanceId;
    }
    if (other.status != global::InfoBoxStatus.Locked) {
      status = other.status;
    }
    if (other.coins != 0L) {
      coins = other.coins;
    }
    skillPoints_.Add(other.skillPoints_);
    if (other.timeStamp != 0L) {
      timeStamp = other.timeStamp;
    }
    if (other.position != 0) {
      position = other.position;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          instanceId = input.ReadInt32();
          break;
        }
        case 24: {
          status = (global::InfoBoxStatus) input.ReadEnum();
          break;
        }
        case 32: {
          coins = input.ReadInt64();
          break;
        }
        case 42:
        case 40: {
          skillPoints_.AddEntriesFrom(input, _repeated_skillPoints_codec);
          break;
        }
        case 48: {
          timeStamp = input.ReadInt64();
          break;
        }
        case 56: {
          position = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          instanceId = input.ReadInt32();
          break;
        }
        case 24: {
          status = (global::InfoBoxStatus) input.ReadEnum();
          break;
        }
        case 32: {
          coins = input.ReadInt64();
          break;
        }
        case 42:
        case 40: {
          skillPoints_.AddEntriesFrom(ref input, _repeated_skillPoints_codec);
          break;
        }
        case 48: {
          timeStamp = input.ReadInt64();
          break;
        }
        case 56: {
          position = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoNewbieTask : pb::IMessage<InfoNewbieTask>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoNewbieTask> _parser = new pb::MessageParser<InfoNewbieTask>(() => new InfoNewbieTask());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoNewbieTask> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[9]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoNewbieTask() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoNewbieTask(InfoNewbieTask other) : this() {
    id_ = other.id_;
    needValue_ = other.needValue_.Clone();
    currentValue_ = other.currentValue_.Clone();
    status_ = other.status_;
    box_ = other.box_ != null ? other.box_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoNewbieTask Clone() {
    return new InfoNewbieTask(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int idFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 新手任务ID，初始为0
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "needValue" field.</summary>
  public const int needValueFieldNumber = 2;
  private static readonly pb::FieldCodec<long> _repeated_needValue_codec
      = pb::FieldCodec.ForInt64(18);
  private readonly pbc::RepeatedField<long> needValue_ = new pbc::RepeatedField<long>();
  /// <summary>
  /// 需要完成的数值,如果值为0代表任务要求的并非数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<long> needValue {
    get { return needValue_; }
  }

  /// <summary>Field number for the "currentValue" field.</summary>
  public const int currentValueFieldNumber = 3;
  private static readonly pb::FieldCodec<long> _repeated_currentValue_codec
      = pb::FieldCodec.ForInt64(26);
  private readonly pbc::RepeatedField<long> currentValue_ = new pbc::RepeatedField<long>();
  /// <summary>
  /// 当前完成的数值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<long> currentValue {
    get { return currentValue_; }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int statusFieldNumber = 4;
  private global::InfoTaskStatus status_ = global::InfoTaskStatus.UnStart;
  /// <summary>
  /// 当前新手任务状态:1-进行中 2-完成
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoTaskStatus status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "box" field.</summary>
  public const int boxFieldNumber = 5;
  private global::InfoBox box_;
  /// <summary>
  /// 宝箱
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoBox box {
    get { return box_; }
    set {
      box_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoNewbieTask);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoNewbieTask other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (id != other.id) return false;
    if(!needValue_.Equals(other.needValue_)) return false;
    if(!currentValue_.Equals(other.currentValue_)) return false;
    if (status != other.status) return false;
    if (!object.Equals(box, other.box)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (id != 0) hash ^= id.GetHashCode();
    hash ^= needValue_.GetHashCode();
    hash ^= currentValue_.GetHashCode();
    if (status != global::InfoTaskStatus.UnStart) hash ^= status.GetHashCode();
    if (box_ != null) hash ^= box.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    needValue_.WriteTo(output, _repeated_needValue_codec);
    currentValue_.WriteTo(output, _repeated_currentValue_codec);
    if (status != global::InfoTaskStatus.UnStart) {
      output.WriteRawTag(32);
      output.WriteEnum((int) status);
    }
    if (box_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(box);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    needValue_.WriteTo(ref output, _repeated_needValue_codec);
    currentValue_.WriteTo(ref output, _repeated_currentValue_codec);
    if (status != global::InfoTaskStatus.UnStart) {
      output.WriteRawTag(32);
      output.WriteEnum((int) status);
    }
    if (box_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(box);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(id);
    }
    size += needValue_.CalculateSize(_repeated_needValue_codec);
    size += currentValue_.CalculateSize(_repeated_currentValue_codec);
    if (status != global::InfoTaskStatus.UnStart) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) status);
    }
    if (box_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(box);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoNewbieTask other) {
    if (other == null) {
      return;
    }
    if (other.id != 0) {
      id = other.id;
    }
    needValue_.Add(other.needValue_);
    currentValue_.Add(other.currentValue_);
    if (other.status != global::InfoTaskStatus.UnStart) {
      status = other.status;
    }
    if (other.box_ != null) {
      if (box_ == null) {
        box = new global::InfoBox();
      }
      box.MergeFrom(other.box);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 18:
        case 16: {
          needValue_.AddEntriesFrom(input, _repeated_needValue_codec);
          break;
        }
        case 26:
        case 24: {
          currentValue_.AddEntriesFrom(input, _repeated_currentValue_codec);
          break;
        }
        case 32: {
          status = (global::InfoTaskStatus) input.ReadEnum();
          break;
        }
        case 42: {
          if (box_ == null) {
            box = new global::InfoBox();
          }
          input.ReadMessage(box);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 18:
        case 16: {
          needValue_.AddEntriesFrom(ref input, _repeated_needValue_codec);
          break;
        }
        case 26:
        case 24: {
          currentValue_.AddEntriesFrom(ref input, _repeated_currentValue_codec);
          break;
        }
        case 32: {
          status = (global::InfoTaskStatus) input.ReadEnum();
          break;
        }
        case 42: {
          if (box_ == null) {
            box = new global::InfoBox();
          }
          input.ReadMessage(box);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoTask : pb::IMessage<InfoTask>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoTask> _parser = new pb::MessageParser<InfoTask>(() => new InfoTask());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoTask> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[10]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoTask() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoTask(InfoTask other) : this() {
    id_ = other.id_;
    instanceId_ = other.instanceId_;
    status_ = other.status_;
    timeStamp_ = other.timeStamp_;
    difficulty_ = other.difficulty_;
    exps_ = other.exps_.Clone();
    needValue_ = other.needValue_.Clone();
    currentValue_ = other.currentValue_.Clone();
    boxes_ = other.boxes_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoTask Clone() {
    return new InfoTask(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int idFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 任务id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "instanceId" field.</summary>
  public const int instanceIdFieldNumber = 2;
  private int instanceId_;
  /// <summary>
  /// 任务实例id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int instanceId {
    get { return instanceId_; }
    set {
      instanceId_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int statusFieldNumber = 3;
  private global::InfoTaskStatus status_ = global::InfoTaskStatus.UnStart;
  /// <summary>
  /// 任务状态 0-未开始 1-进行中 2-已完成 3-失败
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoTaskStatus status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "timeStamp" field.</summary>
  public const int timeStampFieldNumber = 4;
  private long timeStamp_;
  /// <summary>
  /// 任务开始时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long timeStamp {
    get { return timeStamp_; }
    set {
      timeStamp_ = value;
    }
  }

  /// <summary>Field number for the "difficulty" field.</summary>
  public const int difficultyFieldNumber = 5;
  private int difficulty_;
  /// <summary>
  /// 任务难度(1,2,3)，限时任务可以选择任务难度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int difficulty {
    get { return difficulty_; }
    set {
      difficulty_ = value;
    }
  }

  /// <summary>Field number for the "exps" field.</summary>
  public const int expsFieldNumber = 6;
  private static readonly pb::FieldCodec<long> _repeated_exps_codec
      = pb::FieldCodec.ForInt64(50);
  private readonly pbc::RepeatedField<long> exps_ = new pbc::RepeatedField<long>();
  /// <summary>
  /// 任务经验
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<long> exps {
    get { return exps_; }
  }

  /// <summary>Field number for the "needValue" field.</summary>
  public const int needValueFieldNumber = 7;
  private static readonly pbc::MapField<int, global::IntArray>.Codec _map_needValue_codec
      = new pbc::MapField<int, global::IntArray>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::IntArray.Parser), 58);
  private readonly pbc::MapField<int, global::IntArray> needValue_ = new pbc::MapField<int, global::IntArray>();
  /// <summary>
  /// 需要完成的数值 难度id:数据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::IntArray> needValue {
    get { return needValue_; }
  }

  /// <summary>Field number for the "currentValue" field.</summary>
  public const int currentValueFieldNumber = 8;
  private static readonly pbc::MapField<int, global::IntArray>.Codec _map_currentValue_codec
      = new pbc::MapField<int, global::IntArray>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::IntArray.Parser), 66);
  private readonly pbc::MapField<int, global::IntArray> currentValue_ = new pbc::MapField<int, global::IntArray>();
  /// <summary>
  /// 当前完成的数值 难度id:数据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::IntArray> currentValue {
    get { return currentValue_; }
  }

  /// <summary>Field number for the "boxes" field.</summary>
  public const int boxesFieldNumber = 9;
  private static readonly pb::FieldCodec<global::InfoBox> _repeated_boxes_codec
      = pb::FieldCodec.ForMessage(74, global::InfoBox.Parser);
  private readonly pbc::RepeatedField<global::InfoBox> boxes_ = new pbc::RepeatedField<global::InfoBox>();
  /// <summary>
  /// 宝箱，当是限时任务时有3个宝箱可供用户选择
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::InfoBox> boxes {
    get { return boxes_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoTask);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoTask other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (id != other.id) return false;
    if (instanceId != other.instanceId) return false;
    if (status != other.status) return false;
    if (timeStamp != other.timeStamp) return false;
    if (difficulty != other.difficulty) return false;
    if(!exps_.Equals(other.exps_)) return false;
    if (!needValue.Equals(other.needValue)) return false;
    if (!currentValue.Equals(other.currentValue)) return false;
    if(!boxes_.Equals(other.boxes_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (id != 0) hash ^= id.GetHashCode();
    if (instanceId != 0) hash ^= instanceId.GetHashCode();
    if (status != global::InfoTaskStatus.UnStart) hash ^= status.GetHashCode();
    if (timeStamp != 0L) hash ^= timeStamp.GetHashCode();
    if (difficulty != 0) hash ^= difficulty.GetHashCode();
    hash ^= exps_.GetHashCode();
    hash ^= needValue.GetHashCode();
    hash ^= currentValue.GetHashCode();
    hash ^= boxes_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (instanceId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(instanceId);
    }
    if (status != global::InfoTaskStatus.UnStart) {
      output.WriteRawTag(24);
      output.WriteEnum((int) status);
    }
    if (timeStamp != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(timeStamp);
    }
    if (difficulty != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(difficulty);
    }
    exps_.WriteTo(output, _repeated_exps_codec);
    needValue_.WriteTo(output, _map_needValue_codec);
    currentValue_.WriteTo(output, _map_currentValue_codec);
    boxes_.WriteTo(output, _repeated_boxes_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (instanceId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(instanceId);
    }
    if (status != global::InfoTaskStatus.UnStart) {
      output.WriteRawTag(24);
      output.WriteEnum((int) status);
    }
    if (timeStamp != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(timeStamp);
    }
    if (difficulty != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(difficulty);
    }
    exps_.WriteTo(ref output, _repeated_exps_codec);
    needValue_.WriteTo(ref output, _map_needValue_codec);
    currentValue_.WriteTo(ref output, _map_currentValue_codec);
    boxes_.WriteTo(ref output, _repeated_boxes_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(id);
    }
    if (instanceId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(instanceId);
    }
    if (status != global::InfoTaskStatus.UnStart) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) status);
    }
    if (timeStamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(timeStamp);
    }
    if (difficulty != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(difficulty);
    }
    size += exps_.CalculateSize(_repeated_exps_codec);
    size += needValue_.CalculateSize(_map_needValue_codec);
    size += currentValue_.CalculateSize(_map_currentValue_codec);
    size += boxes_.CalculateSize(_repeated_boxes_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoTask other) {
    if (other == null) {
      return;
    }
    if (other.id != 0) {
      id = other.id;
    }
    if (other.instanceId != 0) {
      instanceId = other.instanceId;
    }
    if (other.status != global::InfoTaskStatus.UnStart) {
      status = other.status;
    }
    if (other.timeStamp != 0L) {
      timeStamp = other.timeStamp;
    }
    if (other.difficulty != 0) {
      difficulty = other.difficulty;
    }
    exps_.Add(other.exps_);
    needValue_.Add(other.needValue_);
    currentValue_.Add(other.currentValue_);
    boxes_.Add(other.boxes_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          instanceId = input.ReadInt32();
          break;
        }
        case 24: {
          status = (global::InfoTaskStatus) input.ReadEnum();
          break;
        }
        case 32: {
          timeStamp = input.ReadInt64();
          break;
        }
        case 40: {
          difficulty = input.ReadInt32();
          break;
        }
        case 50:
        case 48: {
          exps_.AddEntriesFrom(input, _repeated_exps_codec);
          break;
        }
        case 58: {
          needValue_.AddEntriesFrom(input, _map_needValue_codec);
          break;
        }
        case 66: {
          currentValue_.AddEntriesFrom(input, _map_currentValue_codec);
          break;
        }
        case 74: {
          boxes_.AddEntriesFrom(input, _repeated_boxes_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          instanceId = input.ReadInt32();
          break;
        }
        case 24: {
          status = (global::InfoTaskStatus) input.ReadEnum();
          break;
        }
        case 32: {
          timeStamp = input.ReadInt64();
          break;
        }
        case 40: {
          difficulty = input.ReadInt32();
          break;
        }
        case 50:
        case 48: {
          exps_.AddEntriesFrom(ref input, _repeated_exps_codec);
          break;
        }
        case 58: {
          needValue_.AddEntriesFrom(ref input, _map_needValue_codec);
          break;
        }
        case 66: {
          currentValue_.AddEntriesFrom(ref input, _map_currentValue_codec);
          break;
        }
        case 74: {
          boxes_.AddEntriesFrom(ref input, _repeated_boxes_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoDailyTask : pb::IMessage<InfoDailyTask>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoDailyTask> _parser = new pb::MessageParser<InfoDailyTask>(() => new InfoDailyTask());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoDailyTask> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[11]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoDailyTask() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoDailyTask(InfoDailyTask other) : this() {
    id_ = other.id_;
    instanceId_ = other.instanceId_;
    status_ = other.status_;
    startTime_ = other.startTime_;
    currentStage_ = other.currentStage_;
    dailyStage_ = other.dailyStage_;
    currentValue_ = other.currentValue_;
    needValue_ = other.needValue_;
    taskTime_ = other.taskTime_;
    times_ = other.times_;
    dailyValue_ = other.dailyValue_;
    historyMap_ = other.historyMap_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoDailyTask Clone() {
    return new InfoDailyTask(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int idFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 任务id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "instanceId" field.</summary>
  public const int instanceIdFieldNumber = 2;
  private int instanceId_;
  /// <summary>
  /// 实例id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int instanceId {
    get { return instanceId_; }
    set {
      instanceId_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int statusFieldNumber = 3;
  private global::InfoDailyTaskStatus status_ = global::InfoDailyTaskStatus.UnStart;
  /// <summary>
  /// 状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoDailyTaskStatus status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "startTime" field.</summary>
  public const int startTimeFieldNumber = 4;
  private long startTime_;
  /// <summary>
  /// 每日任务开始挑战的时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long startTime {
    get { return startTime_; }
    set {
      startTime_ = value;
    }
  }

  /// <summary>Field number for the "currentStage" field.</summary>
  public const int currentStageFieldNumber = 5;
  private int currentStage_;
  /// <summary>
  /// 当前阶段
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int currentStage {
    get { return currentStage_; }
    set {
      currentStage_ = value;
    }
  }

  /// <summary>Field number for the "dailyStage" field.</summary>
  public const int dailyStageFieldNumber = 6;
  private int dailyStage_;
  /// <summary>
  /// 今日最高阶段
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int dailyStage {
    get { return dailyStage_; }
    set {
      dailyStage_ = value;
    }
  }

  /// <summary>Field number for the "currentValue" field.</summary>
  public const int currentValueFieldNumber = 7;
  private int currentValue_;
  /// <summary>
  /// 任务进度当前值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int currentValue {
    get { return currentValue_; }
    set {
      currentValue_ = value;
    }
  }

  /// <summary>Field number for the "needValue" field.</summary>
  public const int needValueFieldNumber = 8;
  private int needValue_;
  /// <summary>
  /// 任务进度需要值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int needValue {
    get { return needValue_; }
    set {
      needValue_ = value;
    }
  }

  /// <summary>Field number for the "taskTime" field.</summary>
  public const int taskTimeFieldNumber = 9;
  private long taskTime_;
  /// <summary>
  /// 任务生成时间，用于处理跨天
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long taskTime {
    get { return taskTime_; }
    set {
      taskTime_ = value;
    }
  }

  /// <summary>Field number for the "times" field.</summary>
  public const int timesFieldNumber = 10;
  private int times_;
  /// <summary>
  /// 今日挑战次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int times {
    get { return times_; }
    set {
      times_ = value;
    }
  }

  /// <summary>Field number for the "dailyValue" field.</summary>
  public const int dailyValueFieldNumber = 11;
  private int dailyValue_;
  /// <summary>
  /// 今日最佳任务数值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int dailyValue {
    get { return dailyValue_; }
    set {
      dailyValue_ = value;
    }
  }

  /// <summary>Field number for the "historyMap" field.</summary>
  public const int historyMapFieldNumber = 12;
  private static readonly pbc::MapField<int, int>.Codec _map_historyMap_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 98);
  private readonly pbc::MapField<int, int> historyMap_ = new pbc::MapField<int, int>();
  /// <summary>
  /// 各任务历史最高阶段map 任务id:历史最高阶段
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> historyMap {
    get { return historyMap_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoDailyTask);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoDailyTask other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (id != other.id) return false;
    if (instanceId != other.instanceId) return false;
    if (status != other.status) return false;
    if (startTime != other.startTime) return false;
    if (currentStage != other.currentStage) return false;
    if (dailyStage != other.dailyStage) return false;
    if (currentValue != other.currentValue) return false;
    if (needValue != other.needValue) return false;
    if (taskTime != other.taskTime) return false;
    if (times != other.times) return false;
    if (dailyValue != other.dailyValue) return false;
    if (!historyMap.Equals(other.historyMap)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (id != 0) hash ^= id.GetHashCode();
    if (instanceId != 0) hash ^= instanceId.GetHashCode();
    if (status != global::InfoDailyTaskStatus.UnStart) hash ^= status.GetHashCode();
    if (startTime != 0L) hash ^= startTime.GetHashCode();
    if (currentStage != 0) hash ^= currentStage.GetHashCode();
    if (dailyStage != 0) hash ^= dailyStage.GetHashCode();
    if (currentValue != 0) hash ^= currentValue.GetHashCode();
    if (needValue != 0) hash ^= needValue.GetHashCode();
    if (taskTime != 0L) hash ^= taskTime.GetHashCode();
    if (times != 0) hash ^= times.GetHashCode();
    if (dailyValue != 0) hash ^= dailyValue.GetHashCode();
    hash ^= historyMap.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (instanceId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(instanceId);
    }
    if (status != global::InfoDailyTaskStatus.UnStart) {
      output.WriteRawTag(24);
      output.WriteEnum((int) status);
    }
    if (startTime != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(startTime);
    }
    if (currentStage != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(currentStage);
    }
    if (dailyStage != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(dailyStage);
    }
    if (currentValue != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(currentValue);
    }
    if (needValue != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(needValue);
    }
    if (taskTime != 0L) {
      output.WriteRawTag(72);
      output.WriteInt64(taskTime);
    }
    if (times != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(times);
    }
    if (dailyValue != 0) {
      output.WriteRawTag(88);
      output.WriteInt32(dailyValue);
    }
    historyMap_.WriteTo(output, _map_historyMap_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (instanceId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(instanceId);
    }
    if (status != global::InfoDailyTaskStatus.UnStart) {
      output.WriteRawTag(24);
      output.WriteEnum((int) status);
    }
    if (startTime != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(startTime);
    }
    if (currentStage != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(currentStage);
    }
    if (dailyStage != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(dailyStage);
    }
    if (currentValue != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(currentValue);
    }
    if (needValue != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(needValue);
    }
    if (taskTime != 0L) {
      output.WriteRawTag(72);
      output.WriteInt64(taskTime);
    }
    if (times != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(times);
    }
    if (dailyValue != 0) {
      output.WriteRawTag(88);
      output.WriteInt32(dailyValue);
    }
    historyMap_.WriteTo(ref output, _map_historyMap_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(id);
    }
    if (instanceId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(instanceId);
    }
    if (status != global::InfoDailyTaskStatus.UnStart) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) status);
    }
    if (startTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(startTime);
    }
    if (currentStage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(currentStage);
    }
    if (dailyStage != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(dailyStage);
    }
    if (currentValue != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(currentValue);
    }
    if (needValue != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(needValue);
    }
    if (taskTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(taskTime);
    }
    if (times != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(times);
    }
    if (dailyValue != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(dailyValue);
    }
    size += historyMap_.CalculateSize(_map_historyMap_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoDailyTask other) {
    if (other == null) {
      return;
    }
    if (other.id != 0) {
      id = other.id;
    }
    if (other.instanceId != 0) {
      instanceId = other.instanceId;
    }
    if (other.status != global::InfoDailyTaskStatus.UnStart) {
      status = other.status;
    }
    if (other.startTime != 0L) {
      startTime = other.startTime;
    }
    if (other.currentStage != 0) {
      currentStage = other.currentStage;
    }
    if (other.dailyStage != 0) {
      dailyStage = other.dailyStage;
    }
    if (other.currentValue != 0) {
      currentValue = other.currentValue;
    }
    if (other.needValue != 0) {
      needValue = other.needValue;
    }
    if (other.taskTime != 0L) {
      taskTime = other.taskTime;
    }
    if (other.times != 0) {
      times = other.times;
    }
    if (other.dailyValue != 0) {
      dailyValue = other.dailyValue;
    }
    historyMap_.Add(other.historyMap_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          instanceId = input.ReadInt32();
          break;
        }
        case 24: {
          status = (global::InfoDailyTaskStatus) input.ReadEnum();
          break;
        }
        case 32: {
          startTime = input.ReadInt64();
          break;
        }
        case 40: {
          currentStage = input.ReadInt32();
          break;
        }
        case 48: {
          dailyStage = input.ReadInt32();
          break;
        }
        case 56: {
          currentValue = input.ReadInt32();
          break;
        }
        case 64: {
          needValue = input.ReadInt32();
          break;
        }
        case 72: {
          taskTime = input.ReadInt64();
          break;
        }
        case 80: {
          times = input.ReadInt32();
          break;
        }
        case 88: {
          dailyValue = input.ReadInt32();
          break;
        }
        case 98: {
          historyMap_.AddEntriesFrom(input, _map_historyMap_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          instanceId = input.ReadInt32();
          break;
        }
        case 24: {
          status = (global::InfoDailyTaskStatus) input.ReadEnum();
          break;
        }
        case 32: {
          startTime = input.ReadInt64();
          break;
        }
        case 40: {
          currentStage = input.ReadInt32();
          break;
        }
        case 48: {
          dailyStage = input.ReadInt32();
          break;
        }
        case 56: {
          currentValue = input.ReadInt32();
          break;
        }
        case 64: {
          needValue = input.ReadInt32();
          break;
        }
        case 72: {
          taskTime = input.ReadInt64();
          break;
        }
        case 80: {
          times = input.ReadInt32();
          break;
        }
        case 88: {
          dailyValue = input.ReadInt32();
          break;
        }
        case 98: {
          historyMap_.AddEntriesFrom(ref input, _map_historyMap_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoChangeTaskTime : pb::IMessage<InfoChangeTaskTime>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoChangeTaskTime> _parser = new pb::MessageParser<InfoChangeTaskTime>(() => new InfoChangeTaskTime());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoChangeTaskTime> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[12]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoChangeTaskTime() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoChangeTaskTime(InfoChangeTaskTime other) : this() {
    time_ = other.time_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoChangeTaskTime Clone() {
    return new InfoChangeTaskTime(this);
  }

  /// <summary>Field number for the "time" field.</summary>
  public const int timeFieldNumber = 1;
  private long time_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long time {
    get { return time_; }
    set {
      time_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoChangeTaskTime);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoChangeTaskTime other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (time != other.time) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (time != 0L) hash ^= time.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (time != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (time != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (time != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(time);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoChangeTaskTime other) {
    if (other == null) {
      return;
    }
    if (other.time != 0L) {
      time = other.time;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          time = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          time = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoFocusTask : pb::IMessage<InfoFocusTask>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoFocusTask> _parser = new pb::MessageParser<InfoFocusTask>(() => new InfoFocusTask());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoFocusTask> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[13]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoFocusTask() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoFocusTask(InfoFocusTask other) : this() {
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoFocusTask Clone() {
    return new InfoFocusTask(this);
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int typeFieldNumber = 1;
  private int type_;
  /// <summary>
  ///任务类型，--1 每日任务 --2 新手任务 --3 普通任务
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoFocusTask);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoFocusTask other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (type != other.type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (type != 0) hash ^= type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (type != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (type != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoFocusTask other) {
    if (other == null) {
      return;
    }
    if (other.type != 0) {
      type = other.type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          type = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          type = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoTaskSystem : pb::IMessage<InfoTaskSystem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoTaskSystem> _parser = new pb::MessageParser<InfoTaskSystem>(() => new InfoTaskSystem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoTaskSystem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[14]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoTaskSystem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoTaskSystem(InfoTaskSystem other) : this() {
    newbieTask_ = other.newbieTask_ != null ? other.newbieTask_.Clone() : null;
    task_ = other.task_ != null ? other.task_.Clone() : null;
    dailyTask_ = other.dailyTask_ != null ? other.dailyTask_.Clone() : null;
    changeTaskTime_ = other.changeTaskTime_ != null ? other.changeTaskTime_.Clone() : null;
    focusTask_ = other.focusTask_ != null ? other.focusTask_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoTaskSystem Clone() {
    return new InfoTaskSystem(this);
  }

  /// <summary>Field number for the "newbieTask" field.</summary>
  public const int newbieTaskFieldNumber = 1;
  private global::InfoNewbieTask newbieTask_;
  /// <summary>
  /// 新手任务
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoNewbieTask newbieTask {
    get { return newbieTask_; }
    set {
      newbieTask_ = value;
    }
  }

  /// <summary>Field number for the "task" field.</summary>
  public const int taskFieldNumber = 2;
  private global::InfoTask task_;
  /// <summary>
  /// 普通任务
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoTask task {
    get { return task_; }
    set {
      task_ = value;
    }
  }

  /// <summary>Field number for the "dailyTask" field.</summary>
  public const int dailyTaskFieldNumber = 3;
  private global::InfoDailyTask dailyTask_;
  /// <summary>
  /// 每日任务
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoDailyTask dailyTask {
    get { return dailyTask_; }
    set {
      dailyTask_ = value;
    }
  }

  /// <summary>Field number for the "changeTaskTime" field.</summary>
  public const int changeTaskTimeFieldNumber = 4;
  private global::InfoChangeTaskTime changeTaskTime_;
  /// <summary>
  /// 上次切换任务时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoChangeTaskTime changeTaskTime {
    get { return changeTaskTime_; }
    set {
      changeTaskTime_ = value;
    }
  }

  /// <summary>Field number for the "focusTask" field.</summary>
  public const int focusTaskFieldNumber = 5;
  private global::InfoFocusTask focusTask_;
  /// <summary>
  /// 当前聚焦任务
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoFocusTask focusTask {
    get { return focusTask_; }
    set {
      focusTask_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoTaskSystem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoTaskSystem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(newbieTask, other.newbieTask)) return false;
    if (!object.Equals(task, other.task)) return false;
    if (!object.Equals(dailyTask, other.dailyTask)) return false;
    if (!object.Equals(changeTaskTime, other.changeTaskTime)) return false;
    if (!object.Equals(focusTask, other.focusTask)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (newbieTask_ != null) hash ^= newbieTask.GetHashCode();
    if (task_ != null) hash ^= task.GetHashCode();
    if (dailyTask_ != null) hash ^= dailyTask.GetHashCode();
    if (changeTaskTime_ != null) hash ^= changeTaskTime.GetHashCode();
    if (focusTask_ != null) hash ^= focusTask.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (newbieTask_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(newbieTask);
    }
    if (task_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(task);
    }
    if (dailyTask_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(dailyTask);
    }
    if (changeTaskTime_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(changeTaskTime);
    }
    if (focusTask_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(focusTask);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (newbieTask_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(newbieTask);
    }
    if (task_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(task);
    }
    if (dailyTask_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(dailyTask);
    }
    if (changeTaskTime_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(changeTaskTime);
    }
    if (focusTask_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(focusTask);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (newbieTask_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(newbieTask);
    }
    if (task_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(task);
    }
    if (dailyTask_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(dailyTask);
    }
    if (changeTaskTime_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(changeTaskTime);
    }
    if (focusTask_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(focusTask);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoTaskSystem other) {
    if (other == null) {
      return;
    }
    if (other.newbieTask_ != null) {
      if (newbieTask_ == null) {
        newbieTask = new global::InfoNewbieTask();
      }
      newbieTask.MergeFrom(other.newbieTask);
    }
    if (other.task_ != null) {
      if (task_ == null) {
        task = new global::InfoTask();
      }
      task.MergeFrom(other.task);
    }
    if (other.dailyTask_ != null) {
      if (dailyTask_ == null) {
        dailyTask = new global::InfoDailyTask();
      }
      dailyTask.MergeFrom(other.dailyTask);
    }
    if (other.changeTaskTime_ != null) {
      if (changeTaskTime_ == null) {
        changeTaskTime = new global::InfoChangeTaskTime();
      }
      changeTaskTime.MergeFrom(other.changeTaskTime);
    }
    if (other.focusTask_ != null) {
      if (focusTask_ == null) {
        focusTask = new global::InfoFocusTask();
      }
      focusTask.MergeFrom(other.focusTask);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (newbieTask_ == null) {
            newbieTask = new global::InfoNewbieTask();
          }
          input.ReadMessage(newbieTask);
          break;
        }
        case 18: {
          if (task_ == null) {
            task = new global::InfoTask();
          }
          input.ReadMessage(task);
          break;
        }
        case 26: {
          if (dailyTask_ == null) {
            dailyTask = new global::InfoDailyTask();
          }
          input.ReadMessage(dailyTask);
          break;
        }
        case 34: {
          if (changeTaskTime_ == null) {
            changeTaskTime = new global::InfoChangeTaskTime();
          }
          input.ReadMessage(changeTaskTime);
          break;
        }
        case 42: {
          if (focusTask_ == null) {
            focusTask = new global::InfoFocusTask();
          }
          input.ReadMessage(focusTask);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (newbieTask_ == null) {
            newbieTask = new global::InfoNewbieTask();
          }
          input.ReadMessage(newbieTask);
          break;
        }
        case 18: {
          if (task_ == null) {
            task = new global::InfoTask();
          }
          input.ReadMessage(task);
          break;
        }
        case 26: {
          if (dailyTask_ == null) {
            dailyTask = new global::InfoDailyTask();
          }
          input.ReadMessage(dailyTask);
          break;
        }
        case 34: {
          if (changeTaskTime_ == null) {
            changeTaskTime = new global::InfoChangeTaskTime();
          }
          input.ReadMessage(changeTaskTime);
          break;
        }
        case 42: {
          if (focusTask_ == null) {
            focusTask = new global::InfoFocusTask();
          }
          input.ReadMessage(focusTask);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoShopBuffAddGoods : pb::IMessage<InfoShopBuffAddGoods>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoShopBuffAddGoods> _parser = new pb::MessageParser<InfoShopBuffAddGoods>(() => new InfoShopBuffAddGoods());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoShopBuffAddGoods> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[15]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShopBuffAddGoods() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShopBuffAddGoods(InfoShopBuffAddGoods other) : this() {
    probability_ = other.probability_;
    goods_ = other.goods_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShopBuffAddGoods Clone() {
    return new InfoShopBuffAddGoods(this);
  }

  /// <summary>Field number for the "probability" field.</summary>
  public const int probabilityFieldNumber = 1;
  private int probability_;
  /// <summary>
  /// 概率
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int probability {
    get { return probability_; }
    set {
      probability_ = value;
    }
  }

  /// <summary>Field number for the "goods" field.</summary>
  public const int goodsFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_goods_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> goods_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// {男商品，女商品}或{商品}}}
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> goods {
    get { return goods_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoShopBuffAddGoods);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoShopBuffAddGoods other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (probability != other.probability) return false;
    if(!goods_.Equals(other.goods_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (probability != 0) hash ^= probability.GetHashCode();
    hash ^= goods_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (probability != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(probability);
    }
    goods_.WriteTo(output, _repeated_goods_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (probability != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(probability);
    }
    goods_.WriteTo(ref output, _repeated_goods_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (probability != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(probability);
    }
    size += goods_.CalculateSize(_repeated_goods_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoShopBuffAddGoods other) {
    if (other == null) {
      return;
    }
    if (other.probability != 0) {
      probability = other.probability;
    }
    goods_.Add(other.goods_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          probability = input.ReadInt32();
          break;
        }
        case 18:
        case 16: {
          goods_.AddEntriesFrom(input, _repeated_goods_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          probability = input.ReadInt32();
          break;
        }
        case 18:
        case 16: {
          goods_.AddEntriesFrom(ref input, _repeated_goods_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoShopBuff : pb::IMessage<InfoShopBuff>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoShopBuff> _parser = new pb::MessageParser<InfoShopBuff>(() => new InfoShopBuff());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoShopBuff> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[16]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShopBuff() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShopBuff(InfoShopBuff other) : this() {
    priceUp_ = other.priceUp_;
    produceSpeed_ = other.produceSpeed_;
    buySpeed_ = other.buySpeed_;
    freeProduce_ = other.freeProduce_;
    extraGoods_ = other.extraGoods_.Clone();
    autoCount_ = other.autoCount_;
    saleExp_ = other.saleExp_;
    addGoods_ = other.addGoods_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShopBuff Clone() {
    return new InfoShopBuff(this);
  }

  /// <summary>Field number for the "priceUp" field.</summary>
  public const int priceUpFieldNumber = 1;
  private int priceUp_;
  /// <summary>
  /// 商品售价系数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int priceUp {
    get { return priceUp_; }
    set {
      priceUp_ = value;
    }
  }

  /// <summary>Field number for the "produceSpeed" field.</summary>
  public const int produceSpeedFieldNumber = 2;
  private int produceSpeed_;
  /// <summary>
  /// 进货时间系数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int produceSpeed {
    get { return produceSpeed_; }
    set {
      produceSpeed_ = value;
    }
  }

  /// <summary>Field number for the "buySpeed" field.</summary>
  public const int buySpeedFieldNumber = 3;
  private int buySpeed_;
  /// <summary>
  /// 消费速度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int buySpeed {
    get { return buySpeed_; }
    set {
      buySpeed_ = value;
    }
  }

  /// <summary>Field number for the "freeProduce" field.</summary>
  public const int freeProduceFieldNumber = 4;
  private int freeProduce_;
  /// <summary>
  /// 免费进货
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int freeProduce {
    get { return freeProduce_; }
    set {
      freeProduce_ = value;
    }
  }

  /// <summary>Field number for the "extraGoods" field.</summary>
  public const int extraGoodsFieldNumber = 5;
  private static readonly pbc::MapField<int, int>.Codec _map_extraGoods_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 42);
  private readonly pbc::MapField<int, int> extraGoods_ = new pbc::MapField<int, int>();
  /// <summary>
  /// 进某个货，增加数量 {商品id = 额外增加的数量}
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> extraGoods {
    get { return extraGoods_; }
  }

  /// <summary>Field number for the "autoCount" field.</summary>
  public const int autoCountFieldNumber = 6;
  private int autoCount_;
  /// <summary>
  /// 自动补货数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int autoCount {
    get { return autoCount_; }
    set {
      autoCount_ = value;
    }
  }

  /// <summary>Field number for the "saleExp" field.</summary>
  public const int saleExpFieldNumber = 7;
  private int saleExp_;
  /// <summary>
  /// 售货加经验buff
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int saleExp {
    get { return saleExp_; }
    set {
      saleExp_ = value;
    }
  }

  /// <summary>Field number for the "addGoods" field.</summary>
  public const int addGoodsFieldNumber = 8;
  private static readonly pb::FieldCodec<global::InfoShopBuffAddGoods> _repeated_addGoods_codec
      = pb::FieldCodec.ForMessage(66, global::InfoShopBuffAddGoods.Parser);
  private readonly pbc::RepeatedField<global::InfoShopBuffAddGoods> addGoods_ = new pbc::RepeatedField<global::InfoShopBuffAddGoods>();
  /// <summary>
  /// 在商店消费，一定概率新增商品需求
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::InfoShopBuffAddGoods> addGoods {
    get { return addGoods_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoShopBuff);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoShopBuff other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (priceUp != other.priceUp) return false;
    if (produceSpeed != other.produceSpeed) return false;
    if (buySpeed != other.buySpeed) return false;
    if (freeProduce != other.freeProduce) return false;
    if (!extraGoods.Equals(other.extraGoods)) return false;
    if (autoCount != other.autoCount) return false;
    if (saleExp != other.saleExp) return false;
    if(!addGoods_.Equals(other.addGoods_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (priceUp != 0) hash ^= priceUp.GetHashCode();
    if (produceSpeed != 0) hash ^= produceSpeed.GetHashCode();
    if (buySpeed != 0) hash ^= buySpeed.GetHashCode();
    if (freeProduce != 0) hash ^= freeProduce.GetHashCode();
    hash ^= extraGoods.GetHashCode();
    if (autoCount != 0) hash ^= autoCount.GetHashCode();
    if (saleExp != 0) hash ^= saleExp.GetHashCode();
    hash ^= addGoods_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (priceUp != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(priceUp);
    }
    if (produceSpeed != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(produceSpeed);
    }
    if (buySpeed != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(buySpeed);
    }
    if (freeProduce != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(freeProduce);
    }
    extraGoods_.WriteTo(output, _map_extraGoods_codec);
    if (autoCount != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(autoCount);
    }
    if (saleExp != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(saleExp);
    }
    addGoods_.WriteTo(output, _repeated_addGoods_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (priceUp != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(priceUp);
    }
    if (produceSpeed != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(produceSpeed);
    }
    if (buySpeed != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(buySpeed);
    }
    if (freeProduce != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(freeProduce);
    }
    extraGoods_.WriteTo(ref output, _map_extraGoods_codec);
    if (autoCount != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(autoCount);
    }
    if (saleExp != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(saleExp);
    }
    addGoods_.WriteTo(ref output, _repeated_addGoods_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (priceUp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(priceUp);
    }
    if (produceSpeed != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(produceSpeed);
    }
    if (buySpeed != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(buySpeed);
    }
    if (freeProduce != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(freeProduce);
    }
    size += extraGoods_.CalculateSize(_map_extraGoods_codec);
    if (autoCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(autoCount);
    }
    if (saleExp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(saleExp);
    }
    size += addGoods_.CalculateSize(_repeated_addGoods_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoShopBuff other) {
    if (other == null) {
      return;
    }
    if (other.priceUp != 0) {
      priceUp = other.priceUp;
    }
    if (other.produceSpeed != 0) {
      produceSpeed = other.produceSpeed;
    }
    if (other.buySpeed != 0) {
      buySpeed = other.buySpeed;
    }
    if (other.freeProduce != 0) {
      freeProduce = other.freeProduce;
    }
    extraGoods_.Add(other.extraGoods_);
    if (other.autoCount != 0) {
      autoCount = other.autoCount;
    }
    if (other.saleExp != 0) {
      saleExp = other.saleExp;
    }
    addGoods_.Add(other.addGoods_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          priceUp = input.ReadInt32();
          break;
        }
        case 16: {
          produceSpeed = input.ReadInt32();
          break;
        }
        case 24: {
          buySpeed = input.ReadInt32();
          break;
        }
        case 32: {
          freeProduce = input.ReadInt32();
          break;
        }
        case 42: {
          extraGoods_.AddEntriesFrom(input, _map_extraGoods_codec);
          break;
        }
        case 48: {
          autoCount = input.ReadInt32();
          break;
        }
        case 56: {
          saleExp = input.ReadInt32();
          break;
        }
        case 66: {
          addGoods_.AddEntriesFrom(input, _repeated_addGoods_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          priceUp = input.ReadInt32();
          break;
        }
        case 16: {
          produceSpeed = input.ReadInt32();
          break;
        }
        case 24: {
          buySpeed = input.ReadInt32();
          break;
        }
        case 32: {
          freeProduce = input.ReadInt32();
          break;
        }
        case 42: {
          extraGoods_.AddEntriesFrom(ref input, _map_extraGoods_codec);
          break;
        }
        case 48: {
          autoCount = input.ReadInt32();
          break;
        }
        case 56: {
          saleExp = input.ReadInt32();
          break;
        }
        case 66: {
          addGoods_.AddEntriesFrom(ref input, _repeated_addGoods_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoBuffValue : pb::IMessage<InfoBuffValue>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoBuffValue> _parser = new pb::MessageParser<InfoBuffValue>(() => new InfoBuffValue());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoBuffValue> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[17]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoBuffValue() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoBuffValue(InfoBuffValue other) : this() {
    shopBuff_ = other.shopBuff_.Clone();
    energyMax_ = other.energyMax_;
    guestMax_ = other.guestMax_;
    energySpeed_ = other.energySpeed_;
    taskTimeUp_ = other.taskTimeUp_;
    taskExpUp_ = other.taskExpUp_;
    boxSpeed_ = other.boxSpeed_;
    guestMoveSpeed_ = other.guestMoveSpeed_;
    onlineRewardUp_ = other.onlineRewardUp_;
    guestCoinsUp_ = other.guestCoinsUp_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoBuffValue Clone() {
    return new InfoBuffValue(this);
  }

  /// <summary>Field number for the "shopBuff" field.</summary>
  public const int shopBuffFieldNumber = 1;
  private static readonly pbc::MapField<int, global::InfoShopBuff>.Codec _map_shopBuff_codec
      = new pbc::MapField<int, global::InfoShopBuff>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::InfoShopBuff.Parser), 10);
  private readonly pbc::MapField<int, global::InfoShopBuff> shopBuff_ = new pbc::MapField<int, global::InfoShopBuff>();
  /// <summary>
  /// 店铺相关，店铺id:店铺buff
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::InfoShopBuff> shopBuff {
    get { return shopBuff_; }
  }

  /// <summary>Field number for the "energyMax" field.</summary>
  public const int energyMaxFieldNumber = 2;
  private int energyMax_;
  /// <summary>
  /// 增加体力上限
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int energyMax {
    get { return energyMax_; }
    set {
      energyMax_ = value;
    }
  }

  /// <summary>Field number for the "guestMax" field.</summary>
  public const int guestMaxFieldNumber = 3;
  private int guestMax_;
  /// <summary>
  /// 增加客人容量上限
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int guestMax {
    get { return guestMax_; }
    set {
      guestMax_ = value;
    }
  }

  /// <summary>Field number for the "energySpeed" field.</summary>
  public const int energySpeedFieldNumber = 4;
  private int energySpeed_;
  /// <summary>
  /// 体力恢复系数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int energySpeed {
    get { return energySpeed_; }
    set {
      energySpeed_ = value;
    }
  }

  /// <summary>Field number for the "taskTimeUp" field.</summary>
  public const int taskTimeUpFieldNumber = 5;
  private int taskTimeUp_;
  /// <summary>
  /// 任务时限提高
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int taskTimeUp {
    get { return taskTimeUp_; }
    set {
      taskTimeUp_ = value;
    }
  }

  /// <summary>Field number for the "taskExpUp" field.</summary>
  public const int taskExpUpFieldNumber = 6;
  private int taskExpUp_;
  /// <summary>
  /// 任务经验提高
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int taskExpUp {
    get { return taskExpUp_; }
    set {
      taskExpUp_ = value;
    }
  }

  /// <summary>Field number for the "boxSpeed" field.</summary>
  public const int boxSpeedFieldNumber = 7;
  private int boxSpeed_;
  /// <summary>
  /// 宝箱开启加速
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int boxSpeed {
    get { return boxSpeed_; }
    set {
      boxSpeed_ = value;
    }
  }

  /// <summary>Field number for the "guestMoveSpeed" field.</summary>
  public const int guestMoveSpeedFieldNumber = 8;
  private int guestMoveSpeed_;
  /// <summary>
  /// 顾客移动速度加成
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int guestMoveSpeed {
    get { return guestMoveSpeed_; }
    set {
      guestMoveSpeed_ = value;
    }
  }

  /// <summary>Field number for the "onlineRewardUp" field.</summary>
  public const int onlineRewardUpFieldNumber = 9;
  private int onlineRewardUp_;
  /// <summary>
  /// 挂机收益上限提高
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int onlineRewardUp {
    get { return onlineRewardUp_; }
    set {
      onlineRewardUp_ = value;
    }
  }

  /// <summary>Field number for the "guestCoinsUp" field.</summary>
  public const int guestCoinsUpFieldNumber = 10;
  private static readonly pbc::MapField<int, int>.Codec _map_guestCoinsUp_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 82);
  private readonly pbc::MapField<int, int> guestCoinsUp_ = new pbc::MapField<int, int>();
  /// <summary>
  /// 顾客携带金币提高 顾客类型:提高系数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> guestCoinsUp {
    get { return guestCoinsUp_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoBuffValue);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoBuffValue other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!shopBuff.Equals(other.shopBuff)) return false;
    if (energyMax != other.energyMax) return false;
    if (guestMax != other.guestMax) return false;
    if (energySpeed != other.energySpeed) return false;
    if (taskTimeUp != other.taskTimeUp) return false;
    if (taskExpUp != other.taskExpUp) return false;
    if (boxSpeed != other.boxSpeed) return false;
    if (guestMoveSpeed != other.guestMoveSpeed) return false;
    if (onlineRewardUp != other.onlineRewardUp) return false;
    if (!guestCoinsUp.Equals(other.guestCoinsUp)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= shopBuff.GetHashCode();
    if (energyMax != 0) hash ^= energyMax.GetHashCode();
    if (guestMax != 0) hash ^= guestMax.GetHashCode();
    if (energySpeed != 0) hash ^= energySpeed.GetHashCode();
    if (taskTimeUp != 0) hash ^= taskTimeUp.GetHashCode();
    if (taskExpUp != 0) hash ^= taskExpUp.GetHashCode();
    if (boxSpeed != 0) hash ^= boxSpeed.GetHashCode();
    if (guestMoveSpeed != 0) hash ^= guestMoveSpeed.GetHashCode();
    if (onlineRewardUp != 0) hash ^= onlineRewardUp.GetHashCode();
    hash ^= guestCoinsUp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    shopBuff_.WriteTo(output, _map_shopBuff_codec);
    if (energyMax != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(energyMax);
    }
    if (guestMax != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(guestMax);
    }
    if (energySpeed != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(energySpeed);
    }
    if (taskTimeUp != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(taskTimeUp);
    }
    if (taskExpUp != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(taskExpUp);
    }
    if (boxSpeed != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(boxSpeed);
    }
    if (guestMoveSpeed != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(guestMoveSpeed);
    }
    if (onlineRewardUp != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(onlineRewardUp);
    }
    guestCoinsUp_.WriteTo(output, _map_guestCoinsUp_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    shopBuff_.WriteTo(ref output, _map_shopBuff_codec);
    if (energyMax != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(energyMax);
    }
    if (guestMax != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(guestMax);
    }
    if (energySpeed != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(energySpeed);
    }
    if (taskTimeUp != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(taskTimeUp);
    }
    if (taskExpUp != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(taskExpUp);
    }
    if (boxSpeed != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(boxSpeed);
    }
    if (guestMoveSpeed != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(guestMoveSpeed);
    }
    if (onlineRewardUp != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(onlineRewardUp);
    }
    guestCoinsUp_.WriteTo(ref output, _map_guestCoinsUp_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += shopBuff_.CalculateSize(_map_shopBuff_codec);
    if (energyMax != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(energyMax);
    }
    if (guestMax != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(guestMax);
    }
    if (energySpeed != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(energySpeed);
    }
    if (taskTimeUp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(taskTimeUp);
    }
    if (taskExpUp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(taskExpUp);
    }
    if (boxSpeed != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(boxSpeed);
    }
    if (guestMoveSpeed != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(guestMoveSpeed);
    }
    if (onlineRewardUp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(onlineRewardUp);
    }
    size += guestCoinsUp_.CalculateSize(_map_guestCoinsUp_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoBuffValue other) {
    if (other == null) {
      return;
    }
    shopBuff_.Add(other.shopBuff_);
    if (other.energyMax != 0) {
      energyMax = other.energyMax;
    }
    if (other.guestMax != 0) {
      guestMax = other.guestMax;
    }
    if (other.energySpeed != 0) {
      energySpeed = other.energySpeed;
    }
    if (other.taskTimeUp != 0) {
      taskTimeUp = other.taskTimeUp;
    }
    if (other.taskExpUp != 0) {
      taskExpUp = other.taskExpUp;
    }
    if (other.boxSpeed != 0) {
      boxSpeed = other.boxSpeed;
    }
    if (other.guestMoveSpeed != 0) {
      guestMoveSpeed = other.guestMoveSpeed;
    }
    if (other.onlineRewardUp != 0) {
      onlineRewardUp = other.onlineRewardUp;
    }
    guestCoinsUp_.Add(other.guestCoinsUp_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          shopBuff_.AddEntriesFrom(input, _map_shopBuff_codec);
          break;
        }
        case 16: {
          energyMax = input.ReadInt32();
          break;
        }
        case 24: {
          guestMax = input.ReadInt32();
          break;
        }
        case 32: {
          energySpeed = input.ReadInt32();
          break;
        }
        case 40: {
          taskTimeUp = input.ReadInt32();
          break;
        }
        case 48: {
          taskExpUp = input.ReadInt32();
          break;
        }
        case 56: {
          boxSpeed = input.ReadInt32();
          break;
        }
        case 64: {
          guestMoveSpeed = input.ReadInt32();
          break;
        }
        case 72: {
          onlineRewardUp = input.ReadInt32();
          break;
        }
        case 82: {
          guestCoinsUp_.AddEntriesFrom(input, _map_guestCoinsUp_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          shopBuff_.AddEntriesFrom(ref input, _map_shopBuff_codec);
          break;
        }
        case 16: {
          energyMax = input.ReadInt32();
          break;
        }
        case 24: {
          guestMax = input.ReadInt32();
          break;
        }
        case 32: {
          energySpeed = input.ReadInt32();
          break;
        }
        case 40: {
          taskTimeUp = input.ReadInt32();
          break;
        }
        case 48: {
          taskExpUp = input.ReadInt32();
          break;
        }
        case 56: {
          boxSpeed = input.ReadInt32();
          break;
        }
        case 64: {
          guestMoveSpeed = input.ReadInt32();
          break;
        }
        case 72: {
          onlineRewardUp = input.ReadInt32();
          break;
        }
        case 82: {
          guestCoinsUp_.AddEntriesFrom(ref input, _map_guestCoinsUp_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoBuffSystem : pb::IMessage<InfoBuffSystem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoBuffSystem> _parser = new pb::MessageParser<InfoBuffSystem>(() => new InfoBuffSystem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoBuffSystem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[18]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoBuffSystem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoBuffSystem(InfoBuffSystem other) : this() {
    buff_map_ = other.buff_map_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoBuffSystem Clone() {
    return new InfoBuffSystem(this);
  }

  /// <summary>Field number for the "buff_map" field.</summary>
  public const int buff_mapFieldNumber = 1;
  private static readonly pbc::MapField<int, global::InfoBuffValue>.Codec _map_buff_map_codec
      = new pbc::MapField<int, global::InfoBuffValue>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::InfoBuffValue.Parser), 10);
  private readonly pbc::MapField<int, global::InfoBuffValue> buff_map_ = new pbc::MapField<int, global::InfoBuffValue>();
  /// <summary>
  /// buff种类(InfoBuff):buff数据(InfoBuffValue)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::InfoBuffValue> buff_map {
    get { return buff_map_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoBuffSystem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoBuffSystem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!buff_map.Equals(other.buff_map)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= buff_map.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    buff_map_.WriteTo(output, _map_buff_map_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    buff_map_.WriteTo(ref output, _map_buff_map_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += buff_map_.CalculateSize(_map_buff_map_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoBuffSystem other) {
    if (other == null) {
      return;
    }
    buff_map_.Add(other.buff_map_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          buff_map_.AddEntriesFrom(input, _map_buff_map_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          buff_map_.AddEntriesFrom(ref input, _map_buff_map_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoVersion : pb::IMessage<InfoVersion>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoVersion> _parser = new pb::MessageParser<InfoVersion>(() => new InfoVersion());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoVersion> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[19]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoVersion() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoVersion(InfoVersion other) : this() {
    version_ = other.version_;
    dataVersion_ = other.dataVersion_;
    lastSaveTime_ = other.lastSaveTime_;
    startGameTime_ = other.startGameTime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoVersion Clone() {
    return new InfoVersion(this);
  }

  /// <summary>Field number for the "version" field.</summary>
  public const int versionFieldNumber = 1;
  private string version_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string version {
    get { return version_; }
    set {
      version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "dataVersion" field.</summary>
  public const int dataVersionFieldNumber = 2;
  private int dataVersion_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int dataVersion {
    get { return dataVersion_; }
    set {
      dataVersion_ = value;
    }
  }

  /// <summary>Field number for the "lastSaveTime" field.</summary>
  public const int lastSaveTimeFieldNumber = 3;
  private long lastSaveTime_;
  /// <summary>
  /// 上一次存储时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long lastSaveTime {
    get { return lastSaveTime_; }
    set {
      lastSaveTime_ = value;
    }
  }

  /// <summary>Field number for the "startGameTime" field.</summary>
  public const int startGameTimeFieldNumber = 4;
  private long startGameTime_;
  /// <summary>
  /// 开始游戏时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long startGameTime {
    get { return startGameTime_; }
    set {
      startGameTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoVersion);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoVersion other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (version != other.version) return false;
    if (dataVersion != other.dataVersion) return false;
    if (lastSaveTime != other.lastSaveTime) return false;
    if (startGameTime != other.startGameTime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (version.Length != 0) hash ^= version.GetHashCode();
    if (dataVersion != 0) hash ^= dataVersion.GetHashCode();
    if (lastSaveTime != 0L) hash ^= lastSaveTime.GetHashCode();
    if (startGameTime != 0L) hash ^= startGameTime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (version.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(version);
    }
    if (dataVersion != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(dataVersion);
    }
    if (lastSaveTime != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(lastSaveTime);
    }
    if (startGameTime != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(startGameTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (version.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(version);
    }
    if (dataVersion != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(dataVersion);
    }
    if (lastSaveTime != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(lastSaveTime);
    }
    if (startGameTime != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(startGameTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (version.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(version);
    }
    if (dataVersion != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(dataVersion);
    }
    if (lastSaveTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(lastSaveTime);
    }
    if (startGameTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(startGameTime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoVersion other) {
    if (other == null) {
      return;
    }
    if (other.version.Length != 0) {
      version = other.version;
    }
    if (other.dataVersion != 0) {
      dataVersion = other.dataVersion;
    }
    if (other.lastSaveTime != 0L) {
      lastSaveTime = other.lastSaveTime;
    }
    if (other.startGameTime != 0L) {
      startGameTime = other.startGameTime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          version = input.ReadString();
          break;
        }
        case 16: {
          dataVersion = input.ReadInt32();
          break;
        }
        case 24: {
          lastSaveTime = input.ReadInt64();
          break;
        }
        case 32: {
          startGameTime = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          version = input.ReadString();
          break;
        }
        case 16: {
          dataVersion = input.ReadInt32();
          break;
        }
        case 24: {
          lastSaveTime = input.ReadInt64();
          break;
        }
        case 32: {
          startGameTime = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoRoleBox : pb::IMessage<InfoRoleBox>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoRoleBox> _parser = new pb::MessageParser<InfoRoleBox>(() => new InfoRoleBox());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoRoleBox> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[20]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoRoleBox() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoRoleBox(InfoRoleBox other) : this() {
    box_count_ = other.box_count_;
    box_unlocker_ = other.box_unlocker_;
    open_box_count_ = other.open_box_count_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoRoleBox Clone() {
    return new InfoRoleBox(this);
  }

  /// <summary>Field number for the "box_count" field.</summary>
  public const int box_countFieldNumber = 1;
  private int box_count_;
  /// <summary>
  /// 宝箱位数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int box_count {
    get { return box_count_; }
    set {
      box_count_ = value;
    }
  }

  /// <summary>Field number for the "box_unlocker" field.</summary>
  public const int box_unlockerFieldNumber = 2;
  private int box_unlocker_;
  /// <summary>
  /// 开锁匠数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int box_unlocker {
    get { return box_unlocker_; }
    set {
      box_unlocker_ = value;
    }
  }

  /// <summary>Field number for the "open_box_count" field.</summary>
  public const int open_box_countFieldNumber = 3;
  private long open_box_count_;
  /// <summary>
  /// 打开的宝箱数量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long open_box_count {
    get { return open_box_count_; }
    set {
      open_box_count_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoRoleBox);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoRoleBox other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (box_count != other.box_count) return false;
    if (box_unlocker != other.box_unlocker) return false;
    if (open_box_count != other.open_box_count) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (box_count != 0) hash ^= box_count.GetHashCode();
    if (box_unlocker != 0) hash ^= box_unlocker.GetHashCode();
    if (open_box_count != 0L) hash ^= open_box_count.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (box_count != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(box_count);
    }
    if (box_unlocker != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(box_unlocker);
    }
    if (open_box_count != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(open_box_count);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (box_count != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(box_count);
    }
    if (box_unlocker != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(box_unlocker);
    }
    if (open_box_count != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(open_box_count);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (box_count != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(box_count);
    }
    if (box_unlocker != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(box_unlocker);
    }
    if (open_box_count != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(open_box_count);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoRoleBox other) {
    if (other == null) {
      return;
    }
    if (other.box_count != 0) {
      box_count = other.box_count;
    }
    if (other.box_unlocker != 0) {
      box_unlocker = other.box_unlocker;
    }
    if (other.open_box_count != 0L) {
      open_box_count = other.open_box_count;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          box_count = input.ReadInt32();
          break;
        }
        case 16: {
          box_unlocker = input.ReadInt32();
          break;
        }
        case 24: {
          open_box_count = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          box_count = input.ReadInt32();
          break;
        }
        case 16: {
          box_unlocker = input.ReadInt32();
          break;
        }
        case 24: {
          open_box_count = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoTimeData : pb::IMessage<InfoTimeData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoTimeData> _parser = new pb::MessageParser<InfoTimeData>(() => new InfoTimeData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoTimeData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[21]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoTimeData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoTimeData(InfoTimeData other) : this() {
    id_ = other.id_;
    totalCount_ = other.totalCount_;
    remainCount_ = other.remainCount_;
    lastTime_ = other.lastTime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoTimeData Clone() {
    return new InfoTimeData(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int idFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "totalCount" field.</summary>
  public const int totalCountFieldNumber = 2;
  private int totalCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int totalCount {
    get { return totalCount_; }
    set {
      totalCount_ = value;
    }
  }

  /// <summary>Field number for the "remainCount" field.</summary>
  public const int remainCountFieldNumber = 3;
  private int remainCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int remainCount {
    get { return remainCount_; }
    set {
      remainCount_ = value;
    }
  }

  /// <summary>Field number for the "lastTime" field.</summary>
  public const int lastTimeFieldNumber = 4;
  private long lastTime_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long lastTime {
    get { return lastTime_; }
    set {
      lastTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoTimeData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoTimeData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (id != other.id) return false;
    if (totalCount != other.totalCount) return false;
    if (remainCount != other.remainCount) return false;
    if (lastTime != other.lastTime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (id != 0) hash ^= id.GetHashCode();
    if (totalCount != 0) hash ^= totalCount.GetHashCode();
    if (remainCount != 0) hash ^= remainCount.GetHashCode();
    if (lastTime != 0L) hash ^= lastTime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (totalCount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(totalCount);
    }
    if (remainCount != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(remainCount);
    }
    if (lastTime != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(lastTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (totalCount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(totalCount);
    }
    if (remainCount != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(remainCount);
    }
    if (lastTime != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(lastTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(id);
    }
    if (totalCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(totalCount);
    }
    if (remainCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(remainCount);
    }
    if (lastTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(lastTime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoTimeData other) {
    if (other == null) {
      return;
    }
    if (other.id != 0) {
      id = other.id;
    }
    if (other.totalCount != 0) {
      totalCount = other.totalCount;
    }
    if (other.remainCount != 0) {
      remainCount = other.remainCount;
    }
    if (other.lastTime != 0L) {
      lastTime = other.lastTime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          totalCount = input.ReadInt32();
          break;
        }
        case 24: {
          remainCount = input.ReadInt32();
          break;
        }
        case 32: {
          lastTime = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          totalCount = input.ReadInt32();
          break;
        }
        case 24: {
          remainCount = input.ReadInt32();
          break;
        }
        case 32: {
          lastTime = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoRole : pb::IMessage<InfoRole>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoRole> _parser = new pb::MessageParser<InfoRole>(() => new InfoRole());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoRole> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[22]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoRole() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoRole(InfoRole other) : this() {
    uid_ = other.uid_;
    info_level_ = other.info_level_ != null ? other.info_level_.Clone() : null;
    currency_ = other.currency_ != null ? other.currency_.Clone() : null;
    energy_ = other.energy_ != null ? other.energy_.Clone() : null;
    double_reward_ = other.double_reward_ != null ? other.double_reward_.Clone() : null;
    info_box_ = other.info_box_ != null ? other.info_box_.Clone() : null;
    last_guest_data_ = other.last_guest_data_ != null ? other.last_guest_data_.Clone() : null;
    guide_ = other.guide_ != null ? other.guide_.Clone() : null;
    boxes_ = other.boxes_.Clone();
    timesData_ = other.timesData_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoRole Clone() {
    return new InfoRole(this);
  }

  /// <summary>Field number for the "uid" field.</summary>
  public const int uidFieldNumber = 1;
  private int uid_;
  /// <summary>
  /// 用户ID
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int uid {
    get { return uid_; }
    set {
      uid_ = value;
    }
  }

  /// <summary>Field number for the "info_level" field.</summary>
  public const int info_levelFieldNumber = 2;
  private global::InfoLevel info_level_;
  /// <summary>
  /// 等级相关
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoLevel info_level {
    get { return info_level_; }
    set {
      info_level_ = value;
    }
  }

  /// <summary>Field number for the "currency" field.</summary>
  public const int currencyFieldNumber = 3;
  private global::InfoCurrency currency_;
  /// <summary>
  /// 货币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoCurrency currency {
    get { return currency_; }
    set {
      currency_ = value;
    }
  }

  /// <summary>Field number for the "energy" field.</summary>
  public const int energyFieldNumber = 4;
  private global::InfoEnergy energy_;
  /// <summary>
  /// 体力
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoEnergy energy {
    get { return energy_; }
    set {
      energy_ = value;
    }
  }

  /// <summary>Field number for the "double_reward" field.</summary>
  public const int double_rewardFieldNumber = 5;
  private global::InfoDoubleReward double_reward_;
  /// <summary>
  /// 双倍收益
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoDoubleReward double_reward {
    get { return double_reward_; }
    set {
      double_reward_ = value;
    }
  }

  /// <summary>Field number for the "info_box" field.</summary>
  public const int info_boxFieldNumber = 6;
  private global::InfoRoleBox info_box_;
  /// <summary>
  /// 宝箱相关属性
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoRoleBox info_box {
    get { return info_box_; }
    set {
      info_box_ = value;
    }
  }

  /// <summary>Field number for the "last_guest_data" field.</summary>
  public const int last_guest_dataFieldNumber = 7;
  private global::LastGuestData last_guest_data_;
  /// <summary>
  /// 上一波次顾客信息
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::LastGuestData last_guest_data {
    get { return last_guest_data_; }
    set {
      last_guest_data_ = value;
    }
  }

  /// <summary>Field number for the "guide" field.</summary>
  public const int guideFieldNumber = 8;
  private global::Guide guide_;
  /// <summary>
  /// 新手引导
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::Guide guide {
    get { return guide_; }
    set {
      guide_ = value;
    }
  }

  /// <summary>Field number for the "boxes" field.</summary>
  public const int boxesFieldNumber = 9;
  private static readonly pbc::MapField<int, global::InfoBox>.Codec _map_boxes_codec
      = new pbc::MapField<int, global::InfoBox>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::InfoBox.Parser), 74);
  private readonly pbc::MapField<int, global::InfoBox> boxes_ = new pbc::MapField<int, global::InfoBox>();
  /// <summary>
  /// 宝箱map 宝箱实例id:宝箱数据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::InfoBox> boxes {
    get { return boxes_; }
  }

  /// <summary>Field number for the "timesData" field.</summary>
  public const int timesDataFieldNumber = 10;
  private static readonly pbc::MapField<int, global::InfoTimeData>.Codec _map_timesData_codec
      = new pbc::MapField<int, global::InfoTimeData>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::InfoTimeData.Parser), 82);
  private readonly pbc::MapField<int, global::InfoTimeData> timesData_ = new pbc::MapField<int, global::InfoTimeData>();
  /// <summary>
  /// 每日次数数据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::InfoTimeData> timesData {
    get { return timesData_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoRole);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoRole other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (uid != other.uid) return false;
    if (!object.Equals(info_level, other.info_level)) return false;
    if (!object.Equals(currency, other.currency)) return false;
    if (!object.Equals(energy, other.energy)) return false;
    if (!object.Equals(double_reward, other.double_reward)) return false;
    if (!object.Equals(info_box, other.info_box)) return false;
    if (!object.Equals(last_guest_data, other.last_guest_data)) return false;
    if (!object.Equals(guide, other.guide)) return false;
    if (!boxes.Equals(other.boxes)) return false;
    if (!timesData.Equals(other.timesData)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (uid != 0) hash ^= uid.GetHashCode();
    if (info_level_ != null) hash ^= info_level.GetHashCode();
    if (currency_ != null) hash ^= currency.GetHashCode();
    if (energy_ != null) hash ^= energy.GetHashCode();
    if (double_reward_ != null) hash ^= double_reward.GetHashCode();
    if (info_box_ != null) hash ^= info_box.GetHashCode();
    if (last_guest_data_ != null) hash ^= last_guest_data.GetHashCode();
    if (guide_ != null) hash ^= guide.GetHashCode();
    hash ^= boxes.GetHashCode();
    hash ^= timesData.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(uid);
    }
    if (info_level_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(info_level);
    }
    if (currency_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(currency);
    }
    if (energy_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(energy);
    }
    if (double_reward_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(double_reward);
    }
    if (info_box_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(info_box);
    }
    if (last_guest_data_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(last_guest_data);
    }
    if (guide_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(guide);
    }
    boxes_.WriteTo(output, _map_boxes_codec);
    timesData_.WriteTo(output, _map_timesData_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(uid);
    }
    if (info_level_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(info_level);
    }
    if (currency_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(currency);
    }
    if (energy_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(energy);
    }
    if (double_reward_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(double_reward);
    }
    if (info_box_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(info_box);
    }
    if (last_guest_data_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(last_guest_data);
    }
    if (guide_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(guide);
    }
    boxes_.WriteTo(ref output, _map_boxes_codec);
    timesData_.WriteTo(ref output, _map_timesData_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (uid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(uid);
    }
    if (info_level_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(info_level);
    }
    if (currency_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(currency);
    }
    if (energy_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(energy);
    }
    if (double_reward_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(double_reward);
    }
    if (info_box_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(info_box);
    }
    if (last_guest_data_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(last_guest_data);
    }
    if (guide_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(guide);
    }
    size += boxes_.CalculateSize(_map_boxes_codec);
    size += timesData_.CalculateSize(_map_timesData_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoRole other) {
    if (other == null) {
      return;
    }
    if (other.uid != 0) {
      uid = other.uid;
    }
    if (other.info_level_ != null) {
      if (info_level_ == null) {
        info_level = new global::InfoLevel();
      }
      info_level.MergeFrom(other.info_level);
    }
    if (other.currency_ != null) {
      if (currency_ == null) {
        currency = new global::InfoCurrency();
      }
      currency.MergeFrom(other.currency);
    }
    if (other.energy_ != null) {
      if (energy_ == null) {
        energy = new global::InfoEnergy();
      }
      energy.MergeFrom(other.energy);
    }
    if (other.double_reward_ != null) {
      if (double_reward_ == null) {
        double_reward = new global::InfoDoubleReward();
      }
      double_reward.MergeFrom(other.double_reward);
    }
    if (other.info_box_ != null) {
      if (info_box_ == null) {
        info_box = new global::InfoRoleBox();
      }
      info_box.MergeFrom(other.info_box);
    }
    if (other.last_guest_data_ != null) {
      if (last_guest_data_ == null) {
        last_guest_data = new global::LastGuestData();
      }
      last_guest_data.MergeFrom(other.last_guest_data);
    }
    if (other.guide_ != null) {
      if (guide_ == null) {
        guide = new global::Guide();
      }
      guide.MergeFrom(other.guide);
    }
    boxes_.Add(other.boxes_);
    timesData_.Add(other.timesData_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          uid = input.ReadInt32();
          break;
        }
        case 18: {
          if (info_level_ == null) {
            info_level = new global::InfoLevel();
          }
          input.ReadMessage(info_level);
          break;
        }
        case 26: {
          if (currency_ == null) {
            currency = new global::InfoCurrency();
          }
          input.ReadMessage(currency);
          break;
        }
        case 34: {
          if (energy_ == null) {
            energy = new global::InfoEnergy();
          }
          input.ReadMessage(energy);
          break;
        }
        case 42: {
          if (double_reward_ == null) {
            double_reward = new global::InfoDoubleReward();
          }
          input.ReadMessage(double_reward);
          break;
        }
        case 50: {
          if (info_box_ == null) {
            info_box = new global::InfoRoleBox();
          }
          input.ReadMessage(info_box);
          break;
        }
        case 58: {
          if (last_guest_data_ == null) {
            last_guest_data = new global::LastGuestData();
          }
          input.ReadMessage(last_guest_data);
          break;
        }
        case 66: {
          if (guide_ == null) {
            guide = new global::Guide();
          }
          input.ReadMessage(guide);
          break;
        }
        case 74: {
          boxes_.AddEntriesFrom(input, _map_boxes_codec);
          break;
        }
        case 82: {
          timesData_.AddEntriesFrom(input, _map_timesData_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          uid = input.ReadInt32();
          break;
        }
        case 18: {
          if (info_level_ == null) {
            info_level = new global::InfoLevel();
          }
          input.ReadMessage(info_level);
          break;
        }
        case 26: {
          if (currency_ == null) {
            currency = new global::InfoCurrency();
          }
          input.ReadMessage(currency);
          break;
        }
        case 34: {
          if (energy_ == null) {
            energy = new global::InfoEnergy();
          }
          input.ReadMessage(energy);
          break;
        }
        case 42: {
          if (double_reward_ == null) {
            double_reward = new global::InfoDoubleReward();
          }
          input.ReadMessage(double_reward);
          break;
        }
        case 50: {
          if (info_box_ == null) {
            info_box = new global::InfoRoleBox();
          }
          input.ReadMessage(info_box);
          break;
        }
        case 58: {
          if (last_guest_data_ == null) {
            last_guest_data = new global::LastGuestData();
          }
          input.ReadMessage(last_guest_data);
          break;
        }
        case 66: {
          if (guide_ == null) {
            guide = new global::Guide();
          }
          input.ReadMessage(guide);
          break;
        }
        case 74: {
          boxes_.AddEntriesFrom(ref input, _map_boxes_codec);
          break;
        }
        case 82: {
          timesData_.AddEntriesFrom(ref input, _map_timesData_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class Guide : pb::IMessage<Guide>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<Guide> _parser = new pb::MessageParser<Guide>(() => new Guide());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<Guide> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[23]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Guide() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Guide(Guide other) : this() {
    value_ = other.value_;
    hasTriggerList_ = other.hasTriggerList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public Guide Clone() {
    return new Guide(this);
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int valueFieldNumber = 1;
  private int value_;
  /// <summary>
  /// 主线引导进度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int value {
    get { return value_; }
    set {
      value_ = value;
    }
  }

  /// <summary>Field number for the "hasTriggerList" field.</summary>
  public const int hasTriggerListFieldNumber = 2;
  private static readonly pb::FieldCodec<int> _repeated_hasTriggerList_codec
      = pb::FieldCodec.ForInt32(18);
  private readonly pbc::RepeatedField<int> hasTriggerList_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 已做过的触发式引导
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> hasTriggerList {
    get { return hasTriggerList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as Guide);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(Guide other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (value != other.value) return false;
    if(!hasTriggerList_.Equals(other.hasTriggerList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (value != 0) hash ^= value.GetHashCode();
    hash ^= hasTriggerList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (value != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(value);
    }
    hasTriggerList_.WriteTo(output, _repeated_hasTriggerList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (value != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(value);
    }
    hasTriggerList_.WriteTo(ref output, _repeated_hasTriggerList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (value != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(value);
    }
    size += hasTriggerList_.CalculateSize(_repeated_hasTriggerList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(Guide other) {
    if (other == null) {
      return;
    }
    if (other.value != 0) {
      value = other.value;
    }
    hasTriggerList_.Add(other.hasTriggerList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          value = input.ReadInt32();
          break;
        }
        case 18:
        case 16: {
          hasTriggerList_.AddEntriesFrom(input, _repeated_hasTriggerList_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          value = input.ReadInt32();
          break;
        }
        case 18:
        case 16: {
          hasTriggerList_.AddEntriesFrom(ref input, _repeated_hasTriggerList_codec);
          break;
        }
      }
    }
  }
  #endif

}

/// <summary>
/// 记录上一波次顾客信息
/// </summary>
public sealed partial class LastGuestData : pb::IMessage<LastGuestData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<LastGuestData> _parser = new pb::MessageParser<LastGuestData>(() => new LastGuestData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LastGuestData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[24]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LastGuestData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LastGuestData(LastGuestData other) : this() {
    batch_ = other.batch_;
    total_ = other.total_;
    cost_ = other.cost_;
    finish_ = other.finish_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LastGuestData Clone() {
    return new LastGuestData(this);
  }

  /// <summary>Field number for the "batch" field.</summary>
  public const int batchFieldNumber = 1;
  private long batch_;
  /// <summary>
  /// 顾客批次
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long batch {
    get { return batch_; }
    set {
      batch_ = value;
    }
  }

  /// <summary>Field number for the "total" field.</summary>
  public const int totalFieldNumber = 2;
  private long total_;
  /// <summary>
  /// 携带总金额
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long total {
    get { return total_; }
    set {
      total_ = value;
    }
  }

  /// <summary>Field number for the "cost" field.</summary>
  public const int costFieldNumber = 3;
  private long cost_;
  /// <summary>
  /// 花费总金额
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long cost {
    get { return cost_; }
    set {
      cost_ = value;
    }
  }

  /// <summary>Field number for the "finish" field.</summary>
  public const int finishFieldNumber = 4;
  private int finish_;
  /// <summary>
  /// 完成人数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int finish {
    get { return finish_; }
    set {
      finish_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LastGuestData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LastGuestData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (batch != other.batch) return false;
    if (total != other.total) return false;
    if (cost != other.cost) return false;
    if (finish != other.finish) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (batch != 0L) hash ^= batch.GetHashCode();
    if (total != 0L) hash ^= total.GetHashCode();
    if (cost != 0L) hash ^= cost.GetHashCode();
    if (finish != 0) hash ^= finish.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (batch != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(batch);
    }
    if (total != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(total);
    }
    if (cost != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(cost);
    }
    if (finish != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(finish);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (batch != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(batch);
    }
    if (total != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(total);
    }
    if (cost != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(cost);
    }
    if (finish != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(finish);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (batch != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(batch);
    }
    if (total != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(total);
    }
    if (cost != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(cost);
    }
    if (finish != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(finish);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LastGuestData other) {
    if (other == null) {
      return;
    }
    if (other.batch != 0L) {
      batch = other.batch;
    }
    if (other.total != 0L) {
      total = other.total;
    }
    if (other.cost != 0L) {
      cost = other.cost;
    }
    if (other.finish != 0) {
      finish = other.finish;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          batch = input.ReadInt64();
          break;
        }
        case 16: {
          total = input.ReadInt64();
          break;
        }
        case 24: {
          cost = input.ReadInt64();
          break;
        }
        case 32: {
          finish = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          batch = input.ReadInt64();
          break;
        }
        case 16: {
          total = input.ReadInt64();
          break;
        }
        case 24: {
          cost = input.ReadInt64();
          break;
        }
        case 32: {
          finish = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoLevel : pb::IMessage<InfoLevel>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoLevel> _parser = new pb::MessageParser<InfoLevel>(() => new InfoLevel());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoLevel> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[25]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoLevel() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoLevel(InfoLevel other) : this() {
    level_ = other.level_;
    exp_ = other.exp_;
    cur_exp_ = other.cur_exp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoLevel Clone() {
    return new InfoLevel(this);
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int levelFieldNumber = 1;
  private int level_;
  /// <summary>
  /// 等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "exp" field.</summary>
  public const int expFieldNumber = 2;
  private long exp_;
  /// <summary>
  /// 经验
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long exp {
    get { return exp_; }
    set {
      exp_ = value;
    }
  }

  /// <summary>Field number for the "cur_exp" field.</summary>
  public const int cur_expFieldNumber = 3;
  private long cur_exp_;
  /// <summary>
  /// 当前等级已获得经验
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long cur_exp {
    get { return cur_exp_; }
    set {
      cur_exp_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoLevel);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoLevel other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (level != other.level) return false;
    if (exp != other.exp) return false;
    if (cur_exp != other.cur_exp) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (level != 0) hash ^= level.GetHashCode();
    if (exp != 0L) hash ^= exp.GetHashCode();
    if (cur_exp != 0L) hash ^= cur_exp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (level != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(level);
    }
    if (exp != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(exp);
    }
    if (cur_exp != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(cur_exp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (level != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(level);
    }
    if (exp != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(exp);
    }
    if (cur_exp != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(cur_exp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(level);
    }
    if (exp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(exp);
    }
    if (cur_exp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(cur_exp);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoLevel other) {
    if (other == null) {
      return;
    }
    if (other.level != 0) {
      level = other.level;
    }
    if (other.exp != 0L) {
      exp = other.exp;
    }
    if (other.cur_exp != 0L) {
      cur_exp = other.cur_exp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          level = input.ReadInt32();
          break;
        }
        case 16: {
          exp = input.ReadInt64();
          break;
        }
        case 24: {
          cur_exp = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          level = input.ReadInt32();
          break;
        }
        case 16: {
          exp = input.ReadInt64();
          break;
        }
        case 24: {
          cur_exp = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoDoubleReward : pb::IMessage<InfoDoubleReward>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoDoubleReward> _parser = new pb::MessageParser<InfoDoubleReward>(() => new InfoDoubleReward());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoDoubleReward> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[26]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoDoubleReward() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoDoubleReward(InfoDoubleReward other) : this() {
    dobule_reward_ts_ = other.dobule_reward_ts_;
    dobule_reward_rt_ = other.dobule_reward_rt_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoDoubleReward Clone() {
    return new InfoDoubleReward(this);
  }

  /// <summary>Field number for the "dobule_reward_ts" field.</summary>
  public const int dobule_reward_tsFieldNumber = 1;
  private long dobule_reward_ts_;
  /// <summary>
  /// 双倍收益开始时间戳(TimeStamp)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long dobule_reward_ts {
    get { return dobule_reward_ts_; }
    set {
      dobule_reward_ts_ = value;
    }
  }

  /// <summary>Field number for the "dobule_reward_rt" field.</summary>
  public const int dobule_reward_rtFieldNumber = 2;
  private long dobule_reward_rt_;
  /// <summary>
  /// 双倍收益剩余时间(RemainTime)
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long dobule_reward_rt {
    get { return dobule_reward_rt_; }
    set {
      dobule_reward_rt_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoDoubleReward);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoDoubleReward other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (dobule_reward_ts != other.dobule_reward_ts) return false;
    if (dobule_reward_rt != other.dobule_reward_rt) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (dobule_reward_ts != 0L) hash ^= dobule_reward_ts.GetHashCode();
    if (dobule_reward_rt != 0L) hash ^= dobule_reward_rt.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (dobule_reward_ts != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(dobule_reward_ts);
    }
    if (dobule_reward_rt != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(dobule_reward_rt);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (dobule_reward_ts != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(dobule_reward_ts);
    }
    if (dobule_reward_rt != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(dobule_reward_rt);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (dobule_reward_ts != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(dobule_reward_ts);
    }
    if (dobule_reward_rt != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(dobule_reward_rt);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoDoubleReward other) {
    if (other == null) {
      return;
    }
    if (other.dobule_reward_ts != 0L) {
      dobule_reward_ts = other.dobule_reward_ts;
    }
    if (other.dobule_reward_rt != 0L) {
      dobule_reward_rt = other.dobule_reward_rt;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          dobule_reward_ts = input.ReadInt64();
          break;
        }
        case 16: {
          dobule_reward_rt = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          dobule_reward_ts = input.ReadInt64();
          break;
        }
        case 16: {
          dobule_reward_rt = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoCurrency : pb::IMessage<InfoCurrency>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoCurrency> _parser = new pb::MessageParser<InfoCurrency>(() => new InfoCurrency());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoCurrency> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[27]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoCurrency() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoCurrency(InfoCurrency other) : this() {
    coins_ = other.coins_;
    diamonds_ = other.diamonds_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoCurrency Clone() {
    return new InfoCurrency(this);
  }

  /// <summary>Field number for the "coins" field.</summary>
  public const int coinsFieldNumber = 1;
  private int coins_;
  /// <summary>
  /// 金币
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int coins {
    get { return coins_; }
    set {
      coins_ = value;
    }
  }

  /// <summary>Field number for the "diamonds" field.</summary>
  public const int diamondsFieldNumber = 2;
  private int diamonds_;
  /// <summary>
  /// 钻石
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int diamonds {
    get { return diamonds_; }
    set {
      diamonds_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoCurrency);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoCurrency other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (coins != other.coins) return false;
    if (diamonds != other.diamonds) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (coins != 0) hash ^= coins.GetHashCode();
    if (diamonds != 0) hash ^= diamonds.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (coins != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(coins);
    }
    if (diamonds != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(diamonds);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (coins != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(coins);
    }
    if (diamonds != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(diamonds);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (coins != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(coins);
    }
    if (diamonds != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(diamonds);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoCurrency other) {
    if (other == null) {
      return;
    }
    if (other.coins != 0) {
      coins = other.coins;
    }
    if (other.diamonds != 0) {
      diamonds = other.diamonds;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          coins = input.ReadInt32();
          break;
        }
        case 16: {
          diamonds = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          coins = input.ReadInt32();
          break;
        }
        case 16: {
          diamonds = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoEnergy : pb::IMessage<InfoEnergy>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoEnergy> _parser = new pb::MessageParser<InfoEnergy>(() => new InfoEnergy());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoEnergy> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[28]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoEnergy() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoEnergy(InfoEnergy other) : this() {
    energy_ = other.energy_;
    energyTimeStamp_ = other.energyTimeStamp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoEnergy Clone() {
    return new InfoEnergy(this);
  }

  /// <summary>Field number for the "energy" field.</summary>
  public const int energyFieldNumber = 1;
  private int energy_;
  /// <summary>
  /// 体力
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int energy {
    get { return energy_; }
    set {
      energy_ = value;
    }
  }

  /// <summary>Field number for the "energyTimeStamp" field.</summary>
  public const int energyTimeStampFieldNumber = 2;
  private long energyTimeStamp_;
  /// <summary>
  /// 开始恢复体力的时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long energyTimeStamp {
    get { return energyTimeStamp_; }
    set {
      energyTimeStamp_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoEnergy);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoEnergy other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (energy != other.energy) return false;
    if (energyTimeStamp != other.energyTimeStamp) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (energy != 0) hash ^= energy.GetHashCode();
    if (energyTimeStamp != 0L) hash ^= energyTimeStamp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (energy != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(energy);
    }
    if (energyTimeStamp != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(energyTimeStamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (energy != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(energy);
    }
    if (energyTimeStamp != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(energyTimeStamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (energy != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(energy);
    }
    if (energyTimeStamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(energyTimeStamp);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoEnergy other) {
    if (other == null) {
      return;
    }
    if (other.energy != 0) {
      energy = other.energy;
    }
    if (other.energyTimeStamp != 0L) {
      energyTimeStamp = other.energyTimeStamp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          energy = input.ReadInt32();
          break;
        }
        case 16: {
          energyTimeStamp = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          energy = input.ReadInt32();
          break;
        }
        case 16: {
          energyTimeStamp = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoShopSystem : pb::IMessage<InfoShopSystem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoShopSystem> _parser = new pb::MessageParser<InfoShopSystem>(() => new InfoShopSystem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoShopSystem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[29]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShopSystem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShopSystem(InfoShopSystem other) : this() {
    info_shop_map_ = other.info_shop_map_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShopSystem Clone() {
    return new InfoShopSystem(this);
  }

  /// <summary>Field number for the "info_shop_map" field.</summary>
  public const int info_shop_mapFieldNumber = 1;
  private static readonly pbc::MapField<int, global::InfoShop>.Codec _map_info_shop_map_codec
      = new pbc::MapField<int, global::InfoShop>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::InfoShop.Parser), 10);
  private readonly pbc::MapField<int, global::InfoShop> info_shop_map_ = new pbc::MapField<int, global::InfoShop>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::InfoShop> info_shop_map {
    get { return info_shop_map_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoShopSystem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoShopSystem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!info_shop_map.Equals(other.info_shop_map)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= info_shop_map.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    info_shop_map_.WriteTo(output, _map_info_shop_map_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    info_shop_map_.WriteTo(ref output, _map_info_shop_map_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += info_shop_map_.CalculateSize(_map_info_shop_map_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoShopSystem other) {
    if (other == null) {
      return;
    }
    info_shop_map_.Add(other.info_shop_map_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          info_shop_map_.AddEntriesFrom(input, _map_info_shop_map_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          info_shop_map_.AddEntriesFrom(ref input, _map_info_shop_map_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class RepairInfo : pb::IMessage<RepairInfo>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<RepairInfo> _parser = new pb::MessageParser<RepairInfo>(() => new RepairInfo());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RepairInfo> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[30]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RepairInfo() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RepairInfo(RepairInfo other) : this() {
    status_ = other.status_;
    repairTms_ = other.repairTms_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RepairInfo Clone() {
    return new RepairInfo(this);
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int statusFieldNumber = 1;
  private int status_;
  /// <summary>
  ///维修状态 0：完好，1：维修中 2：破坏中
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "repairTms" field.</summary>
  public const int repairTmsFieldNumber = 2;
  private long repairTms_;
  /// <summary>
  ///开始维修的时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long repairTms {
    get { return repairTms_; }
    set {
      repairTms_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RepairInfo);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RepairInfo other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (status != other.status) return false;
    if (repairTms != other.repairTms) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (status != 0) hash ^= status.GetHashCode();
    if (repairTms != 0L) hash ^= repairTms.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (status != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(status);
    }
    if (repairTms != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(repairTms);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (status != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(status);
    }
    if (repairTms != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(repairTms);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(status);
    }
    if (repairTms != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(repairTms);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RepairInfo other) {
    if (other == null) {
      return;
    }
    if (other.status != 0) {
      status = other.status;
    }
    if (other.repairTms != 0L) {
      repairTms = other.repairTms;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          status = input.ReadInt32();
          break;
        }
        case 16: {
          repairTms = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          status = input.ReadInt32();
          break;
        }
        case 16: {
          repairTms = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoShop : pb::IMessage<InfoShop>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoShop> _parser = new pb::MessageParser<InfoShop>(() => new InfoShop());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoShop> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[31]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShop() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShop(InfoShop other) : this() {
    uid_ = other.uid_;
    exp_ = other.exp_;
    level_ = other.level_;
    guestSpace_ = other.guestSpace_;
    clerkSpace_ = other.clerkSpace_;
    storeSpace_ = other.storeSpace_;
    guests_ = other.guests_.Clone();
    clerks_ = other.clerks_.Clone();
    goods_ = other.goods_.Clone();
    activeSkillIndex_ = other.activeSkillIndex_.Clone();
    activeSkillId_ = other.activeSkillId_.Clone();
    status_ = other.status_;
    guestSlot_ = other.guestSlot_;
    sale_goods_count_ = other.sale_goods_count_;
    buffs_ = other.buffs_.Clone();
    repairInfo_ = other.repairInfo_ != null ? other.repairInfo_.Clone() : null;
    decorateBuffId_ = other.decorateBuffId_;
    isNeedDecoration_ = other.isNeedDecoration_;
    buildStartTime_ = other.buildStartTime_;
    medalId_ = other.medalId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShop Clone() {
    return new InfoShop(this);
  }

  /// <summary>Field number for the "uid" field.</summary>
  public const int uidFieldNumber = 1;
  private int uid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int uid {
    get { return uid_; }
    set {
      uid_ = value;
    }
  }

  /// <summary>Field number for the "exp" field.</summary>
  public const int expFieldNumber = 2;
  private int exp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int exp {
    get { return exp_; }
    set {
      exp_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int levelFieldNumber = 3;
  private int level_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "guestSpace" field.</summary>
  public const int guestSpaceFieldNumber = 4;
  private int guestSpace_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int guestSpace {
    get { return guestSpace_; }
    set {
      guestSpace_ = value;
    }
  }

  /// <summary>Field number for the "clerkSpace" field.</summary>
  public const int clerkSpaceFieldNumber = 5;
  private int clerkSpace_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int clerkSpace {
    get { return clerkSpace_; }
    set {
      clerkSpace_ = value;
    }
  }

  /// <summary>Field number for the "storeSpace" field.</summary>
  public const int storeSpaceFieldNumber = 6;
  private int storeSpace_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int storeSpace {
    get { return storeSpace_; }
    set {
      storeSpace_ = value;
    }
  }

  /// <summary>Field number for the "guests" field.</summary>
  public const int guestsFieldNumber = 7;
  private static readonly pb::FieldCodec<global::InfoGuest> _repeated_guests_codec
      = pb::FieldCodec.ForMessage(58, global::InfoGuest.Parser);
  private readonly pbc::RepeatedField<global::InfoGuest> guests_ = new pbc::RepeatedField<global::InfoGuest>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::InfoGuest> guests {
    get { return guests_; }
  }

  /// <summary>Field number for the "clerks" field.</summary>
  public const int clerksFieldNumber = 8;
  private static readonly pbc::MapField<int, int>.Codec _map_clerks_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 66);
  private readonly pbc::MapField<int, int> clerks_ = new pbc::MapField<int, int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> clerks {
    get { return clerks_; }
  }

  /// <summary>Field number for the "goods" field.</summary>
  public const int goodsFieldNumber = 9;
  private static readonly pb::FieldCodec<global::InfoGood> _repeated_goods_codec
      = pb::FieldCodec.ForMessage(74, global::InfoGood.Parser);
  private readonly pbc::RepeatedField<global::InfoGood> goods_ = new pbc::RepeatedField<global::InfoGood>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::InfoGood> goods {
    get { return goods_; }
  }

  /// <summary>Field number for the "activeSkillIndex" field.</summary>
  public const int activeSkillIndexFieldNumber = 10;
  private static readonly pb::FieldCodec<int> _repeated_activeSkillIndex_codec
      = pb::FieldCodec.ForInt32(82);
  private readonly pbc::RepeatedField<int> activeSkillIndex_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 激活的技能索引
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> activeSkillIndex {
    get { return activeSkillIndex_; }
  }

  /// <summary>Field number for the "activeSkillId" field.</summary>
  public const int activeSkillIdFieldNumber = 11;
  private static readonly pbc::MapField<int, int>.Codec _map_activeSkillId_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 90);
  private readonly pbc::MapField<int, int> activeSkillId_ = new pbc::MapField<int, int>();
  /// <summary>
  /// 激活的技能
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> activeSkillId {
    get { return activeSkillId_; }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int statusFieldNumber = 12;
  private global::InfoShopStatus status_ = global::InfoShopStatus.Lock;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoShopStatus status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "guestSlot" field.</summary>
  public const int guestSlotFieldNumber = 13;
  private int guestSlot_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int guestSlot {
    get { return guestSlot_; }
    set {
      guestSlot_ = value;
    }
  }

  /// <summary>Field number for the "sale_goods_count" field.</summary>
  public const int sale_goods_countFieldNumber = 14;
  private int sale_goods_count_;
  /// <summary>
  /// 卖出商品数量，商店主动技能CD用
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int sale_goods_count {
    get { return sale_goods_count_; }
    set {
      sale_goods_count_ = value;
    }
  }

  /// <summary>Field number for the "buffs" field.</summary>
  public const int buffsFieldNumber = 15;
  private static readonly pb::FieldCodec<global::InfoShopIndependentBuff> _repeated_buffs_codec
      = pb::FieldCodec.ForMessage(122, global::InfoShopIndependentBuff.Parser);
  private readonly pbc::RepeatedField<global::InfoShopIndependentBuff> buffs_ = new pbc::RepeatedField<global::InfoShopIndependentBuff>();
  /// <summary>
  /// 独立的店铺buff
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::InfoShopIndependentBuff> buffs {
    get { return buffs_; }
  }

  /// <summary>Field number for the "repairInfo" field.</summary>
  public const int repairInfoFieldNumber = 16;
  private global::RepairInfo repairInfo_;
  /// <summary>
  /// 店铺维修状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::RepairInfo repairInfo {
    get { return repairInfo_; }
    set {
      repairInfo_ = value;
    }
  }

  /// <summary>Field number for the "decorateBuffId" field.</summary>
  public const int decorateBuffIdFieldNumber = 17;
  private int decorateBuffId_;
  /// <summary>
  /// 店铺等级buff
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int decorateBuffId {
    get { return decorateBuffId_; }
    set {
      decorateBuffId_ = value;
    }
  }

  /// <summary>Field number for the "isNeedDecoration" field.</summary>
  public const int isNeedDecorationFieldNumber = 18;
  private int isNeedDecoration_;
  /// <summary>
  /// 店铺是否需要强制装修
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int isNeedDecoration {
    get { return isNeedDecoration_; }
    set {
      isNeedDecoration_ = value;
    }
  }

  /// <summary>Field number for the "buildStartTime" field.</summary>
  public const int buildStartTimeFieldNumber = 19;
  private long buildStartTime_;
  /// <summary>
  /// 建造开始时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long buildStartTime {
    get { return buildStartTime_; }
    set {
      buildStartTime_ = value;
    }
  }

  /// <summary>Field number for the "medalId" field.</summary>
  public const int medalIdFieldNumber = 20;
  private int medalId_;
  /// <summary>
  /// 店铺获得的勋章id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int medalId {
    get { return medalId_; }
    set {
      medalId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoShop);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoShop other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (uid != other.uid) return false;
    if (exp != other.exp) return false;
    if (level != other.level) return false;
    if (guestSpace != other.guestSpace) return false;
    if (clerkSpace != other.clerkSpace) return false;
    if (storeSpace != other.storeSpace) return false;
    if(!guests_.Equals(other.guests_)) return false;
    if (!clerks.Equals(other.clerks)) return false;
    if(!goods_.Equals(other.goods_)) return false;
    if(!activeSkillIndex_.Equals(other.activeSkillIndex_)) return false;
    if (!activeSkillId.Equals(other.activeSkillId)) return false;
    if (status != other.status) return false;
    if (guestSlot != other.guestSlot) return false;
    if (sale_goods_count != other.sale_goods_count) return false;
    if(!buffs_.Equals(other.buffs_)) return false;
    if (!object.Equals(repairInfo, other.repairInfo)) return false;
    if (decorateBuffId != other.decorateBuffId) return false;
    if (isNeedDecoration != other.isNeedDecoration) return false;
    if (buildStartTime != other.buildStartTime) return false;
    if (medalId != other.medalId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (uid != 0) hash ^= uid.GetHashCode();
    if (exp != 0) hash ^= exp.GetHashCode();
    if (level != 0) hash ^= level.GetHashCode();
    if (guestSpace != 0) hash ^= guestSpace.GetHashCode();
    if (clerkSpace != 0) hash ^= clerkSpace.GetHashCode();
    if (storeSpace != 0) hash ^= storeSpace.GetHashCode();
    hash ^= guests_.GetHashCode();
    hash ^= clerks.GetHashCode();
    hash ^= goods_.GetHashCode();
    hash ^= activeSkillIndex_.GetHashCode();
    hash ^= activeSkillId.GetHashCode();
    if (status != global::InfoShopStatus.Lock) hash ^= status.GetHashCode();
    if (guestSlot != 0) hash ^= guestSlot.GetHashCode();
    if (sale_goods_count != 0) hash ^= sale_goods_count.GetHashCode();
    hash ^= buffs_.GetHashCode();
    if (repairInfo_ != null) hash ^= repairInfo.GetHashCode();
    if (decorateBuffId != 0) hash ^= decorateBuffId.GetHashCode();
    if (isNeedDecoration != 0) hash ^= isNeedDecoration.GetHashCode();
    if (buildStartTime != 0L) hash ^= buildStartTime.GetHashCode();
    if (medalId != 0) hash ^= medalId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(uid);
    }
    if (exp != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(exp);
    }
    if (level != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(level);
    }
    if (guestSpace != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(guestSpace);
    }
    if (clerkSpace != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(clerkSpace);
    }
    if (storeSpace != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(storeSpace);
    }
    guests_.WriteTo(output, _repeated_guests_codec);
    clerks_.WriteTo(output, _map_clerks_codec);
    goods_.WriteTo(output, _repeated_goods_codec);
    activeSkillIndex_.WriteTo(output, _repeated_activeSkillIndex_codec);
    activeSkillId_.WriteTo(output, _map_activeSkillId_codec);
    if (status != global::InfoShopStatus.Lock) {
      output.WriteRawTag(96);
      output.WriteEnum((int) status);
    }
    if (guestSlot != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(guestSlot);
    }
    if (sale_goods_count != 0) {
      output.WriteRawTag(112);
      output.WriteInt32(sale_goods_count);
    }
    buffs_.WriteTo(output, _repeated_buffs_codec);
    if (repairInfo_ != null) {
      output.WriteRawTag(130, 1);
      output.WriteMessage(repairInfo);
    }
    if (decorateBuffId != 0) {
      output.WriteRawTag(136, 1);
      output.WriteInt32(decorateBuffId);
    }
    if (isNeedDecoration != 0) {
      output.WriteRawTag(144, 1);
      output.WriteInt32(isNeedDecoration);
    }
    if (buildStartTime != 0L) {
      output.WriteRawTag(152, 1);
      output.WriteInt64(buildStartTime);
    }
    if (medalId != 0) {
      output.WriteRawTag(160, 1);
      output.WriteInt32(medalId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(uid);
    }
    if (exp != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(exp);
    }
    if (level != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(level);
    }
    if (guestSpace != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(guestSpace);
    }
    if (clerkSpace != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(clerkSpace);
    }
    if (storeSpace != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(storeSpace);
    }
    guests_.WriteTo(ref output, _repeated_guests_codec);
    clerks_.WriteTo(ref output, _map_clerks_codec);
    goods_.WriteTo(ref output, _repeated_goods_codec);
    activeSkillIndex_.WriteTo(ref output, _repeated_activeSkillIndex_codec);
    activeSkillId_.WriteTo(ref output, _map_activeSkillId_codec);
    if (status != global::InfoShopStatus.Lock) {
      output.WriteRawTag(96);
      output.WriteEnum((int) status);
    }
    if (guestSlot != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(guestSlot);
    }
    if (sale_goods_count != 0) {
      output.WriteRawTag(112);
      output.WriteInt32(sale_goods_count);
    }
    buffs_.WriteTo(ref output, _repeated_buffs_codec);
    if (repairInfo_ != null) {
      output.WriteRawTag(130, 1);
      output.WriteMessage(repairInfo);
    }
    if (decorateBuffId != 0) {
      output.WriteRawTag(136, 1);
      output.WriteInt32(decorateBuffId);
    }
    if (isNeedDecoration != 0) {
      output.WriteRawTag(144, 1);
      output.WriteInt32(isNeedDecoration);
    }
    if (buildStartTime != 0L) {
      output.WriteRawTag(152, 1);
      output.WriteInt64(buildStartTime);
    }
    if (medalId != 0) {
      output.WriteRawTag(160, 1);
      output.WriteInt32(medalId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (uid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(uid);
    }
    if (exp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(exp);
    }
    if (level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(level);
    }
    if (guestSpace != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(guestSpace);
    }
    if (clerkSpace != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(clerkSpace);
    }
    if (storeSpace != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(storeSpace);
    }
    size += guests_.CalculateSize(_repeated_guests_codec);
    size += clerks_.CalculateSize(_map_clerks_codec);
    size += goods_.CalculateSize(_repeated_goods_codec);
    size += activeSkillIndex_.CalculateSize(_repeated_activeSkillIndex_codec);
    size += activeSkillId_.CalculateSize(_map_activeSkillId_codec);
    if (status != global::InfoShopStatus.Lock) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) status);
    }
    if (guestSlot != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(guestSlot);
    }
    if (sale_goods_count != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(sale_goods_count);
    }
    size += buffs_.CalculateSize(_repeated_buffs_codec);
    if (repairInfo_ != null) {
      size += 2 + pb::CodedOutputStream.ComputeMessageSize(repairInfo);
    }
    if (decorateBuffId != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(decorateBuffId);
    }
    if (isNeedDecoration != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(isNeedDecoration);
    }
    if (buildStartTime != 0L) {
      size += 2 + pb::CodedOutputStream.ComputeInt64Size(buildStartTime);
    }
    if (medalId != 0) {
      size += 2 + pb::CodedOutputStream.ComputeInt32Size(medalId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoShop other) {
    if (other == null) {
      return;
    }
    if (other.uid != 0) {
      uid = other.uid;
    }
    if (other.exp != 0) {
      exp = other.exp;
    }
    if (other.level != 0) {
      level = other.level;
    }
    if (other.guestSpace != 0) {
      guestSpace = other.guestSpace;
    }
    if (other.clerkSpace != 0) {
      clerkSpace = other.clerkSpace;
    }
    if (other.storeSpace != 0) {
      storeSpace = other.storeSpace;
    }
    guests_.Add(other.guests_);
    clerks_.Add(other.clerks_);
    goods_.Add(other.goods_);
    activeSkillIndex_.Add(other.activeSkillIndex_);
    activeSkillId_.Add(other.activeSkillId_);
    if (other.status != global::InfoShopStatus.Lock) {
      status = other.status;
    }
    if (other.guestSlot != 0) {
      guestSlot = other.guestSlot;
    }
    if (other.sale_goods_count != 0) {
      sale_goods_count = other.sale_goods_count;
    }
    buffs_.Add(other.buffs_);
    if (other.repairInfo_ != null) {
      if (repairInfo_ == null) {
        repairInfo = new global::RepairInfo();
      }
      repairInfo.MergeFrom(other.repairInfo);
    }
    if (other.decorateBuffId != 0) {
      decorateBuffId = other.decorateBuffId;
    }
    if (other.isNeedDecoration != 0) {
      isNeedDecoration = other.isNeedDecoration;
    }
    if (other.buildStartTime != 0L) {
      buildStartTime = other.buildStartTime;
    }
    if (other.medalId != 0) {
      medalId = other.medalId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          uid = input.ReadInt32();
          break;
        }
        case 16: {
          exp = input.ReadInt32();
          break;
        }
        case 24: {
          level = input.ReadInt32();
          break;
        }
        case 32: {
          guestSpace = input.ReadInt32();
          break;
        }
        case 40: {
          clerkSpace = input.ReadInt32();
          break;
        }
        case 48: {
          storeSpace = input.ReadInt32();
          break;
        }
        case 58: {
          guests_.AddEntriesFrom(input, _repeated_guests_codec);
          break;
        }
        case 66: {
          clerks_.AddEntriesFrom(input, _map_clerks_codec);
          break;
        }
        case 74: {
          goods_.AddEntriesFrom(input, _repeated_goods_codec);
          break;
        }
        case 82:
        case 80: {
          activeSkillIndex_.AddEntriesFrom(input, _repeated_activeSkillIndex_codec);
          break;
        }
        case 90: {
          activeSkillId_.AddEntriesFrom(input, _map_activeSkillId_codec);
          break;
        }
        case 96: {
          status = (global::InfoShopStatus) input.ReadEnum();
          break;
        }
        case 104: {
          guestSlot = input.ReadInt32();
          break;
        }
        case 112: {
          sale_goods_count = input.ReadInt32();
          break;
        }
        case 122: {
          buffs_.AddEntriesFrom(input, _repeated_buffs_codec);
          break;
        }
        case 130: {
          if (repairInfo_ == null) {
            repairInfo = new global::RepairInfo();
          }
          input.ReadMessage(repairInfo);
          break;
        }
        case 136: {
          decorateBuffId = input.ReadInt32();
          break;
        }
        case 144: {
          isNeedDecoration = input.ReadInt32();
          break;
        }
        case 152: {
          buildStartTime = input.ReadInt64();
          break;
        }
        case 160: {
          medalId = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          uid = input.ReadInt32();
          break;
        }
        case 16: {
          exp = input.ReadInt32();
          break;
        }
        case 24: {
          level = input.ReadInt32();
          break;
        }
        case 32: {
          guestSpace = input.ReadInt32();
          break;
        }
        case 40: {
          clerkSpace = input.ReadInt32();
          break;
        }
        case 48: {
          storeSpace = input.ReadInt32();
          break;
        }
        case 58: {
          guests_.AddEntriesFrom(ref input, _repeated_guests_codec);
          break;
        }
        case 66: {
          clerks_.AddEntriesFrom(ref input, _map_clerks_codec);
          break;
        }
        case 74: {
          goods_.AddEntriesFrom(ref input, _repeated_goods_codec);
          break;
        }
        case 82:
        case 80: {
          activeSkillIndex_.AddEntriesFrom(ref input, _repeated_activeSkillIndex_codec);
          break;
        }
        case 90: {
          activeSkillId_.AddEntriesFrom(ref input, _map_activeSkillId_codec);
          break;
        }
        case 96: {
          status = (global::InfoShopStatus) input.ReadEnum();
          break;
        }
        case 104: {
          guestSlot = input.ReadInt32();
          break;
        }
        case 112: {
          sale_goods_count = input.ReadInt32();
          break;
        }
        case 122: {
          buffs_.AddEntriesFrom(ref input, _repeated_buffs_codec);
          break;
        }
        case 130: {
          if (repairInfo_ == null) {
            repairInfo = new global::RepairInfo();
          }
          input.ReadMessage(repairInfo);
          break;
        }
        case 136: {
          decorateBuffId = input.ReadInt32();
          break;
        }
        case 144: {
          isNeedDecoration = input.ReadInt32();
          break;
        }
        case 152: {
          buildStartTime = input.ReadInt64();
          break;
        }
        case 160: {
          medalId = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoShopIndependentBuff : pb::IMessage<InfoShopIndependentBuff>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoShopIndependentBuff> _parser = new pb::MessageParser<InfoShopIndependentBuff>(() => new InfoShopIndependentBuff());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoShopIndependentBuff> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[32]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShopIndependentBuff() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShopIndependentBuff(InfoShopIndependentBuff other) : this() {
    buffId_ = other.buffId_;
    offSetValue_ = other.offSetValue_;
    limit_ = other.limit_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoShopIndependentBuff Clone() {
    return new InfoShopIndependentBuff(this);
  }

  /// <summary>Field number for the "buffId" field.</summary>
  public const int buffIdFieldNumber = 1;
  private int buffId_;
  /// <summary>
  ///id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int buffId {
    get { return buffId_; }
    set {
      buffId_ = value;
    }
  }

  /// <summary>Field number for the "offSetValue" field.</summary>
  public const int offSetValueFieldNumber = 2;
  private int offSetValue_;
  /// <summary>
  ///浮动value 在读取ResAchBuff之后的浮动值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int offSetValue {
    get { return offSetValue_; }
    set {
      offSetValue_ = value;
    }
  }

  /// <summary>Field number for the "limit" field.</summary>
  public const int limitFieldNumber = 3;
  private string limit_ = "";
  /// <summary>
  ///其他限制条件
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string limit {
    get { return limit_; }
    set {
      limit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoShopIndependentBuff);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoShopIndependentBuff other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (buffId != other.buffId) return false;
    if (offSetValue != other.offSetValue) return false;
    if (limit != other.limit) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (buffId != 0) hash ^= buffId.GetHashCode();
    if (offSetValue != 0) hash ^= offSetValue.GetHashCode();
    if (limit.Length != 0) hash ^= limit.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (buffId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(buffId);
    }
    if (offSetValue != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(offSetValue);
    }
    if (limit.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(limit);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (buffId != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(buffId);
    }
    if (offSetValue != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(offSetValue);
    }
    if (limit.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(limit);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (buffId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(buffId);
    }
    if (offSetValue != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(offSetValue);
    }
    if (limit.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(limit);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoShopIndependentBuff other) {
    if (other == null) {
      return;
    }
    if (other.buffId != 0) {
      buffId = other.buffId;
    }
    if (other.offSetValue != 0) {
      offSetValue = other.offSetValue;
    }
    if (other.limit.Length != 0) {
      limit = other.limit;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          buffId = input.ReadInt32();
          break;
        }
        case 16: {
          offSetValue = input.ReadInt32();
          break;
        }
        case 26: {
          limit = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          buffId = input.ReadInt32();
          break;
        }
        case 16: {
          offSetValue = input.ReadInt32();
          break;
        }
        case 26: {
          limit = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoGood : pb::IMessage<InfoGood>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoGood> _parser = new pb::MessageParser<InfoGood>(() => new InfoGood());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoGood> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[33]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGood() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGood(InfoGood other) : this() {
    uid_ = other.uid_;
    count_ = other.count_;
    price_ = other.price_;
    level_ = other.level_;
    failedCount_ = other.failedCount_;
    auto_ = other.auto_;
    clerkId_ = other.clerkId_;
    status_ = other.status_;
    producing_start_time_ = other.producing_start_time_;
    producing_time_ = other.producing_time_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGood Clone() {
    return new InfoGood(this);
  }

  /// <summary>Field number for the "uid" field.</summary>
  public const int uidFieldNumber = 1;
  private int uid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int uid {
    get { return uid_; }
    set {
      uid_ = value;
    }
  }

  /// <summary>Field number for the "count" field.</summary>
  public const int countFieldNumber = 2;
  private int count_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int count {
    get { return count_; }
    set {
      count_ = value;
    }
  }

  /// <summary>Field number for the "price" field.</summary>
  public const int priceFieldNumber = 3;
  private int price_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int price {
    get { return price_; }
    set {
      price_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int levelFieldNumber = 4;
  private int level_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "failedCount" field.</summary>
  public const int failedCountFieldNumber = 5;
  private int failedCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int failedCount {
    get { return failedCount_; }
    set {
      failedCount_ = value;
    }
  }

  /// <summary>Field number for the "auto" field.</summary>
  public const int autoFieldNumber = 6;
  private int auto_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int auto {
    get { return auto_; }
    set {
      auto_ = value;
    }
  }

  /// <summary>Field number for the "clerkId" field.</summary>
  public const int clerkIdFieldNumber = 7;
  private int clerkId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int clerkId {
    get { return clerkId_; }
    set {
      clerkId_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int statusFieldNumber = 8;
  private global::InfoGoodStatus status_ = global::InfoGoodStatus.Invalid;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoGoodStatus status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "producing_start_time" field.</summary>
  public const int producing_start_timeFieldNumber = 9;
  private int producing_start_time_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int producing_start_time {
    get { return producing_start_time_; }
    set {
      producing_start_time_ = value;
    }
  }

  /// <summary>Field number for the "producing_time" field.</summary>
  public const int producing_timeFieldNumber = 10;
  private int producing_time_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int producing_time {
    get { return producing_time_; }
    set {
      producing_time_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoGood);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoGood other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (uid != other.uid) return false;
    if (count != other.count) return false;
    if (price != other.price) return false;
    if (level != other.level) return false;
    if (failedCount != other.failedCount) return false;
    if (auto != other.auto) return false;
    if (clerkId != other.clerkId) return false;
    if (status != other.status) return false;
    if (producing_start_time != other.producing_start_time) return false;
    if (producing_time != other.producing_time) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (uid != 0) hash ^= uid.GetHashCode();
    if (count != 0) hash ^= count.GetHashCode();
    if (price != 0) hash ^= price.GetHashCode();
    if (level != 0) hash ^= level.GetHashCode();
    if (failedCount != 0) hash ^= failedCount.GetHashCode();
    if (auto != 0) hash ^= auto.GetHashCode();
    if (clerkId != 0) hash ^= clerkId.GetHashCode();
    if (status != global::InfoGoodStatus.Invalid) hash ^= status.GetHashCode();
    if (producing_start_time != 0) hash ^= producing_start_time.GetHashCode();
    if (producing_time != 0) hash ^= producing_time.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(uid);
    }
    if (count != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(count);
    }
    if (price != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(price);
    }
    if (level != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(level);
    }
    if (failedCount != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(failedCount);
    }
    if (auto != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(auto);
    }
    if (clerkId != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(clerkId);
    }
    if (status != global::InfoGoodStatus.Invalid) {
      output.WriteRawTag(64);
      output.WriteEnum((int) status);
    }
    if (producing_start_time != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(producing_start_time);
    }
    if (producing_time != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(producing_time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(uid);
    }
    if (count != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(count);
    }
    if (price != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(price);
    }
    if (level != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(level);
    }
    if (failedCount != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(failedCount);
    }
    if (auto != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(auto);
    }
    if (clerkId != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(clerkId);
    }
    if (status != global::InfoGoodStatus.Invalid) {
      output.WriteRawTag(64);
      output.WriteEnum((int) status);
    }
    if (producing_start_time != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(producing_start_time);
    }
    if (producing_time != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(producing_time);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (uid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(uid);
    }
    if (count != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(count);
    }
    if (price != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(price);
    }
    if (level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(level);
    }
    if (failedCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(failedCount);
    }
    if (auto != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(auto);
    }
    if (clerkId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(clerkId);
    }
    if (status != global::InfoGoodStatus.Invalid) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) status);
    }
    if (producing_start_time != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(producing_start_time);
    }
    if (producing_time != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(producing_time);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoGood other) {
    if (other == null) {
      return;
    }
    if (other.uid != 0) {
      uid = other.uid;
    }
    if (other.count != 0) {
      count = other.count;
    }
    if (other.price != 0) {
      price = other.price;
    }
    if (other.level != 0) {
      level = other.level;
    }
    if (other.failedCount != 0) {
      failedCount = other.failedCount;
    }
    if (other.auto != 0) {
      auto = other.auto;
    }
    if (other.clerkId != 0) {
      clerkId = other.clerkId;
    }
    if (other.status != global::InfoGoodStatus.Invalid) {
      status = other.status;
    }
    if (other.producing_start_time != 0) {
      producing_start_time = other.producing_start_time;
    }
    if (other.producing_time != 0) {
      producing_time = other.producing_time;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          uid = input.ReadInt32();
          break;
        }
        case 16: {
          count = input.ReadInt32();
          break;
        }
        case 24: {
          price = input.ReadInt32();
          break;
        }
        case 32: {
          level = input.ReadInt32();
          break;
        }
        case 40: {
          failedCount = input.ReadInt32();
          break;
        }
        case 48: {
          auto = input.ReadInt32();
          break;
        }
        case 56: {
          clerkId = input.ReadInt32();
          break;
        }
        case 64: {
          status = (global::InfoGoodStatus) input.ReadEnum();
          break;
        }
        case 72: {
          producing_start_time = input.ReadInt32();
          break;
        }
        case 80: {
          producing_time = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          uid = input.ReadInt32();
          break;
        }
        case 16: {
          count = input.ReadInt32();
          break;
        }
        case 24: {
          price = input.ReadInt32();
          break;
        }
        case 32: {
          level = input.ReadInt32();
          break;
        }
        case 40: {
          failedCount = input.ReadInt32();
          break;
        }
        case 48: {
          auto = input.ReadInt32();
          break;
        }
        case 56: {
          clerkId = input.ReadInt32();
          break;
        }
        case 64: {
          status = (global::InfoGoodStatus) input.ReadEnum();
          break;
        }
        case 72: {
          producing_start_time = input.ReadInt32();
          break;
        }
        case 80: {
          producing_time = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoSkill : pb::IMessage<InfoSkill>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoSkill> _parser = new pb::MessageParser<InfoSkill>(() => new InfoSkill());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoSkill> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[34]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoSkill() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoSkill(InfoSkill other) : this() {
    id_ = other.id_;
    exp_ = other.exp_;
    level_ = other.level_;
    active_ = other.active_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoSkill Clone() {
    return new InfoSkill(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int idFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "exp" field.</summary>
  public const int expFieldNumber = 2;
  private int exp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int exp {
    get { return exp_; }
    set {
      exp_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int levelFieldNumber = 3;
  private int level_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "active" field.</summary>
  public const int activeFieldNumber = 4;
  private bool active_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool active {
    get { return active_; }
    set {
      active_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoSkill);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoSkill other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (id != other.id) return false;
    if (exp != other.exp) return false;
    if (level != other.level) return false;
    if (active != other.active) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (id != 0) hash ^= id.GetHashCode();
    if (exp != 0) hash ^= exp.GetHashCode();
    if (level != 0) hash ^= level.GetHashCode();
    if (active != false) hash ^= active.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (exp != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(exp);
    }
    if (level != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(level);
    }
    if (active != false) {
      output.WriteRawTag(32);
      output.WriteBool(active);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (exp != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(exp);
    }
    if (level != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(level);
    }
    if (active != false) {
      output.WriteRawTag(32);
      output.WriteBool(active);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(id);
    }
    if (exp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(exp);
    }
    if (level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(level);
    }
    if (active != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoSkill other) {
    if (other == null) {
      return;
    }
    if (other.id != 0) {
      id = other.id;
    }
    if (other.exp != 0) {
      exp = other.exp;
    }
    if (other.level != 0) {
      level = other.level;
    }
    if (other.active != false) {
      active = other.active;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          exp = input.ReadInt32();
          break;
        }
        case 24: {
          level = input.ReadInt32();
          break;
        }
        case 32: {
          active = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          exp = input.ReadInt32();
          break;
        }
        case 24: {
          level = input.ReadInt32();
          break;
        }
        case 32: {
          active = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoClerkSystem : pb::IMessage<InfoClerkSystem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoClerkSystem> _parser = new pb::MessageParser<InfoClerkSystem>(() => new InfoClerkSystem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoClerkSystem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[35]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoClerkSystem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoClerkSystem(InfoClerkSystem other) : this() {
    clerk_map_ = other.clerk_map_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoClerkSystem Clone() {
    return new InfoClerkSystem(this);
  }

  /// <summary>Field number for the "clerk_map" field.</summary>
  public const int clerk_mapFieldNumber = 1;
  private static readonly pbc::MapField<int, global::InfoClerk>.Codec _map_clerk_map_codec
      = new pbc::MapField<int, global::InfoClerk>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::InfoClerk.Parser), 10);
  private readonly pbc::MapField<int, global::InfoClerk> clerk_map_ = new pbc::MapField<int, global::InfoClerk>();
  /// <summary>
  /// 员工id:员工数据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::InfoClerk> clerk_map {
    get { return clerk_map_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoClerkSystem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoClerkSystem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!clerk_map.Equals(other.clerk_map)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= clerk_map.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    clerk_map_.WriteTo(output, _map_clerk_map_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    clerk_map_.WriteTo(ref output, _map_clerk_map_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += clerk_map_.CalculateSize(_map_clerk_map_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoClerkSystem other) {
    if (other == null) {
      return;
    }
    clerk_map_.Add(other.clerk_map_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          clerk_map_.AddEntriesFrom(input, _map_clerk_map_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          clerk_map_.AddEntriesFrom(ref input, _map_clerk_map_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoClerk : pb::IMessage<InfoClerk>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoClerk> _parser = new pb::MessageParser<InfoClerk>(() => new InfoClerk());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoClerk> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[36]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoClerk() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoClerk(InfoClerk other) : this() {
    id_ = other.id_;
    exp_ = other.exp_;
    level_ = other.level_;
    historyLevel_ = other.historyLevel_;
    buySkillPoint_ = other.buySkillPoint_;
    buySkillTimes_ = other.buySkillTimes_;
    skillPoint_ = other.skillPoint_;
    skill_ = other.skill_.Clone();
    activeSkill_ = other.activeSkill_.Clone();
    shopId_ = other.shopId_;
    status_ = other.status_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoClerk Clone() {
    return new InfoClerk(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int idFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "exp" field.</summary>
  public const int expFieldNumber = 2;
  private int exp_;
  /// <summary>
  /// 店员经验
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int exp {
    get { return exp_; }
    set {
      exp_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int levelFieldNumber = 3;
  private int level_;
  /// <summary>
  /// 等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "historyLevel" field.</summary>
  public const int historyLevelFieldNumber = 4;
  private int historyLevel_;
  /// <summary>
  /// 历史最高等级，用于避免升级奖励重复发放
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int historyLevel {
    get { return historyLevel_; }
    set {
      historyLevel_ = value;
    }
  }

  /// <summary>Field number for the "buySkillPoint" field.</summary>
  public const int buySkillPointFieldNumber = 5;
  private int buySkillPoint_;
  /// <summary>
  /// 购买的技能点数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int buySkillPoint {
    get { return buySkillPoint_; }
    set {
      buySkillPoint_ = value;
    }
  }

  /// <summary>Field number for the "buySkillTimes" field.</summary>
  public const int buySkillTimesFieldNumber = 6;
  private int buySkillTimes_;
  /// <summary>
  /// 购买技能点次数，购买价格与购买次数有关
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int buySkillTimes {
    get { return buySkillTimes_; }
    set {
      buySkillTimes_ = value;
    }
  }

  /// <summary>Field number for the "skillPoint" field.</summary>
  public const int skillPointFieldNumber = 7;
  private int skillPoint_;
  /// <summary>
  /// 总技能点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int skillPoint {
    get { return skillPoint_; }
    set {
      skillPoint_ = value;
    }
  }

  /// <summary>Field number for the "skill" field.</summary>
  public const int skillFieldNumber = 8;
  private static readonly pb::FieldCodec<global::InfoSkill> _repeated_skill_codec
      = pb::FieldCodec.ForMessage(66, global::InfoSkill.Parser);
  private readonly pbc::RepeatedField<global::InfoSkill> skill_ = new pbc::RepeatedField<global::InfoSkill>();
  /// <summary>
  /// 拥有的技能
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::InfoSkill> skill {
    get { return skill_; }
  }

  /// <summary>Field number for the "activeSkill" field.</summary>
  public const int activeSkillFieldNumber = 9;
  private static readonly pb::FieldCodec<int> _repeated_activeSkill_codec
      = pb::FieldCodec.ForInt32(74);
  private readonly pbc::RepeatedField<int> activeSkill_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 被激活的技能，数组存储的是技能索引，元素顺序代表激活顺序
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> activeSkill {
    get { return activeSkill_; }
  }

  /// <summary>Field number for the "shopId" field.</summary>
  public const int shopIdFieldNumber = 10;
  private int shopId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int shopId {
    get { return shopId_; }
    set {
      shopId_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int statusFieldNumber = 11;
  private global::ClerkStatus status_ = global::ClerkStatus.UnGet;
  /// <summary>
  /// 员工状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ClerkStatus status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoClerk);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoClerk other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (id != other.id) return false;
    if (exp != other.exp) return false;
    if (level != other.level) return false;
    if (historyLevel != other.historyLevel) return false;
    if (buySkillPoint != other.buySkillPoint) return false;
    if (buySkillTimes != other.buySkillTimes) return false;
    if (skillPoint != other.skillPoint) return false;
    if(!skill_.Equals(other.skill_)) return false;
    if(!activeSkill_.Equals(other.activeSkill_)) return false;
    if (shopId != other.shopId) return false;
    if (status != other.status) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (id != 0) hash ^= id.GetHashCode();
    if (exp != 0) hash ^= exp.GetHashCode();
    if (level != 0) hash ^= level.GetHashCode();
    if (historyLevel != 0) hash ^= historyLevel.GetHashCode();
    if (buySkillPoint != 0) hash ^= buySkillPoint.GetHashCode();
    if (buySkillTimes != 0) hash ^= buySkillTimes.GetHashCode();
    if (skillPoint != 0) hash ^= skillPoint.GetHashCode();
    hash ^= skill_.GetHashCode();
    hash ^= activeSkill_.GetHashCode();
    if (shopId != 0) hash ^= shopId.GetHashCode();
    if (status != global::ClerkStatus.UnGet) hash ^= status.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (exp != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(exp);
    }
    if (level != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(level);
    }
    if (historyLevel != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(historyLevel);
    }
    if (buySkillPoint != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(buySkillPoint);
    }
    if (buySkillTimes != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(buySkillTimes);
    }
    if (skillPoint != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(skillPoint);
    }
    skill_.WriteTo(output, _repeated_skill_codec);
    activeSkill_.WriteTo(output, _repeated_activeSkill_codec);
    if (shopId != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(shopId);
    }
    if (status != global::ClerkStatus.UnGet) {
      output.WriteRawTag(88);
      output.WriteEnum((int) status);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (exp != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(exp);
    }
    if (level != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(level);
    }
    if (historyLevel != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(historyLevel);
    }
    if (buySkillPoint != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(buySkillPoint);
    }
    if (buySkillTimes != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(buySkillTimes);
    }
    if (skillPoint != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(skillPoint);
    }
    skill_.WriteTo(ref output, _repeated_skill_codec);
    activeSkill_.WriteTo(ref output, _repeated_activeSkill_codec);
    if (shopId != 0) {
      output.WriteRawTag(80);
      output.WriteInt32(shopId);
    }
    if (status != global::ClerkStatus.UnGet) {
      output.WriteRawTag(88);
      output.WriteEnum((int) status);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(id);
    }
    if (exp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(exp);
    }
    if (level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(level);
    }
    if (historyLevel != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(historyLevel);
    }
    if (buySkillPoint != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(buySkillPoint);
    }
    if (buySkillTimes != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(buySkillTimes);
    }
    if (skillPoint != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(skillPoint);
    }
    size += skill_.CalculateSize(_repeated_skill_codec);
    size += activeSkill_.CalculateSize(_repeated_activeSkill_codec);
    if (shopId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(shopId);
    }
    if (status != global::ClerkStatus.UnGet) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) status);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoClerk other) {
    if (other == null) {
      return;
    }
    if (other.id != 0) {
      id = other.id;
    }
    if (other.exp != 0) {
      exp = other.exp;
    }
    if (other.level != 0) {
      level = other.level;
    }
    if (other.historyLevel != 0) {
      historyLevel = other.historyLevel;
    }
    if (other.buySkillPoint != 0) {
      buySkillPoint = other.buySkillPoint;
    }
    if (other.buySkillTimes != 0) {
      buySkillTimes = other.buySkillTimes;
    }
    if (other.skillPoint != 0) {
      skillPoint = other.skillPoint;
    }
    skill_.Add(other.skill_);
    activeSkill_.Add(other.activeSkill_);
    if (other.shopId != 0) {
      shopId = other.shopId;
    }
    if (other.status != global::ClerkStatus.UnGet) {
      status = other.status;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          exp = input.ReadInt32();
          break;
        }
        case 24: {
          level = input.ReadInt32();
          break;
        }
        case 32: {
          historyLevel = input.ReadInt32();
          break;
        }
        case 40: {
          buySkillPoint = input.ReadInt32();
          break;
        }
        case 48: {
          buySkillTimes = input.ReadInt32();
          break;
        }
        case 56: {
          skillPoint = input.ReadInt32();
          break;
        }
        case 66: {
          skill_.AddEntriesFrom(input, _repeated_skill_codec);
          break;
        }
        case 74:
        case 72: {
          activeSkill_.AddEntriesFrom(input, _repeated_activeSkill_codec);
          break;
        }
        case 80: {
          shopId = input.ReadInt32();
          break;
        }
        case 88: {
          status = (global::ClerkStatus) input.ReadEnum();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          exp = input.ReadInt32();
          break;
        }
        case 24: {
          level = input.ReadInt32();
          break;
        }
        case 32: {
          historyLevel = input.ReadInt32();
          break;
        }
        case 40: {
          buySkillPoint = input.ReadInt32();
          break;
        }
        case 48: {
          buySkillTimes = input.ReadInt32();
          break;
        }
        case 56: {
          skillPoint = input.ReadInt32();
          break;
        }
        case 66: {
          skill_.AddEntriesFrom(ref input, _repeated_skill_codec);
          break;
        }
        case 74:
        case 72: {
          activeSkill_.AddEntriesFrom(ref input, _repeated_activeSkill_codec);
          break;
        }
        case 80: {
          shopId = input.ReadInt32();
          break;
        }
        case 88: {
          status = (global::ClerkStatus) input.ReadEnum();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoGuestSystem : pb::IMessage<InfoGuestSystem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoGuestSystem> _parser = new pb::MessageParser<InfoGuestSystem>(() => new InfoGuestSystem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoGuestSystem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[37]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGuestSystem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGuestSystem(InfoGuestSystem other) : this() {
    guest_map_ = other.guest_map_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGuestSystem Clone() {
    return new InfoGuestSystem(this);
  }

  /// <summary>Field number for the "guest_map" field.</summary>
  public const int guest_mapFieldNumber = 1;
  private static readonly pbc::MapField<int, global::InfoGuest>.Codec _map_guest_map_codec
      = new pbc::MapField<int, global::InfoGuest>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::InfoGuest.Parser), 10);
  private readonly pbc::MapField<int, global::InfoGuest> guest_map_ = new pbc::MapField<int, global::InfoGuest>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::InfoGuest> guest_map {
    get { return guest_map_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoGuestSystem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoGuestSystem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!guest_map.Equals(other.guest_map)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= guest_map.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    guest_map_.WriteTo(output, _map_guest_map_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    guest_map_.WriteTo(ref output, _map_guest_map_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += guest_map_.CalculateSize(_map_guest_map_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoGuestSystem other) {
    if (other == null) {
      return;
    }
    guest_map_.Add(other.guest_map_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          guest_map_.AddEntriesFrom(input, _map_guest_map_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          guest_map_.AddEntriesFrom(ref input, _map_guest_map_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoGuest : pb::IMessage<InfoGuest>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoGuest> _parser = new pb::MessageParser<InfoGuest>(() => new InfoGuest());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoGuest> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[38]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGuest() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGuest(InfoGuest other) : this() {
    uid_ = other.uid_;
    instanceId_ = other.instanceId_;
    totalCoins_ = other.totalCoins_;
    coins_ = other.coins_;
    timeStamp_ = other.timeStamp_;
    slot_ = other.slot_;
    goods_ = other.goods_.Clone();
    tmpGoods_ = other.tmpGoods_ != null ? other.tmpGoods_.Clone() : null;
    batchCount_ = other.batchCount_;
    extraGoods_ = other.extraGoods_ != null ? other.extraGoods_.Clone() : null;
    consumeTimeStamp_ = other.consumeTimeStamp_;
    consumeAfterTime_ = other.consumeAfterTime_;
    finishNeedNumber_ = other.finishNeedNumber_;
    createNeedNumber_ = other.createNeedNumber_;
    consumeGoodsId_ = other.consumeGoodsId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGuest Clone() {
    return new InfoGuest(this);
  }

  /// <summary>Field number for the "uid" field.</summary>
  public const int uidFieldNumber = 1;
  private int uid_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int uid {
    get { return uid_; }
    set {
      uid_ = value;
    }
  }

  /// <summary>Field number for the "instanceId" field.</summary>
  public const int instanceIdFieldNumber = 2;
  private int instanceId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int instanceId {
    get { return instanceId_; }
    set {
      instanceId_ = value;
    }
  }

  /// <summary>Field number for the "totalCoins" field.</summary>
  public const int totalCoinsFieldNumber = 3;
  private int totalCoins_;
  /// <summary>
  /// 顾客携带总金额
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int totalCoins {
    get { return totalCoins_; }
    set {
      totalCoins_ = value;
    }
  }

  /// <summary>Field number for the "coins" field.</summary>
  public const int coinsFieldNumber = 4;
  private int coins_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int coins {
    get { return coins_; }
    set {
      coins_ = value;
    }
  }

  /// <summary>Field number for the "timeStamp" field.</summary>
  public const int timeStampFieldNumber = 5;
  private long timeStamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long timeStamp {
    get { return timeStamp_; }
    set {
      timeStamp_ = value;
    }
  }

  /// <summary>Field number for the "slot" field.</summary>
  public const int slotFieldNumber = 6;
  private int slot_;
  /// <summary>
  /// 所处店铺槽位
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int slot {
    get { return slot_; }
    set {
      slot_ = value;
    }
  }

  /// <summary>Field number for the "goods" field.</summary>
  public const int goodsFieldNumber = 7;
  private static readonly pb::FieldCodec<global::InfoGood> _repeated_goods_codec
      = pb::FieldCodec.ForMessage(58, global::InfoGood.Parser);
  private readonly pbc::RepeatedField<global::InfoGood> goods_ = new pbc::RepeatedField<global::InfoGood>();
  /// <summary>
  /// 商品需求队列
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::InfoGood> goods {
    get { return goods_; }
  }

  /// <summary>Field number for the "tmpGoods" field.</summary>
  public const int tmpGoodsFieldNumber = 8;
  private global::InfoGood tmpGoods_;
  /// <summary>
  /// 新生成的商品需求，会在离开当前店铺时合并到商品需求队列中，不可堆叠的商品需求不合并
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoGood tmpGoods {
    get { return tmpGoods_; }
    set {
      tmpGoods_ = value;
    }
  }

  /// <summary>Field number for the "batchCount" field.</summary>
  public const int batchCountFieldNumber = 9;
  private int batchCount_;
  /// <summary>
  /// 客人批次
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int batchCount {
    get { return batchCount_; }
    set {
      batchCount_ = value;
    }
  }

  /// <summary>Field number for the "extraGoods" field.</summary>
  public const int extraGoodsFieldNumber = 10;
  private global::InfoGood extraGoods_;
  /// <summary>
  /// 额外商品需求，购买当前店铺的某一商品而触发购买当前店铺的另一商品
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoGood extraGoods {
    get { return extraGoods_; }
    set {
      extraGoods_ = value;
    }
  }

  /// <summary>Field number for the "consumeTimeStamp" field.</summary>
  public const int consumeTimeStampFieldNumber = 11;
  private long consumeTimeStamp_;
  /// <summary>
  /// 客人最近一次消费时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long consumeTimeStamp {
    get { return consumeTimeStamp_; }
    set {
      consumeTimeStamp_ = value;
    }
  }

  /// <summary>Field number for the "consumeAfterTime" field.</summary>
  public const int consumeAfterTimeFieldNumber = 12;
  private long consumeAfterTime_;
  /// <summary>
  /// 最近一次消费后的等待时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long consumeAfterTime {
    get { return consumeAfterTime_; }
    set {
      consumeAfterTime_ = value;
    }
  }

  /// <summary>Field number for the "finishNeedNumber" field.</summary>
  public const int finishNeedNumberFieldNumber = 13;
  private int finishNeedNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int finishNeedNumber {
    get { return finishNeedNumber_; }
    set {
      finishNeedNumber_ = value;
    }
  }

  /// <summary>Field number for the "createNeedNumber" field.</summary>
  public const int createNeedNumberFieldNumber = 14;
  private int createNeedNumber_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int createNeedNumber {
    get { return createNeedNumber_; }
    set {
      createNeedNumber_ = value;
    }
  }

  /// <summary>Field number for the "consumeGoodsId" field.</summary>
  public const int consumeGoodsIdFieldNumber = 15;
  private int consumeGoodsId_;
  /// <summary>
  /// 最近一次消费的商品id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int consumeGoodsId {
    get { return consumeGoodsId_; }
    set {
      consumeGoodsId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoGuest);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoGuest other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (uid != other.uid) return false;
    if (instanceId != other.instanceId) return false;
    if (totalCoins != other.totalCoins) return false;
    if (coins != other.coins) return false;
    if (timeStamp != other.timeStamp) return false;
    if (slot != other.slot) return false;
    if(!goods_.Equals(other.goods_)) return false;
    if (!object.Equals(tmpGoods, other.tmpGoods)) return false;
    if (batchCount != other.batchCount) return false;
    if (!object.Equals(extraGoods, other.extraGoods)) return false;
    if (consumeTimeStamp != other.consumeTimeStamp) return false;
    if (consumeAfterTime != other.consumeAfterTime) return false;
    if (finishNeedNumber != other.finishNeedNumber) return false;
    if (createNeedNumber != other.createNeedNumber) return false;
    if (consumeGoodsId != other.consumeGoodsId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (uid != 0) hash ^= uid.GetHashCode();
    if (instanceId != 0) hash ^= instanceId.GetHashCode();
    if (totalCoins != 0) hash ^= totalCoins.GetHashCode();
    if (coins != 0) hash ^= coins.GetHashCode();
    if (timeStamp != 0L) hash ^= timeStamp.GetHashCode();
    if (slot != 0) hash ^= slot.GetHashCode();
    hash ^= goods_.GetHashCode();
    if (tmpGoods_ != null) hash ^= tmpGoods.GetHashCode();
    if (batchCount != 0) hash ^= batchCount.GetHashCode();
    if (extraGoods_ != null) hash ^= extraGoods.GetHashCode();
    if (consumeTimeStamp != 0L) hash ^= consumeTimeStamp.GetHashCode();
    if (consumeAfterTime != 0L) hash ^= consumeAfterTime.GetHashCode();
    if (finishNeedNumber != 0) hash ^= finishNeedNumber.GetHashCode();
    if (createNeedNumber != 0) hash ^= createNeedNumber.GetHashCode();
    if (consumeGoodsId != 0) hash ^= consumeGoodsId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(uid);
    }
    if (instanceId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(instanceId);
    }
    if (totalCoins != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(totalCoins);
    }
    if (coins != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(coins);
    }
    if (timeStamp != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(timeStamp);
    }
    if (slot != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(slot);
    }
    goods_.WriteTo(output, _repeated_goods_codec);
    if (tmpGoods_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(tmpGoods);
    }
    if (batchCount != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(batchCount);
    }
    if (extraGoods_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(extraGoods);
    }
    if (consumeTimeStamp != 0L) {
      output.WriteRawTag(88);
      output.WriteInt64(consumeTimeStamp);
    }
    if (consumeAfterTime != 0L) {
      output.WriteRawTag(96);
      output.WriteInt64(consumeAfterTime);
    }
    if (finishNeedNumber != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(finishNeedNumber);
    }
    if (createNeedNumber != 0) {
      output.WriteRawTag(112);
      output.WriteInt32(createNeedNumber);
    }
    if (consumeGoodsId != 0) {
      output.WriteRawTag(120);
      output.WriteInt32(consumeGoodsId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(uid);
    }
    if (instanceId != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(instanceId);
    }
    if (totalCoins != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(totalCoins);
    }
    if (coins != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(coins);
    }
    if (timeStamp != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(timeStamp);
    }
    if (slot != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(slot);
    }
    goods_.WriteTo(ref output, _repeated_goods_codec);
    if (tmpGoods_ != null) {
      output.WriteRawTag(66);
      output.WriteMessage(tmpGoods);
    }
    if (batchCount != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(batchCount);
    }
    if (extraGoods_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(extraGoods);
    }
    if (consumeTimeStamp != 0L) {
      output.WriteRawTag(88);
      output.WriteInt64(consumeTimeStamp);
    }
    if (consumeAfterTime != 0L) {
      output.WriteRawTag(96);
      output.WriteInt64(consumeAfterTime);
    }
    if (finishNeedNumber != 0) {
      output.WriteRawTag(104);
      output.WriteInt32(finishNeedNumber);
    }
    if (createNeedNumber != 0) {
      output.WriteRawTag(112);
      output.WriteInt32(createNeedNumber);
    }
    if (consumeGoodsId != 0) {
      output.WriteRawTag(120);
      output.WriteInt32(consumeGoodsId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (uid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(uid);
    }
    if (instanceId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(instanceId);
    }
    if (totalCoins != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(totalCoins);
    }
    if (coins != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(coins);
    }
    if (timeStamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(timeStamp);
    }
    if (slot != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(slot);
    }
    size += goods_.CalculateSize(_repeated_goods_codec);
    if (tmpGoods_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(tmpGoods);
    }
    if (batchCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(batchCount);
    }
    if (extraGoods_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(extraGoods);
    }
    if (consumeTimeStamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(consumeTimeStamp);
    }
    if (consumeAfterTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(consumeAfterTime);
    }
    if (finishNeedNumber != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(finishNeedNumber);
    }
    if (createNeedNumber != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(createNeedNumber);
    }
    if (consumeGoodsId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(consumeGoodsId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoGuest other) {
    if (other == null) {
      return;
    }
    if (other.uid != 0) {
      uid = other.uid;
    }
    if (other.instanceId != 0) {
      instanceId = other.instanceId;
    }
    if (other.totalCoins != 0) {
      totalCoins = other.totalCoins;
    }
    if (other.coins != 0) {
      coins = other.coins;
    }
    if (other.timeStamp != 0L) {
      timeStamp = other.timeStamp;
    }
    if (other.slot != 0) {
      slot = other.slot;
    }
    goods_.Add(other.goods_);
    if (other.tmpGoods_ != null) {
      if (tmpGoods_ == null) {
        tmpGoods = new global::InfoGood();
      }
      tmpGoods.MergeFrom(other.tmpGoods);
    }
    if (other.batchCount != 0) {
      batchCount = other.batchCount;
    }
    if (other.extraGoods_ != null) {
      if (extraGoods_ == null) {
        extraGoods = new global::InfoGood();
      }
      extraGoods.MergeFrom(other.extraGoods);
    }
    if (other.consumeTimeStamp != 0L) {
      consumeTimeStamp = other.consumeTimeStamp;
    }
    if (other.consumeAfterTime != 0L) {
      consumeAfterTime = other.consumeAfterTime;
    }
    if (other.finishNeedNumber != 0) {
      finishNeedNumber = other.finishNeedNumber;
    }
    if (other.createNeedNumber != 0) {
      createNeedNumber = other.createNeedNumber;
    }
    if (other.consumeGoodsId != 0) {
      consumeGoodsId = other.consumeGoodsId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          uid = input.ReadInt32();
          break;
        }
        case 16: {
          instanceId = input.ReadInt32();
          break;
        }
        case 24: {
          totalCoins = input.ReadInt32();
          break;
        }
        case 32: {
          coins = input.ReadInt32();
          break;
        }
        case 40: {
          timeStamp = input.ReadInt64();
          break;
        }
        case 48: {
          slot = input.ReadInt32();
          break;
        }
        case 58: {
          goods_.AddEntriesFrom(input, _repeated_goods_codec);
          break;
        }
        case 66: {
          if (tmpGoods_ == null) {
            tmpGoods = new global::InfoGood();
          }
          input.ReadMessage(tmpGoods);
          break;
        }
        case 72: {
          batchCount = input.ReadInt32();
          break;
        }
        case 82: {
          if (extraGoods_ == null) {
            extraGoods = new global::InfoGood();
          }
          input.ReadMessage(extraGoods);
          break;
        }
        case 88: {
          consumeTimeStamp = input.ReadInt64();
          break;
        }
        case 96: {
          consumeAfterTime = input.ReadInt64();
          break;
        }
        case 104: {
          finishNeedNumber = input.ReadInt32();
          break;
        }
        case 112: {
          createNeedNumber = input.ReadInt32();
          break;
        }
        case 120: {
          consumeGoodsId = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          uid = input.ReadInt32();
          break;
        }
        case 16: {
          instanceId = input.ReadInt32();
          break;
        }
        case 24: {
          totalCoins = input.ReadInt32();
          break;
        }
        case 32: {
          coins = input.ReadInt32();
          break;
        }
        case 40: {
          timeStamp = input.ReadInt64();
          break;
        }
        case 48: {
          slot = input.ReadInt32();
          break;
        }
        case 58: {
          goods_.AddEntriesFrom(ref input, _repeated_goods_codec);
          break;
        }
        case 66: {
          if (tmpGoods_ == null) {
            tmpGoods = new global::InfoGood();
          }
          input.ReadMessage(tmpGoods);
          break;
        }
        case 72: {
          batchCount = input.ReadInt32();
          break;
        }
        case 82: {
          if (extraGoods_ == null) {
            extraGoods = new global::InfoGood();
          }
          input.ReadMessage(extraGoods);
          break;
        }
        case 88: {
          consumeTimeStamp = input.ReadInt64();
          break;
        }
        case 96: {
          consumeAfterTime = input.ReadInt64();
          break;
        }
        case 104: {
          finishNeedNumber = input.ReadInt32();
          break;
        }
        case 112: {
          createNeedNumber = input.ReadInt32();
          break;
        }
        case 120: {
          consumeGoodsId = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoAchievementSystem : pb::IMessage<InfoAchievementSystem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoAchievementSystem> _parser = new pb::MessageParser<InfoAchievementSystem>(() => new InfoAchievementSystem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoAchievementSystem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[39]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAchievementSystem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAchievementSystem(InfoAchievementSystem other) : this() {
    ach_items_ = other.ach_items_.Clone();
    point_ = other.point_ != null ? other.point_.Clone() : null;
    showing_ = other.showing_ != null ? other.showing_.Clone() : null;
    info_ad_ = other.info_ad_ != null ? other.info_ad_.Clone() : null;
    store_items_ = other.store_items_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAchievementSystem Clone() {
    return new InfoAchievementSystem(this);
  }

  /// <summary>Field number for the "ach_items" field.</summary>
  public const int ach_itemsFieldNumber = 1;
  private static readonly pbc::MapField<int, global::IASItem>.Codec _map_ach_items_codec
      = new pbc::MapField<int, global::IASItem>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::IASItem.Parser), 10);
  private readonly pbc::MapField<int, global::IASItem> ach_items_ = new pbc::MapField<int, global::IASItem>();
  /// <summary>
  /// 成就条目id：成就条目数据
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::IASItem> ach_items {
    get { return ach_items_; }
  }

  /// <summary>Field number for the "point" field.</summary>
  public const int pointFieldNumber = 2;
  private global::InfoAchPoint point_;
  /// <summary>
  /// 成就点相关
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoAchPoint point {
    get { return point_; }
    set {
      point_ = value;
    }
  }

  /// <summary>Field number for the "showing" field.</summary>
  public const int showingFieldNumber = 3;
  private global::InfoAchShow showing_;
  /// <summary>
  /// 展示中的成就索引
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoAchShow showing {
    get { return showing_; }
    set {
      showing_ = value;
    }
  }

  /// <summary>Field number for the "info_ad" field.</summary>
  public const int info_adFieldNumber = 4;
  private global::InfoAchAd info_ad_;
  /// <summary>
  /// 广告相关
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoAchAd info_ad {
    get { return info_ad_; }
    set {
      info_ad_ = value;
    }
  }

  /// <summary>Field number for the "store_items" field.</summary>
  public const int store_itemsFieldNumber = 5;
  private static readonly pbc::MapField<int, global::InfoAchStoreItem>.Codec _map_store_items_codec
      = new pbc::MapField<int, global::InfoAchStoreItem>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::InfoAchStoreItem.Parser), 42);
  private readonly pbc::MapField<int, global::InfoAchStoreItem> store_items_ = new pbc::MapField<int, global::InfoAchStoreItem>();
  /// <summary>
  /// 成就商店条目
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::InfoAchStoreItem> store_items {
    get { return store_items_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoAchievementSystem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoAchievementSystem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!ach_items.Equals(other.ach_items)) return false;
    if (!object.Equals(point, other.point)) return false;
    if (!object.Equals(showing, other.showing)) return false;
    if (!object.Equals(info_ad, other.info_ad)) return false;
    if (!store_items.Equals(other.store_items)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= ach_items.GetHashCode();
    if (point_ != null) hash ^= point.GetHashCode();
    if (showing_ != null) hash ^= showing.GetHashCode();
    if (info_ad_ != null) hash ^= info_ad.GetHashCode();
    hash ^= store_items.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    ach_items_.WriteTo(output, _map_ach_items_codec);
    if (point_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(point);
    }
    if (showing_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(showing);
    }
    if (info_ad_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(info_ad);
    }
    store_items_.WriteTo(output, _map_store_items_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    ach_items_.WriteTo(ref output, _map_ach_items_codec);
    if (point_ != null) {
      output.WriteRawTag(18);
      output.WriteMessage(point);
    }
    if (showing_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(showing);
    }
    if (info_ad_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(info_ad);
    }
    store_items_.WriteTo(ref output, _map_store_items_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += ach_items_.CalculateSize(_map_ach_items_codec);
    if (point_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(point);
    }
    if (showing_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(showing);
    }
    if (info_ad_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(info_ad);
    }
    size += store_items_.CalculateSize(_map_store_items_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoAchievementSystem other) {
    if (other == null) {
      return;
    }
    ach_items_.Add(other.ach_items_);
    if (other.point_ != null) {
      if (point_ == null) {
        point = new global::InfoAchPoint();
      }
      point.MergeFrom(other.point);
    }
    if (other.showing_ != null) {
      if (showing_ == null) {
        showing = new global::InfoAchShow();
      }
      showing.MergeFrom(other.showing);
    }
    if (other.info_ad_ != null) {
      if (info_ad_ == null) {
        info_ad = new global::InfoAchAd();
      }
      info_ad.MergeFrom(other.info_ad);
    }
    store_items_.Add(other.store_items_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          ach_items_.AddEntriesFrom(input, _map_ach_items_codec);
          break;
        }
        case 18: {
          if (point_ == null) {
            point = new global::InfoAchPoint();
          }
          input.ReadMessage(point);
          break;
        }
        case 26: {
          if (showing_ == null) {
            showing = new global::InfoAchShow();
          }
          input.ReadMessage(showing);
          break;
        }
        case 34: {
          if (info_ad_ == null) {
            info_ad = new global::InfoAchAd();
          }
          input.ReadMessage(info_ad);
          break;
        }
        case 42: {
          store_items_.AddEntriesFrom(input, _map_store_items_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          ach_items_.AddEntriesFrom(ref input, _map_ach_items_codec);
          break;
        }
        case 18: {
          if (point_ == null) {
            point = new global::InfoAchPoint();
          }
          input.ReadMessage(point);
          break;
        }
        case 26: {
          if (showing_ == null) {
            showing = new global::InfoAchShow();
          }
          input.ReadMessage(showing);
          break;
        }
        case 34: {
          if (info_ad_ == null) {
            info_ad = new global::InfoAchAd();
          }
          input.ReadMessage(info_ad);
          break;
        }
        case 42: {
          store_items_.AddEntriesFrom(ref input, _map_store_items_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoAchStoreItem : pb::IMessage<InfoAchStoreItem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoAchStoreItem> _parser = new pb::MessageParser<InfoAchStoreItem>(() => new InfoAchStoreItem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoAchStoreItem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[40]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAchStoreItem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAchStoreItem(InfoAchStoreItem other) : this() {
    id_ = other.id_;
    status_ = other.status_;
    exchange_ts_ = other.exchange_ts_;
    try_ts_ = other.try_ts_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAchStoreItem Clone() {
    return new InfoAchStoreItem(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int idFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int statusFieldNumber = 2;
  private global::IASStoreItemStatus status_ = global::IASStoreItemStatus.Exchanged;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::IASStoreItemStatus status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "exchange_ts" field.</summary>
  public const int exchange_tsFieldNumber = 3;
  private long exchange_ts_;
  /// <summary>
  /// 上次兑换时间，对于可重复兑换的，用于计算CD
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long exchange_ts {
    get { return exchange_ts_; }
    set {
      exchange_ts_ = value;
    }
  }

  /// <summary>Field number for the "try_ts" field.</summary>
  public const int try_tsFieldNumber = 4;
  private long try_ts_;
  /// <summary>
  /// 开始使用时间， 对于可试用的，用于计算CD
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long try_ts {
    get { return try_ts_; }
    set {
      try_ts_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoAchStoreItem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoAchStoreItem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (id != other.id) return false;
    if (status != other.status) return false;
    if (exchange_ts != other.exchange_ts) return false;
    if (try_ts != other.try_ts) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (id != 0) hash ^= id.GetHashCode();
    if (status != global::IASStoreItemStatus.Exchanged) hash ^= status.GetHashCode();
    if (exchange_ts != 0L) hash ^= exchange_ts.GetHashCode();
    if (try_ts != 0L) hash ^= try_ts.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (status != global::IASStoreItemStatus.Exchanged) {
      output.WriteRawTag(16);
      output.WriteEnum((int) status);
    }
    if (exchange_ts != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(exchange_ts);
    }
    if (try_ts != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(try_ts);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (status != global::IASStoreItemStatus.Exchanged) {
      output.WriteRawTag(16);
      output.WriteEnum((int) status);
    }
    if (exchange_ts != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(exchange_ts);
    }
    if (try_ts != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(try_ts);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(id);
    }
    if (status != global::IASStoreItemStatus.Exchanged) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) status);
    }
    if (exchange_ts != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(exchange_ts);
    }
    if (try_ts != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(try_ts);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoAchStoreItem other) {
    if (other == null) {
      return;
    }
    if (other.id != 0) {
      id = other.id;
    }
    if (other.status != global::IASStoreItemStatus.Exchanged) {
      status = other.status;
    }
    if (other.exchange_ts != 0L) {
      exchange_ts = other.exchange_ts;
    }
    if (other.try_ts != 0L) {
      try_ts = other.try_ts;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          status = (global::IASStoreItemStatus) input.ReadEnum();
          break;
        }
        case 24: {
          exchange_ts = input.ReadInt64();
          break;
        }
        case 32: {
          try_ts = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          status = (global::IASStoreItemStatus) input.ReadEnum();
          break;
        }
        case 24: {
          exchange_ts = input.ReadInt64();
          break;
        }
        case 32: {
          try_ts = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoAchShow : pb::IMessage<InfoAchShow>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoAchShow> _parser = new pb::MessageParser<InfoAchShow>(() => new InfoAchShow());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoAchShow> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[41]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAchShow() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAchShow(InfoAchShow other) : this() {
    showing_index_ = other.showing_index_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAchShow Clone() {
    return new InfoAchShow(this);
  }

  /// <summary>Field number for the "showing_index" field.</summary>
  public const int showing_indexFieldNumber = 1;
  private int showing_index_;
  /// <summary>
  /// 展示中的成就索引
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int showing_index {
    get { return showing_index_; }
    set {
      showing_index_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoAchShow);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoAchShow other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (showing_index != other.showing_index) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (showing_index != 0) hash ^= showing_index.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (showing_index != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(showing_index);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (showing_index != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(showing_index);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (showing_index != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(showing_index);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoAchShow other) {
    if (other == null) {
      return;
    }
    if (other.showing_index != 0) {
      showing_index = other.showing_index;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          showing_index = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          showing_index = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoAchPoint : pb::IMessage<InfoAchPoint>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoAchPoint> _parser = new pb::MessageParser<InfoAchPoint>(() => new InfoAchPoint());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoAchPoint> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[42]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAchPoint() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAchPoint(InfoAchPoint other) : this() {
    ach_point_ = other.ach_point_;
    remain_ach_point_ = other.remain_ach_point_;
    status_ = other.status_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAchPoint Clone() {
    return new InfoAchPoint(this);
  }

  /// <summary>Field number for the "ach_point" field.</summary>
  public const int ach_pointFieldNumber = 1;
  private long ach_point_;
  /// <summary>
  /// 累积成就点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long ach_point {
    get { return ach_point_; }
    set {
      ach_point_ = value;
    }
  }

  /// <summary>Field number for the "remain_ach_point" field.</summary>
  public const int remain_ach_pointFieldNumber = 2;
  private long remain_ach_point_;
  /// <summary>
  /// 剩余成就点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long remain_ach_point {
    get { return remain_ach_point_; }
    set {
      remain_ach_point_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int statusFieldNumber = 3;
  private static readonly pbc::MapField<int, global::IAStatus>.Codec _map_status_codec
      = new pbc::MapField<int, global::IAStatus>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForEnum(16, x => (int) x, x => (global::IAStatus) x, global::IAStatus.Locked), 26);
  private readonly pbc::MapField<int, global::IAStatus> status_ = new pbc::MapField<int, global::IAStatus>();
  /// <summary>
  /// 成就状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::IAStatus> status {
    get { return status_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoAchPoint);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoAchPoint other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ach_point != other.ach_point) return false;
    if (remain_ach_point != other.remain_ach_point) return false;
    if (!status.Equals(other.status)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ach_point != 0L) hash ^= ach_point.GetHashCode();
    if (remain_ach_point != 0L) hash ^= remain_ach_point.GetHashCode();
    hash ^= status.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ach_point != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(ach_point);
    }
    if (remain_ach_point != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(remain_ach_point);
    }
    status_.WriteTo(output, _map_status_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ach_point != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(ach_point);
    }
    if (remain_ach_point != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(remain_ach_point);
    }
    status_.WriteTo(ref output, _map_status_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ach_point != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(ach_point);
    }
    if (remain_ach_point != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(remain_ach_point);
    }
    size += status_.CalculateSize(_map_status_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoAchPoint other) {
    if (other == null) {
      return;
    }
    if (other.ach_point != 0L) {
      ach_point = other.ach_point;
    }
    if (other.remain_ach_point != 0L) {
      remain_ach_point = other.remain_ach_point;
    }
    status_.Add(other.status_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ach_point = input.ReadInt64();
          break;
        }
        case 16: {
          remain_ach_point = input.ReadInt64();
          break;
        }
        case 26: {
          status_.AddEntriesFrom(input, _map_status_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ach_point = input.ReadInt64();
          break;
        }
        case 16: {
          remain_ach_point = input.ReadInt64();
          break;
        }
        case 26: {
          status_.AddEntriesFrom(ref input, _map_status_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoAchAd : pb::IMessage<InfoAchAd>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoAchAd> _parser = new pb::MessageParser<InfoAchAd>(() => new InfoAchAd());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoAchAd> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[43]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAchAd() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAchAd(InfoAchAd other) : this() {
    ad_timestamp_ = other.ad_timestamp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoAchAd Clone() {
    return new InfoAchAd(this);
  }

  /// <summary>Field number for the "ad_timestamp" field.</summary>
  public const int ad_timestampFieldNumber = 1;
  private long ad_timestamp_;
  /// <summary>
  /// 上次看广告获取成就点的时间戳，用于计算CD
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long ad_timestamp {
    get { return ad_timestamp_; }
    set {
      ad_timestamp_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoAchAd);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoAchAd other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ad_timestamp != other.ad_timestamp) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ad_timestamp != 0L) hash ^= ad_timestamp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (ad_timestamp != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(ad_timestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (ad_timestamp != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(ad_timestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ad_timestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(ad_timestamp);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoAchAd other) {
    if (other == null) {
      return;
    }
    if (other.ad_timestamp != 0L) {
      ad_timestamp = other.ad_timestamp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ad_timestamp = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          ad_timestamp = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class IASItem : pb::IMessage<IASItem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<IASItem> _parser = new pb::MessageParser<IASItem>(() => new IASItem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<IASItem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[44]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IASItem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IASItem(IASItem other) : this() {
    id_ = other.id_;
    status_ = other.status_;
    current_value_ = other.current_value_;
    need_value_ = other.need_value_;
    buff_ = other.buff_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public IASItem Clone() {
    return new IASItem(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int idFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 条目id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int statusFieldNumber = 2;
  private global::IASItemtatus status_ = global::IASItemtatus.Reward;
  /// <summary>
  /// 状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::IASItemtatus status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "current_value" field.</summary>
  public const int current_valueFieldNumber = 3;
  private long current_value_;
  /// <summary>
  /// 当前值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long current_value {
    get { return current_value_; }
    set {
      current_value_ = value;
    }
  }

  /// <summary>Field number for the "need_value" field.</summary>
  public const int need_valueFieldNumber = 4;
  private long need_value_;
  /// <summary>
  /// 目标值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long need_value {
    get { return need_value_; }
    set {
      need_value_ = value;
    }
  }

  /// <summary>Field number for the "buff" field.</summary>
  public const int buffFieldNumber = 5;
  private int buff_;
  /// <summary>
  /// buff id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int buff {
    get { return buff_; }
    set {
      buff_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as IASItem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(IASItem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (id != other.id) return false;
    if (status != other.status) return false;
    if (current_value != other.current_value) return false;
    if (need_value != other.need_value) return false;
    if (buff != other.buff) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (id != 0) hash ^= id.GetHashCode();
    if (status != global::IASItemtatus.Reward) hash ^= status.GetHashCode();
    if (current_value != 0L) hash ^= current_value.GetHashCode();
    if (need_value != 0L) hash ^= need_value.GetHashCode();
    if (buff != 0) hash ^= buff.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (status != global::IASItemtatus.Reward) {
      output.WriteRawTag(16);
      output.WriteEnum((int) status);
    }
    if (current_value != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(current_value);
    }
    if (need_value != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(need_value);
    }
    if (buff != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(buff);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (status != global::IASItemtatus.Reward) {
      output.WriteRawTag(16);
      output.WriteEnum((int) status);
    }
    if (current_value != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(current_value);
    }
    if (need_value != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(need_value);
    }
    if (buff != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(buff);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(id);
    }
    if (status != global::IASItemtatus.Reward) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) status);
    }
    if (current_value != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(current_value);
    }
    if (need_value != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(need_value);
    }
    if (buff != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(buff);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(IASItem other) {
    if (other == null) {
      return;
    }
    if (other.id != 0) {
      id = other.id;
    }
    if (other.status != global::IASItemtatus.Reward) {
      status = other.status;
    }
    if (other.current_value != 0L) {
      current_value = other.current_value;
    }
    if (other.need_value != 0L) {
      need_value = other.need_value;
    }
    if (other.buff != 0) {
      buff = other.buff;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          status = (global::IASItemtatus) input.ReadEnum();
          break;
        }
        case 24: {
          current_value = input.ReadInt64();
          break;
        }
        case 32: {
          need_value = input.ReadInt64();
          break;
        }
        case 40: {
          buff = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          status = (global::IASItemtatus) input.ReadEnum();
          break;
        }
        case 24: {
          current_value = input.ReadInt64();
          break;
        }
        case 32: {
          need_value = input.ReadInt64();
          break;
        }
        case 40: {
          buff = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoHomeworldUnlock : pb::IMessage<InfoHomeworldUnlock>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoHomeworldUnlock> _parser = new pb::MessageParser<InfoHomeworldUnlock>(() => new InfoHomeworldUnlock());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoHomeworldUnlock> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[45]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldUnlock() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldUnlock(InfoHomeworldUnlock other) : this() {
    status_ = other.status_;
    cd_timestamp_ = other.cd_timestamp_;
    ad_cd_timestamp_ = other.ad_cd_timestamp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldUnlock Clone() {
    return new InfoHomeworldUnlock(this);
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int statusFieldNumber = 1;
  private global::HomeworldStatus status_ = global::HomeworldStatus.Lock;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::HomeworldStatus status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "cd_timestamp" field.</summary>
  public const int cd_timestampFieldNumber = 2;
  private long cd_timestamp_;
  /// <summary>
  /// 装修倒计时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long cd_timestamp {
    get { return cd_timestamp_; }
    set {
      cd_timestamp_ = value;
    }
  }

  /// <summary>Field number for the "ad_cd_timestamp" field.</summary>
  public const int ad_cd_timestampFieldNumber = 3;
  private long ad_cd_timestamp_;
  /// <summary>
  /// 广告倒计时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long ad_cd_timestamp {
    get { return ad_cd_timestamp_; }
    set {
      ad_cd_timestamp_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoHomeworldUnlock);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoHomeworldUnlock other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (status != other.status) return false;
    if (cd_timestamp != other.cd_timestamp) return false;
    if (ad_cd_timestamp != other.ad_cd_timestamp) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (status != global::HomeworldStatus.Lock) hash ^= status.GetHashCode();
    if (cd_timestamp != 0L) hash ^= cd_timestamp.GetHashCode();
    if (ad_cd_timestamp != 0L) hash ^= ad_cd_timestamp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (status != global::HomeworldStatus.Lock) {
      output.WriteRawTag(8);
      output.WriteEnum((int) status);
    }
    if (cd_timestamp != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(cd_timestamp);
    }
    if (ad_cd_timestamp != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(ad_cd_timestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (status != global::HomeworldStatus.Lock) {
      output.WriteRawTag(8);
      output.WriteEnum((int) status);
    }
    if (cd_timestamp != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(cd_timestamp);
    }
    if (ad_cd_timestamp != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(ad_cd_timestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (status != global::HomeworldStatus.Lock) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) status);
    }
    if (cd_timestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(cd_timestamp);
    }
    if (ad_cd_timestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(ad_cd_timestamp);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoHomeworldUnlock other) {
    if (other == null) {
      return;
    }
    if (other.status != global::HomeworldStatus.Lock) {
      status = other.status;
    }
    if (other.cd_timestamp != 0L) {
      cd_timestamp = other.cd_timestamp;
    }
    if (other.ad_cd_timestamp != 0L) {
      ad_cd_timestamp = other.ad_cd_timestamp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          status = (global::HomeworldStatus) input.ReadEnum();
          break;
        }
        case 16: {
          cd_timestamp = input.ReadInt64();
          break;
        }
        case 24: {
          ad_cd_timestamp = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          status = (global::HomeworldStatus) input.ReadEnum();
          break;
        }
        case 16: {
          cd_timestamp = input.ReadInt64();
          break;
        }
        case 24: {
          ad_cd_timestamp = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoHomeworldFlowerbed : pb::IMessage<InfoHomeworldFlowerbed>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoHomeworldFlowerbed> _parser = new pb::MessageParser<InfoHomeworldFlowerbed>(() => new InfoHomeworldFlowerbed());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoHomeworldFlowerbed> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[46]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldFlowerbed() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldFlowerbed(InfoHomeworldFlowerbed other) : this() {
    bed_id_ = other.bed_id_;
    flower_id_ = other.flower_id_;
    level_ = other.level_;
    status_ = other.status_;
    start_timestamp_ = other.start_timestamp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldFlowerbed Clone() {
    return new InfoHomeworldFlowerbed(this);
  }

  /// <summary>Field number for the "bed_id" field.</summary>
  public const int bed_idFieldNumber = 1;
  private int bed_id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int bed_id {
    get { return bed_id_; }
    set {
      bed_id_ = value;
    }
  }

  /// <summary>Field number for the "flower_id" field.</summary>
  public const int flower_idFieldNumber = 2;
  private int flower_id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int flower_id {
    get { return flower_id_; }
    set {
      flower_id_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int levelFieldNumber = 3;
  private int level_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int statusFieldNumber = 4;
  private global::HomeworldFlowerbedStatus status_ = global::HomeworldFlowerbedStatus.Invalid;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::HomeworldFlowerbedStatus status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "start_timestamp" field.</summary>
  public const int start_timestampFieldNumber = 5;
  private long start_timestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long start_timestamp {
    get { return start_timestamp_; }
    set {
      start_timestamp_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoHomeworldFlowerbed);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoHomeworldFlowerbed other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (bed_id != other.bed_id) return false;
    if (flower_id != other.flower_id) return false;
    if (level != other.level) return false;
    if (status != other.status) return false;
    if (start_timestamp != other.start_timestamp) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (bed_id != 0) hash ^= bed_id.GetHashCode();
    if (flower_id != 0) hash ^= flower_id.GetHashCode();
    if (level != 0) hash ^= level.GetHashCode();
    if (status != global::HomeworldFlowerbedStatus.Invalid) hash ^= status.GetHashCode();
    if (start_timestamp != 0L) hash ^= start_timestamp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (bed_id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(bed_id);
    }
    if (flower_id != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(flower_id);
    }
    if (level != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(level);
    }
    if (status != global::HomeworldFlowerbedStatus.Invalid) {
      output.WriteRawTag(32);
      output.WriteEnum((int) status);
    }
    if (start_timestamp != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(start_timestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (bed_id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(bed_id);
    }
    if (flower_id != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(flower_id);
    }
    if (level != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(level);
    }
    if (status != global::HomeworldFlowerbedStatus.Invalid) {
      output.WriteRawTag(32);
      output.WriteEnum((int) status);
    }
    if (start_timestamp != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(start_timestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (bed_id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(bed_id);
    }
    if (flower_id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(flower_id);
    }
    if (level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(level);
    }
    if (status != global::HomeworldFlowerbedStatus.Invalid) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) status);
    }
    if (start_timestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(start_timestamp);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoHomeworldFlowerbed other) {
    if (other == null) {
      return;
    }
    if (other.bed_id != 0) {
      bed_id = other.bed_id;
    }
    if (other.flower_id != 0) {
      flower_id = other.flower_id;
    }
    if (other.level != 0) {
      level = other.level;
    }
    if (other.status != global::HomeworldFlowerbedStatus.Invalid) {
      status = other.status;
    }
    if (other.start_timestamp != 0L) {
      start_timestamp = other.start_timestamp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          bed_id = input.ReadInt32();
          break;
        }
        case 16: {
          flower_id = input.ReadInt32();
          break;
        }
        case 24: {
          level = input.ReadInt32();
          break;
        }
        case 32: {
          status = (global::HomeworldFlowerbedStatus) input.ReadEnum();
          break;
        }
        case 40: {
          start_timestamp = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          bed_id = input.ReadInt32();
          break;
        }
        case 16: {
          flower_id = input.ReadInt32();
          break;
        }
        case 24: {
          level = input.ReadInt32();
          break;
        }
        case 32: {
          status = (global::HomeworldFlowerbedStatus) input.ReadEnum();
          break;
        }
        case 40: {
          start_timestamp = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoHomeworldFish : pb::IMessage<InfoHomeworldFish>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoHomeworldFish> _parser = new pb::MessageParser<InfoHomeworldFish>(() => new InfoHomeworldFish());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoHomeworldFish> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[47]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldFish() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldFish(InfoHomeworldFish other) : this() {
    level_ = other.level_;
    times_ = other.times_;
    cd_timestamp_ = other.cd_timestamp_;
    ad_cd_timestamp_ = other.ad_cd_timestamp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldFish Clone() {
    return new InfoHomeworldFish(this);
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int levelFieldNumber = 1;
  private int level_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "times" field.</summary>
  public const int timesFieldNumber = 2;
  private int times_;
  /// <summary>
  /// 免费次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int times {
    get { return times_; }
    set {
      times_ = value;
    }
  }

  /// <summary>Field number for the "cd_timestamp" field.</summary>
  public const int cd_timestampFieldNumber = 3;
  private long cd_timestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long cd_timestamp {
    get { return cd_timestamp_; }
    set {
      cd_timestamp_ = value;
    }
  }

  /// <summary>Field number for the "ad_cd_timestamp" field.</summary>
  public const int ad_cd_timestampFieldNumber = 4;
  private long ad_cd_timestamp_;
  /// <summary>
  /// 广告倒计时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long ad_cd_timestamp {
    get { return ad_cd_timestamp_; }
    set {
      ad_cd_timestamp_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoHomeworldFish);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoHomeworldFish other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (level != other.level) return false;
    if (times != other.times) return false;
    if (cd_timestamp != other.cd_timestamp) return false;
    if (ad_cd_timestamp != other.ad_cd_timestamp) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (level != 0) hash ^= level.GetHashCode();
    if (times != 0) hash ^= times.GetHashCode();
    if (cd_timestamp != 0L) hash ^= cd_timestamp.GetHashCode();
    if (ad_cd_timestamp != 0L) hash ^= ad_cd_timestamp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (level != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(level);
    }
    if (times != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(times);
    }
    if (cd_timestamp != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(cd_timestamp);
    }
    if (ad_cd_timestamp != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(ad_cd_timestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (level != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(level);
    }
    if (times != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(times);
    }
    if (cd_timestamp != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(cd_timestamp);
    }
    if (ad_cd_timestamp != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(ad_cd_timestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(level);
    }
    if (times != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(times);
    }
    if (cd_timestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(cd_timestamp);
    }
    if (ad_cd_timestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(ad_cd_timestamp);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoHomeworldFish other) {
    if (other == null) {
      return;
    }
    if (other.level != 0) {
      level = other.level;
    }
    if (other.times != 0) {
      times = other.times;
    }
    if (other.cd_timestamp != 0L) {
      cd_timestamp = other.cd_timestamp;
    }
    if (other.ad_cd_timestamp != 0L) {
      ad_cd_timestamp = other.ad_cd_timestamp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          level = input.ReadInt32();
          break;
        }
        case 16: {
          times = input.ReadInt32();
          break;
        }
        case 24: {
          cd_timestamp = input.ReadInt64();
          break;
        }
        case 32: {
          ad_cd_timestamp = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          level = input.ReadInt32();
          break;
        }
        case 16: {
          times = input.ReadInt32();
          break;
        }
        case 24: {
          cd_timestamp = input.ReadInt64();
          break;
        }
        case 32: {
          ad_cd_timestamp = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoHomeworldStore : pb::IMessage<InfoHomeworldStore>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoHomeworldStore> _parser = new pb::MessageParser<InfoHomeworldStore>(() => new InfoHomeworldStore());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoHomeworldStore> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[48]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldStore() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldStore(InfoHomeworldStore other) : this() {
    capacity_ = other.capacity_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldStore Clone() {
    return new InfoHomeworldStore(this);
  }

  /// <summary>Field number for the "capacity" field.</summary>
  public const int capacityFieldNumber = 1;
  private int capacity_;
  /// <summary>
  /// 仓库容量
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int capacity {
    get { return capacity_; }
    set {
      capacity_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoHomeworldStore);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoHomeworldStore other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (capacity != other.capacity) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (capacity != 0) hash ^= capacity.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (capacity != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(capacity);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (capacity != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(capacity);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (capacity != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(capacity);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoHomeworldStore other) {
    if (other == null) {
      return;
    }
    if (other.capacity != 0) {
      capacity = other.capacity;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          capacity = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          capacity = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoHomeworldAsset : pb::IMessage<InfoHomeworldAsset>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoHomeworldAsset> _parser = new pb::MessageParser<InfoHomeworldAsset>(() => new InfoHomeworldAsset());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoHomeworldAsset> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[49]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldAsset() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldAsset(InfoHomeworldAsset other) : this() {
    curHouse_ = other.curHouse_;
    curCar_ = other.curCar_;
    curPetHouse_ = other.curPetHouse_;
    assets_ = other.assets_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldAsset Clone() {
    return new InfoHomeworldAsset(this);
  }

  /// <summary>Field number for the "curHouse" field.</summary>
  public const int curHouseFieldNumber = 1;
  private int curHouse_;
  /// <summary>
  /// 正在使用的房产
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int curHouse {
    get { return curHouse_; }
    set {
      curHouse_ = value;
    }
  }

  /// <summary>Field number for the "curCar" field.</summary>
  public const int curCarFieldNumber = 2;
  private int curCar_;
  /// <summary>
  /// 正在使用的车子
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int curCar {
    get { return curCar_; }
    set {
      curCar_ = value;
    }
  }

  /// <summary>Field number for the "curPetHouse" field.</summary>
  public const int curPetHouseFieldNumber = 3;
  private int curPetHouse_;
  /// <summary>
  /// 正在使用的宠物屋
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int curPetHouse {
    get { return curPetHouse_; }
    set {
      curPetHouse_ = value;
    }
  }

  /// <summary>Field number for the "assets" field.</summary>
  public const int assetsFieldNumber = 4;
  private static readonly pbc::MapField<int, global::HomeworldAssetItem>.Codec _map_assets_codec
      = new pbc::MapField<int, global::HomeworldAssetItem>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::HomeworldAssetItem.Parser), 34);
  private readonly pbc::MapField<int, global::HomeworldAssetItem> assets_ = new pbc::MapField<int, global::HomeworldAssetItem>();
  /// <summary>
  /// 资产列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::HomeworldAssetItem> assets {
    get { return assets_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoHomeworldAsset);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoHomeworldAsset other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (curHouse != other.curHouse) return false;
    if (curCar != other.curCar) return false;
    if (curPetHouse != other.curPetHouse) return false;
    if (!assets.Equals(other.assets)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (curHouse != 0) hash ^= curHouse.GetHashCode();
    if (curCar != 0) hash ^= curCar.GetHashCode();
    if (curPetHouse != 0) hash ^= curPetHouse.GetHashCode();
    hash ^= assets.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (curHouse != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(curHouse);
    }
    if (curCar != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(curCar);
    }
    if (curPetHouse != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(curPetHouse);
    }
    assets_.WriteTo(output, _map_assets_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (curHouse != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(curHouse);
    }
    if (curCar != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(curCar);
    }
    if (curPetHouse != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(curPetHouse);
    }
    assets_.WriteTo(ref output, _map_assets_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (curHouse != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(curHouse);
    }
    if (curCar != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(curCar);
    }
    if (curPetHouse != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(curPetHouse);
    }
    size += assets_.CalculateSize(_map_assets_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoHomeworldAsset other) {
    if (other == null) {
      return;
    }
    if (other.curHouse != 0) {
      curHouse = other.curHouse;
    }
    if (other.curCar != 0) {
      curCar = other.curCar;
    }
    if (other.curPetHouse != 0) {
      curPetHouse = other.curPetHouse;
    }
    assets_.Add(other.assets_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          curHouse = input.ReadInt32();
          break;
        }
        case 16: {
          curCar = input.ReadInt32();
          break;
        }
        case 24: {
          curPetHouse = input.ReadInt32();
          break;
        }
        case 34: {
          assets_.AddEntriesFrom(input, _map_assets_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          curHouse = input.ReadInt32();
          break;
        }
        case 16: {
          curCar = input.ReadInt32();
          break;
        }
        case 24: {
          curPetHouse = input.ReadInt32();
          break;
        }
        case 34: {
          assets_.AddEntriesFrom(ref input, _map_assets_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class HomeworldAssetItem : pb::IMessage<HomeworldAssetItem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<HomeworldAssetItem> _parser = new pb::MessageParser<HomeworldAssetItem>(() => new HomeworldAssetItem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<HomeworldAssetItem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[50]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HomeworldAssetItem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HomeworldAssetItem(HomeworldAssetItem other) : this() {
    id_ = other.id_;
    status_ = other.status_;
    hasShown_ = other.hasShown_;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public HomeworldAssetItem Clone() {
    return new HomeworldAssetItem(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int idFieldNumber = 1;
  private int id_;
  /// <summary>
  /// 资产id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int statusFieldNumber = 2;
  private global::HomeworldAssetStatus status_ = global::HomeworldAssetStatus.Lock;
  /// <summary>
  /// 资产状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::HomeworldAssetStatus status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "hasShown" field.</summary>
  public const int hasShownFieldNumber = 3;
  private bool hasShown_;
  /// <summary>
  /// 是否展示过恭喜获得
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool hasShown {
    get { return hasShown_; }
    set {
      hasShown_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int typeFieldNumber = 4;
  private int type_;
  /// <summary>
  /// 资产种类1-房子2-车子
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as HomeworldAssetItem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(HomeworldAssetItem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (id != other.id) return false;
    if (status != other.status) return false;
    if (hasShown != other.hasShown) return false;
    if (type != other.type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (id != 0) hash ^= id.GetHashCode();
    if (status != global::HomeworldAssetStatus.Lock) hash ^= status.GetHashCode();
    if (hasShown != false) hash ^= hasShown.GetHashCode();
    if (type != 0) hash ^= type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (status != global::HomeworldAssetStatus.Lock) {
      output.WriteRawTag(16);
      output.WriteEnum((int) status);
    }
    if (hasShown != false) {
      output.WriteRawTag(24);
      output.WriteBool(hasShown);
    }
    if (type != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (status != global::HomeworldAssetStatus.Lock) {
      output.WriteRawTag(16);
      output.WriteEnum((int) status);
    }
    if (hasShown != false) {
      output.WriteRawTag(24);
      output.WriteBool(hasShown);
    }
    if (type != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(id);
    }
    if (status != global::HomeworldAssetStatus.Lock) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) status);
    }
    if (hasShown != false) {
      size += 1 + 1;
    }
    if (type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(HomeworldAssetItem other) {
    if (other == null) {
      return;
    }
    if (other.id != 0) {
      id = other.id;
    }
    if (other.status != global::HomeworldAssetStatus.Lock) {
      status = other.status;
    }
    if (other.hasShown != false) {
      hasShown = other.hasShown;
    }
    if (other.type != 0) {
      type = other.type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          status = (global::HomeworldAssetStatus) input.ReadEnum();
          break;
        }
        case 24: {
          hasShown = input.ReadBool();
          break;
        }
        case 32: {
          type = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          status = (global::HomeworldAssetStatus) input.ReadEnum();
          break;
        }
        case 24: {
          hasShown = input.ReadBool();
          break;
        }
        case 32: {
          type = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoHomeworldPet : pb::IMessage<InfoHomeworldPet>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoHomeworldPet> _parser = new pb::MessageParser<InfoHomeworldPet>(() => new InfoHomeworldPet());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoHomeworldPet> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[51]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldPet() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldPet(InfoHomeworldPet other) : this() {
    pet_id_ = other.pet_id_;
    exp_ = other.exp_;
    level_ = other.level_;
    status_ = other.status_;
    reward_timestamp_ = other.reward_timestamp_;
    feed_timestamp_ = other.feed_timestamp_;
    feed_times_ = other.feed_times_;
    pet_name_ = other.pet_name_;
    item_homeworld_pet_ = other.item_homeworld_pet_ != null ? other.item_homeworld_pet_.Clone() : null;
    reward_homeworld_pet_ = other.reward_homeworld_pet_ != null ? other.reward_homeworld_pet_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldPet Clone() {
    return new InfoHomeworldPet(this);
  }

  /// <summary>Field number for the "pet_id" field.</summary>
  public const int pet_idFieldNumber = 1;
  private int pet_id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int pet_id {
    get { return pet_id_; }
    set {
      pet_id_ = value;
    }
  }

  /// <summary>Field number for the "exp" field.</summary>
  public const int expFieldNumber = 2;
  private int exp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int exp {
    get { return exp_; }
    set {
      exp_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int levelFieldNumber = 3;
  private int level_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int statusFieldNumber = 4;
  private global::HomeworldPetStatus status_ = global::HomeworldPetStatus.Invalid;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::HomeworldPetStatus status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "reward_timestamp" field.</summary>
  public const int reward_timestampFieldNumber = 5;
  private long reward_timestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long reward_timestamp {
    get { return reward_timestamp_; }
    set {
      reward_timestamp_ = value;
    }
  }

  /// <summary>Field number for the "feed_timestamp" field.</summary>
  public const int feed_timestampFieldNumber = 6;
  private long feed_timestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long feed_timestamp {
    get { return feed_timestamp_; }
    set {
      feed_timestamp_ = value;
    }
  }

  /// <summary>Field number for the "feed_times" field.</summary>
  public const int feed_timesFieldNumber = 7;
  private int feed_times_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int feed_times {
    get { return feed_times_; }
    set {
      feed_times_ = value;
    }
  }

  /// <summary>Field number for the "pet_name" field.</summary>
  public const int pet_nameFieldNumber = 8;
  private string pet_name_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string pet_name {
    get { return pet_name_; }
    set {
      pet_name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "item_homeworld_pet" field.</summary>
  public const int item_homeworld_petFieldNumber = 9;
  private global::InfoItemArray item_homeworld_pet_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoItemArray item_homeworld_pet {
    get { return item_homeworld_pet_; }
    set {
      item_homeworld_pet_ = value;
    }
  }

  /// <summary>Field number for the "reward_homeworld_pet" field.</summary>
  public const int reward_homeworld_petFieldNumber = 10;
  private global::InfoItemArray reward_homeworld_pet_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoItemArray reward_homeworld_pet {
    get { return reward_homeworld_pet_; }
    set {
      reward_homeworld_pet_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoHomeworldPet);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoHomeworldPet other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (pet_id != other.pet_id) return false;
    if (exp != other.exp) return false;
    if (level != other.level) return false;
    if (status != other.status) return false;
    if (reward_timestamp != other.reward_timestamp) return false;
    if (feed_timestamp != other.feed_timestamp) return false;
    if (feed_times != other.feed_times) return false;
    if (pet_name != other.pet_name) return false;
    if (!object.Equals(item_homeworld_pet, other.item_homeworld_pet)) return false;
    if (!object.Equals(reward_homeworld_pet, other.reward_homeworld_pet)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (pet_id != 0) hash ^= pet_id.GetHashCode();
    if (exp != 0) hash ^= exp.GetHashCode();
    if (level != 0) hash ^= level.GetHashCode();
    if (status != global::HomeworldPetStatus.Invalid) hash ^= status.GetHashCode();
    if (reward_timestamp != 0L) hash ^= reward_timestamp.GetHashCode();
    if (feed_timestamp != 0L) hash ^= feed_timestamp.GetHashCode();
    if (feed_times != 0) hash ^= feed_times.GetHashCode();
    if (pet_name.Length != 0) hash ^= pet_name.GetHashCode();
    if (item_homeworld_pet_ != null) hash ^= item_homeworld_pet.GetHashCode();
    if (reward_homeworld_pet_ != null) hash ^= reward_homeworld_pet.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (pet_id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(pet_id);
    }
    if (exp != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(exp);
    }
    if (level != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(level);
    }
    if (status != global::HomeworldPetStatus.Invalid) {
      output.WriteRawTag(32);
      output.WriteEnum((int) status);
    }
    if (reward_timestamp != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(reward_timestamp);
    }
    if (feed_timestamp != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(feed_timestamp);
    }
    if (feed_times != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(feed_times);
    }
    if (pet_name.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(pet_name);
    }
    if (item_homeworld_pet_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(item_homeworld_pet);
    }
    if (reward_homeworld_pet_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(reward_homeworld_pet);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (pet_id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(pet_id);
    }
    if (exp != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(exp);
    }
    if (level != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(level);
    }
    if (status != global::HomeworldPetStatus.Invalid) {
      output.WriteRawTag(32);
      output.WriteEnum((int) status);
    }
    if (reward_timestamp != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(reward_timestamp);
    }
    if (feed_timestamp != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(feed_timestamp);
    }
    if (feed_times != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(feed_times);
    }
    if (pet_name.Length != 0) {
      output.WriteRawTag(66);
      output.WriteString(pet_name);
    }
    if (item_homeworld_pet_ != null) {
      output.WriteRawTag(74);
      output.WriteMessage(item_homeworld_pet);
    }
    if (reward_homeworld_pet_ != null) {
      output.WriteRawTag(82);
      output.WriteMessage(reward_homeworld_pet);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (pet_id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(pet_id);
    }
    if (exp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(exp);
    }
    if (level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(level);
    }
    if (status != global::HomeworldPetStatus.Invalid) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) status);
    }
    if (reward_timestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(reward_timestamp);
    }
    if (feed_timestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(feed_timestamp);
    }
    if (feed_times != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(feed_times);
    }
    if (pet_name.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(pet_name);
    }
    if (item_homeworld_pet_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(item_homeworld_pet);
    }
    if (reward_homeworld_pet_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(reward_homeworld_pet);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoHomeworldPet other) {
    if (other == null) {
      return;
    }
    if (other.pet_id != 0) {
      pet_id = other.pet_id;
    }
    if (other.exp != 0) {
      exp = other.exp;
    }
    if (other.level != 0) {
      level = other.level;
    }
    if (other.status != global::HomeworldPetStatus.Invalid) {
      status = other.status;
    }
    if (other.reward_timestamp != 0L) {
      reward_timestamp = other.reward_timestamp;
    }
    if (other.feed_timestamp != 0L) {
      feed_timestamp = other.feed_timestamp;
    }
    if (other.feed_times != 0) {
      feed_times = other.feed_times;
    }
    if (other.pet_name.Length != 0) {
      pet_name = other.pet_name;
    }
    if (other.item_homeworld_pet_ != null) {
      if (item_homeworld_pet_ == null) {
        item_homeworld_pet = new global::InfoItemArray();
      }
      item_homeworld_pet.MergeFrom(other.item_homeworld_pet);
    }
    if (other.reward_homeworld_pet_ != null) {
      if (reward_homeworld_pet_ == null) {
        reward_homeworld_pet = new global::InfoItemArray();
      }
      reward_homeworld_pet.MergeFrom(other.reward_homeworld_pet);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          pet_id = input.ReadInt32();
          break;
        }
        case 16: {
          exp = input.ReadInt32();
          break;
        }
        case 24: {
          level = input.ReadInt32();
          break;
        }
        case 32: {
          status = (global::HomeworldPetStatus) input.ReadEnum();
          break;
        }
        case 40: {
          reward_timestamp = input.ReadInt64();
          break;
        }
        case 48: {
          feed_timestamp = input.ReadInt64();
          break;
        }
        case 56: {
          feed_times = input.ReadInt32();
          break;
        }
        case 66: {
          pet_name = input.ReadString();
          break;
        }
        case 74: {
          if (item_homeworld_pet_ == null) {
            item_homeworld_pet = new global::InfoItemArray();
          }
          input.ReadMessage(item_homeworld_pet);
          break;
        }
        case 82: {
          if (reward_homeworld_pet_ == null) {
            reward_homeworld_pet = new global::InfoItemArray();
          }
          input.ReadMessage(reward_homeworld_pet);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          pet_id = input.ReadInt32();
          break;
        }
        case 16: {
          exp = input.ReadInt32();
          break;
        }
        case 24: {
          level = input.ReadInt32();
          break;
        }
        case 32: {
          status = (global::HomeworldPetStatus) input.ReadEnum();
          break;
        }
        case 40: {
          reward_timestamp = input.ReadInt64();
          break;
        }
        case 48: {
          feed_timestamp = input.ReadInt64();
          break;
        }
        case 56: {
          feed_times = input.ReadInt32();
          break;
        }
        case 66: {
          pet_name = input.ReadString();
          break;
        }
        case 74: {
          if (item_homeworld_pet_ == null) {
            item_homeworld_pet = new global::InfoItemArray();
          }
          input.ReadMessage(item_homeworld_pet);
          break;
        }
        case 82: {
          if (reward_homeworld_pet_ == null) {
            reward_homeworld_pet = new global::InfoItemArray();
          }
          input.ReadMessage(reward_homeworld_pet);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoHomeworldSystem : pb::IMessage<InfoHomeworldSystem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoHomeworldSystem> _parser = new pb::MessageParser<InfoHomeworldSystem>(() => new InfoHomeworldSystem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoHomeworldSystem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[52]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldSystem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldSystem(InfoHomeworldSystem other) : this() {
    homeworld_unlock_ = other.homeworld_unlock_ != null ? other.homeworld_unlock_.Clone() : null;
    flowerbeds_ = other.flowerbeds_.Clone();
    homeworld_fish_ = other.homeworld_fish_ != null ? other.homeworld_fish_.Clone() : null;
    homeworld_store_ = other.homeworld_store_ != null ? other.homeworld_store_.Clone() : null;
    homeworld_asset_ = other.homeworld_asset_ != null ? other.homeworld_asset_.Clone() : null;
    homeworld_reward_list_ = other.homeworld_reward_list_.Clone();
    homeworld_pet_ = other.homeworld_pet_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoHomeworldSystem Clone() {
    return new InfoHomeworldSystem(this);
  }

  /// <summary>Field number for the "homeworld_unlock" field.</summary>
  public const int homeworld_unlockFieldNumber = 1;
  private global::InfoHomeworldUnlock homeworld_unlock_;
  /// <summary>
  /// 家园入口解锁
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoHomeworldUnlock homeworld_unlock {
    get { return homeworld_unlock_; }
    set {
      homeworld_unlock_ = value;
    }
  }

  /// <summary>Field number for the "flowerbeds" field.</summary>
  public const int flowerbedsFieldNumber = 2;
  private static readonly pb::FieldCodec<global::InfoHomeworldFlowerbed> _repeated_flowerbeds_codec
      = pb::FieldCodec.ForMessage(18, global::InfoHomeworldFlowerbed.Parser);
  private readonly pbc::RepeatedField<global::InfoHomeworldFlowerbed> flowerbeds_ = new pbc::RepeatedField<global::InfoHomeworldFlowerbed>();
  /// <summary>
  /// 花圃
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::InfoHomeworldFlowerbed> flowerbeds {
    get { return flowerbeds_; }
  }

  /// <summary>Field number for the "homeworld_fish" field.</summary>
  public const int homeworld_fishFieldNumber = 3;
  private global::InfoHomeworldFish homeworld_fish_;
  /// <summary>
  /// 钓鱼
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoHomeworldFish homeworld_fish {
    get { return homeworld_fish_; }
    set {
      homeworld_fish_ = value;
    }
  }

  /// <summary>Field number for the "homeworld_store" field.</summary>
  public const int homeworld_storeFieldNumber = 4;
  private global::InfoHomeworldStore homeworld_store_;
  /// <summary>
  /// 仓库
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoHomeworldStore homeworld_store {
    get { return homeworld_store_; }
    set {
      homeworld_store_ = value;
    }
  }

  /// <summary>Field number for the "homeworld_asset" field.</summary>
  public const int homeworld_assetFieldNumber = 5;
  private global::InfoHomeworldAsset homeworld_asset_;
  /// <summary>
  /// 资产
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoHomeworldAsset homeworld_asset {
    get { return homeworld_asset_; }
    set {
      homeworld_asset_ = value;
    }
  }

  /// <summary>Field number for the "homeworld_reward_list" field.</summary>
  public const int homeworld_reward_listFieldNumber = 6;
  private static readonly pb::FieldCodec<global::InfoItemArray> _repeated_homeworld_reward_list_codec
      = pb::FieldCodec.ForMessage(50, global::InfoItemArray.Parser);
  private readonly pbc::RepeatedField<global::InfoItemArray> homeworld_reward_list_ = new pbc::RepeatedField<global::InfoItemArray>();
  /// <summary>
  /// 奖励堆
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::InfoItemArray> homeworld_reward_list {
    get { return homeworld_reward_list_; }
  }

  /// <summary>Field number for the "homeworld_pet" field.</summary>
  public const int homeworld_petFieldNumber = 7;
  private static readonly pb::FieldCodec<global::InfoHomeworldPet> _repeated_homeworld_pet_codec
      = pb::FieldCodec.ForMessage(58, global::InfoHomeworldPet.Parser);
  private readonly pbc::RepeatedField<global::InfoHomeworldPet> homeworld_pet_ = new pbc::RepeatedField<global::InfoHomeworldPet>();
  /// <summary>
  /// 宠物
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::InfoHomeworldPet> homeworld_pet {
    get { return homeworld_pet_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoHomeworldSystem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoHomeworldSystem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(homeworld_unlock, other.homeworld_unlock)) return false;
    if(!flowerbeds_.Equals(other.flowerbeds_)) return false;
    if (!object.Equals(homeworld_fish, other.homeworld_fish)) return false;
    if (!object.Equals(homeworld_store, other.homeworld_store)) return false;
    if (!object.Equals(homeworld_asset, other.homeworld_asset)) return false;
    if(!homeworld_reward_list_.Equals(other.homeworld_reward_list_)) return false;
    if(!homeworld_pet_.Equals(other.homeworld_pet_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (homeworld_unlock_ != null) hash ^= homeworld_unlock.GetHashCode();
    hash ^= flowerbeds_.GetHashCode();
    if (homeworld_fish_ != null) hash ^= homeworld_fish.GetHashCode();
    if (homeworld_store_ != null) hash ^= homeworld_store.GetHashCode();
    if (homeworld_asset_ != null) hash ^= homeworld_asset.GetHashCode();
    hash ^= homeworld_reward_list_.GetHashCode();
    hash ^= homeworld_pet_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (homeworld_unlock_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(homeworld_unlock);
    }
    flowerbeds_.WriteTo(output, _repeated_flowerbeds_codec);
    if (homeworld_fish_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(homeworld_fish);
    }
    if (homeworld_store_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(homeworld_store);
    }
    if (homeworld_asset_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(homeworld_asset);
    }
    homeworld_reward_list_.WriteTo(output, _repeated_homeworld_reward_list_codec);
    homeworld_pet_.WriteTo(output, _repeated_homeworld_pet_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (homeworld_unlock_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(homeworld_unlock);
    }
    flowerbeds_.WriteTo(ref output, _repeated_flowerbeds_codec);
    if (homeworld_fish_ != null) {
      output.WriteRawTag(26);
      output.WriteMessage(homeworld_fish);
    }
    if (homeworld_store_ != null) {
      output.WriteRawTag(34);
      output.WriteMessage(homeworld_store);
    }
    if (homeworld_asset_ != null) {
      output.WriteRawTag(42);
      output.WriteMessage(homeworld_asset);
    }
    homeworld_reward_list_.WriteTo(ref output, _repeated_homeworld_reward_list_codec);
    homeworld_pet_.WriteTo(ref output, _repeated_homeworld_pet_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (homeworld_unlock_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(homeworld_unlock);
    }
    size += flowerbeds_.CalculateSize(_repeated_flowerbeds_codec);
    if (homeworld_fish_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(homeworld_fish);
    }
    if (homeworld_store_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(homeworld_store);
    }
    if (homeworld_asset_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(homeworld_asset);
    }
    size += homeworld_reward_list_.CalculateSize(_repeated_homeworld_reward_list_codec);
    size += homeworld_pet_.CalculateSize(_repeated_homeworld_pet_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoHomeworldSystem other) {
    if (other == null) {
      return;
    }
    if (other.homeworld_unlock_ != null) {
      if (homeworld_unlock_ == null) {
        homeworld_unlock = new global::InfoHomeworldUnlock();
      }
      homeworld_unlock.MergeFrom(other.homeworld_unlock);
    }
    flowerbeds_.Add(other.flowerbeds_);
    if (other.homeworld_fish_ != null) {
      if (homeworld_fish_ == null) {
        homeworld_fish = new global::InfoHomeworldFish();
      }
      homeworld_fish.MergeFrom(other.homeworld_fish);
    }
    if (other.homeworld_store_ != null) {
      if (homeworld_store_ == null) {
        homeworld_store = new global::InfoHomeworldStore();
      }
      homeworld_store.MergeFrom(other.homeworld_store);
    }
    if (other.homeworld_asset_ != null) {
      if (homeworld_asset_ == null) {
        homeworld_asset = new global::InfoHomeworldAsset();
      }
      homeworld_asset.MergeFrom(other.homeworld_asset);
    }
    homeworld_reward_list_.Add(other.homeworld_reward_list_);
    homeworld_pet_.Add(other.homeworld_pet_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (homeworld_unlock_ == null) {
            homeworld_unlock = new global::InfoHomeworldUnlock();
          }
          input.ReadMessage(homeworld_unlock);
          break;
        }
        case 18: {
          flowerbeds_.AddEntriesFrom(input, _repeated_flowerbeds_codec);
          break;
        }
        case 26: {
          if (homeworld_fish_ == null) {
            homeworld_fish = new global::InfoHomeworldFish();
          }
          input.ReadMessage(homeworld_fish);
          break;
        }
        case 34: {
          if (homeworld_store_ == null) {
            homeworld_store = new global::InfoHomeworldStore();
          }
          input.ReadMessage(homeworld_store);
          break;
        }
        case 42: {
          if (homeworld_asset_ == null) {
            homeworld_asset = new global::InfoHomeworldAsset();
          }
          input.ReadMessage(homeworld_asset);
          break;
        }
        case 50: {
          homeworld_reward_list_.AddEntriesFrom(input, _repeated_homeworld_reward_list_codec);
          break;
        }
        case 58: {
          homeworld_pet_.AddEntriesFrom(input, _repeated_homeworld_pet_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (homeworld_unlock_ == null) {
            homeworld_unlock = new global::InfoHomeworldUnlock();
          }
          input.ReadMessage(homeworld_unlock);
          break;
        }
        case 18: {
          flowerbeds_.AddEntriesFrom(ref input, _repeated_flowerbeds_codec);
          break;
        }
        case 26: {
          if (homeworld_fish_ == null) {
            homeworld_fish = new global::InfoHomeworldFish();
          }
          input.ReadMessage(homeworld_fish);
          break;
        }
        case 34: {
          if (homeworld_store_ == null) {
            homeworld_store = new global::InfoHomeworldStore();
          }
          input.ReadMessage(homeworld_store);
          break;
        }
        case 42: {
          if (homeworld_asset_ == null) {
            homeworld_asset = new global::InfoHomeworldAsset();
          }
          input.ReadMessage(homeworld_asset);
          break;
        }
        case 50: {
          homeworld_reward_list_.AddEntriesFrom(ref input, _repeated_homeworld_reward_list_codec);
          break;
        }
        case 58: {
          homeworld_pet_.AddEntriesFrom(ref input, _repeated_homeworld_pet_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoVipGame : pb::IMessage<InfoVipGame>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoVipGame> _parser = new pb::MessageParser<InfoVipGame>(() => new InfoVipGame());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoVipGame> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[53]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoVipGame() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoVipGame(InfoVipGame other) : this() {
    isPassNewMission_ = other.isPassNewMission_;
    vipDataList_ = other.vipDataList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoVipGame Clone() {
    return new InfoVipGame(this);
  }

  /// <summary>Field number for the "isPassNewMission" field.</summary>
  public const int isPassNewMissionFieldNumber = 1;
  private int isPassNewMission_;
  /// <summary>
  /// 是否通关新手关卡
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int isPassNewMission {
    get { return isPassNewMission_; }
    set {
      isPassNewMission_ = value;
    }
  }

  /// <summary>Field number for the "vipDataList" field.</summary>
  public const int vipDataListFieldNumber = 2;
  private static readonly pb::FieldCodec<global::VipData> _repeated_vipDataList_codec
      = pb::FieldCodec.ForMessage(18, global::VipData.Parser);
  private readonly pbc::RepeatedField<global::VipData> vipDataList_ = new pbc::RepeatedField<global::VipData>();
  /// <summary>
  /// Vip数据列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::VipData> vipDataList {
    get { return vipDataList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoVipGame);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoVipGame other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (isPassNewMission != other.isPassNewMission) return false;
    if(!vipDataList_.Equals(other.vipDataList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (isPassNewMission != 0) hash ^= isPassNewMission.GetHashCode();
    hash ^= vipDataList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (isPassNewMission != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(isPassNewMission);
    }
    vipDataList_.WriteTo(output, _repeated_vipDataList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (isPassNewMission != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(isPassNewMission);
    }
    vipDataList_.WriteTo(ref output, _repeated_vipDataList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (isPassNewMission != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(isPassNewMission);
    }
    size += vipDataList_.CalculateSize(_repeated_vipDataList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoVipGame other) {
    if (other == null) {
      return;
    }
    if (other.isPassNewMission != 0) {
      isPassNewMission = other.isPassNewMission;
    }
    vipDataList_.Add(other.vipDataList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          isPassNewMission = input.ReadInt32();
          break;
        }
        case 18: {
          vipDataList_.AddEntriesFrom(input, _repeated_vipDataList_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          isPassNewMission = input.ReadInt32();
          break;
        }
        case 18: {
          vipDataList_.AddEntriesFrom(ref input, _repeated_vipDataList_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class VipData : pb::IMessage<VipData>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<VipData> _parser = new pb::MessageParser<VipData>(() => new VipData());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<VipData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[54]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VipData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VipData(VipData other) : this() {
    uid_ = other.uid_;
    level_ = other.level_;
    favorability_ = other.favorability_;
    isUnlock_ = other.isUnlock_;
    energy_ = other.energy_;
    recoverTimeStamp_ = other.recoverTimeStamp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public VipData Clone() {
    return new VipData(this);
  }

  /// <summary>Field number for the "uid" field.</summary>
  public const int uidFieldNumber = 1;
  private int uid_;
  /// <summary>
  /// vip的id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int uid {
    get { return uid_; }
    set {
      uid_ = value;
    }
  }

  /// <summary>Field number for the "level" field.</summary>
  public const int levelFieldNumber = 2;
  private int level_;
  /// <summary>
  /// vip的等级
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int level {
    get { return level_; }
    set {
      level_ = value;
    }
  }

  /// <summary>Field number for the "favorability" field.</summary>
  public const int favorabilityFieldNumber = 3;
  private int favorability_;
  /// <summary>
  /// vip好感度
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int favorability {
    get { return favorability_; }
    set {
      favorability_ = value;
    }
  }

  /// <summary>Field number for the "isUnlock" field.</summary>
  public const int isUnlockFieldNumber = 4;
  private int isUnlock_;
  /// <summary>
  /// 是否解锁
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int isUnlock {
    get { return isUnlock_; }
    set {
      isUnlock_ = value;
    }
  }

  /// <summary>Field number for the "energy" field.</summary>
  public const int energyFieldNumber = 5;
  private int energy_;
  /// <summary>
  /// 体力
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int energy {
    get { return energy_; }
    set {
      energy_ = value;
    }
  }

  /// <summary>Field number for the "recoverTimeStamp" field.</summary>
  public const int recoverTimeStampFieldNumber = 6;
  private long recoverTimeStamp_;
  /// <summary>
  /// 体力恢复时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long recoverTimeStamp {
    get { return recoverTimeStamp_; }
    set {
      recoverTimeStamp_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as VipData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(VipData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (uid != other.uid) return false;
    if (level != other.level) return false;
    if (favorability != other.favorability) return false;
    if (isUnlock != other.isUnlock) return false;
    if (energy != other.energy) return false;
    if (recoverTimeStamp != other.recoverTimeStamp) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (uid != 0) hash ^= uid.GetHashCode();
    if (level != 0) hash ^= level.GetHashCode();
    if (favorability != 0) hash ^= favorability.GetHashCode();
    if (isUnlock != 0) hash ^= isUnlock.GetHashCode();
    if (energy != 0) hash ^= energy.GetHashCode();
    if (recoverTimeStamp != 0L) hash ^= recoverTimeStamp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(uid);
    }
    if (level != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(level);
    }
    if (favorability != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(favorability);
    }
    if (isUnlock != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(isUnlock);
    }
    if (energy != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(energy);
    }
    if (recoverTimeStamp != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(recoverTimeStamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (uid != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(uid);
    }
    if (level != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(level);
    }
    if (favorability != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(favorability);
    }
    if (isUnlock != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(isUnlock);
    }
    if (energy != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(energy);
    }
    if (recoverTimeStamp != 0L) {
      output.WriteRawTag(48);
      output.WriteInt64(recoverTimeStamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (uid != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(uid);
    }
    if (level != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(level);
    }
    if (favorability != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(favorability);
    }
    if (isUnlock != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(isUnlock);
    }
    if (energy != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(energy);
    }
    if (recoverTimeStamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(recoverTimeStamp);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(VipData other) {
    if (other == null) {
      return;
    }
    if (other.uid != 0) {
      uid = other.uid;
    }
    if (other.level != 0) {
      level = other.level;
    }
    if (other.favorability != 0) {
      favorability = other.favorability;
    }
    if (other.isUnlock != 0) {
      isUnlock = other.isUnlock;
    }
    if (other.energy != 0) {
      energy = other.energy;
    }
    if (other.recoverTimeStamp != 0L) {
      recoverTimeStamp = other.recoverTimeStamp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          uid = input.ReadInt32();
          break;
        }
        case 16: {
          level = input.ReadInt32();
          break;
        }
        case 24: {
          favorability = input.ReadInt32();
          break;
        }
        case 32: {
          isUnlock = input.ReadInt32();
          break;
        }
        case 40: {
          energy = input.ReadInt32();
          break;
        }
        case 48: {
          recoverTimeStamp = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          uid = input.ReadInt32();
          break;
        }
        case 16: {
          level = input.ReadInt32();
          break;
        }
        case 24: {
          favorability = input.ReadInt32();
          break;
        }
        case 32: {
          isUnlock = input.ReadInt32();
          break;
        }
        case 40: {
          energy = input.ReadInt32();
          break;
        }
        case 48: {
          recoverTimeStamp = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoItemSystem : pb::IMessage<InfoItemSystem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoItemSystem> _parser = new pb::MessageParser<InfoItemSystem>(() => new InfoItemSystem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoItemSystem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[55]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoItemSystem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoItemSystem(InfoItemSystem other) : this() {
    item_homeworld_ = other.item_homeworld_ != null ? other.item_homeworld_.Clone() : null;
    item_homeworld_GoodsShelf_ = other.item_homeworld_GoodsShelf_.Clone();
    item_homeworld_pet_bag_ = other.item_homeworld_pet_bag_.Clone();
    item_homeworld_pet_reward_ = other.item_homeworld_pet_reward_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoItemSystem Clone() {
    return new InfoItemSystem(this);
  }

  /// <summary>Field number for the "item_homeworld" field.</summary>
  public const int item_homeworldFieldNumber = 1;
  private global::InfoItemArray item_homeworld_;
  /// <summary>
  /// 家园仓库背包
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoItemArray item_homeworld {
    get { return item_homeworld_; }
    set {
      item_homeworld_ = value;
    }
  }

  /// <summary>Field number for the "item_homeworld_GoodsShelf" field.</summary>
  public const int item_homeworld_GoodsShelfFieldNumber = 2;
  private static readonly pb::FieldCodec<global::InfoItem> _repeated_item_homeworld_GoodsShelf_codec
      = pb::FieldCodec.ForMessage(18, global::InfoItem.Parser);
  private readonly pbc::RepeatedField<global::InfoItem> item_homeworld_GoodsShelf_ = new pbc::RepeatedField<global::InfoItem>();
  /// <summary>
  /// 家园货架背包
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::InfoItem> item_homeworld_GoodsShelf {
    get { return item_homeworld_GoodsShelf_; }
  }

  /// <summary>Field number for the "item_homeworld_pet_bag" field.</summary>
  public const int item_homeworld_pet_bagFieldNumber = 3;
  private static readonly pb::FieldCodec<global::InfoItemArray> _repeated_item_homeworld_pet_bag_codec
      = pb::FieldCodec.ForMessage(26, global::InfoItemArray.Parser);
  private readonly pbc::RepeatedField<global::InfoItemArray> item_homeworld_pet_bag_ = new pbc::RepeatedField<global::InfoItemArray>();
  /// <summary>
  /// 家园宠物背包
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::InfoItemArray> item_homeworld_pet_bag {
    get { return item_homeworld_pet_bag_; }
  }

  /// <summary>Field number for the "item_homeworld_pet_reward" field.</summary>
  public const int item_homeworld_pet_rewardFieldNumber = 4;
  private static readonly pb::FieldCodec<global::InfoItemArray> _repeated_item_homeworld_pet_reward_codec
      = pb::FieldCodec.ForMessage(34, global::InfoItemArray.Parser);
  private readonly pbc::RepeatedField<global::InfoItemArray> item_homeworld_pet_reward_ = new pbc::RepeatedField<global::InfoItemArray>();
  /// <summary>
  /// 家园宠物奖励背包
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::InfoItemArray> item_homeworld_pet_reward {
    get { return item_homeworld_pet_reward_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoItemSystem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoItemSystem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(item_homeworld, other.item_homeworld)) return false;
    if(!item_homeworld_GoodsShelf_.Equals(other.item_homeworld_GoodsShelf_)) return false;
    if(!item_homeworld_pet_bag_.Equals(other.item_homeworld_pet_bag_)) return false;
    if(!item_homeworld_pet_reward_.Equals(other.item_homeworld_pet_reward_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (item_homeworld_ != null) hash ^= item_homeworld.GetHashCode();
    hash ^= item_homeworld_GoodsShelf_.GetHashCode();
    hash ^= item_homeworld_pet_bag_.GetHashCode();
    hash ^= item_homeworld_pet_reward_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (item_homeworld_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(item_homeworld);
    }
    item_homeworld_GoodsShelf_.WriteTo(output, _repeated_item_homeworld_GoodsShelf_codec);
    item_homeworld_pet_bag_.WriteTo(output, _repeated_item_homeworld_pet_bag_codec);
    item_homeworld_pet_reward_.WriteTo(output, _repeated_item_homeworld_pet_reward_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (item_homeworld_ != null) {
      output.WriteRawTag(10);
      output.WriteMessage(item_homeworld);
    }
    item_homeworld_GoodsShelf_.WriteTo(ref output, _repeated_item_homeworld_GoodsShelf_codec);
    item_homeworld_pet_bag_.WriteTo(ref output, _repeated_item_homeworld_pet_bag_codec);
    item_homeworld_pet_reward_.WriteTo(ref output, _repeated_item_homeworld_pet_reward_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (item_homeworld_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(item_homeworld);
    }
    size += item_homeworld_GoodsShelf_.CalculateSize(_repeated_item_homeworld_GoodsShelf_codec);
    size += item_homeworld_pet_bag_.CalculateSize(_repeated_item_homeworld_pet_bag_codec);
    size += item_homeworld_pet_reward_.CalculateSize(_repeated_item_homeworld_pet_reward_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoItemSystem other) {
    if (other == null) {
      return;
    }
    if (other.item_homeworld_ != null) {
      if (item_homeworld_ == null) {
        item_homeworld = new global::InfoItemArray();
      }
      item_homeworld.MergeFrom(other.item_homeworld);
    }
    item_homeworld_GoodsShelf_.Add(other.item_homeworld_GoodsShelf_);
    item_homeworld_pet_bag_.Add(other.item_homeworld_pet_bag_);
    item_homeworld_pet_reward_.Add(other.item_homeworld_pet_reward_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          if (item_homeworld_ == null) {
            item_homeworld = new global::InfoItemArray();
          }
          input.ReadMessage(item_homeworld);
          break;
        }
        case 18: {
          item_homeworld_GoodsShelf_.AddEntriesFrom(input, _repeated_item_homeworld_GoodsShelf_codec);
          break;
        }
        case 26: {
          item_homeworld_pet_bag_.AddEntriesFrom(input, _repeated_item_homeworld_pet_bag_codec);
          break;
        }
        case 34: {
          item_homeworld_pet_reward_.AddEntriesFrom(input, _repeated_item_homeworld_pet_reward_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          if (item_homeworld_ == null) {
            item_homeworld = new global::InfoItemArray();
          }
          input.ReadMessage(item_homeworld);
          break;
        }
        case 18: {
          item_homeworld_GoodsShelf_.AddEntriesFrom(ref input, _repeated_item_homeworld_GoodsShelf_codec);
          break;
        }
        case 26: {
          item_homeworld_pet_bag_.AddEntriesFrom(ref input, _repeated_item_homeworld_pet_bag_codec);
          break;
        }
        case 34: {
          item_homeworld_pet_reward_.AddEntriesFrom(ref input, _repeated_item_homeworld_pet_reward_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoItem : pb::IMessage<InfoItem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoItem> _parser = new pb::MessageParser<InfoItem>(() => new InfoItem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoItem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[56]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoItem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoItem(InfoItem other) : this() {
    id_ = other.id_;
    count_ = other.count_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoItem Clone() {
    return new InfoItem(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int idFieldNumber = 1;
  private int id_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "count" field.</summary>
  public const int countFieldNumber = 3;
  private int count_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int count {
    get { return count_; }
    set {
      count_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoItem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoItem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (id != other.id) return false;
    if (count != other.count) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (id != 0) hash ^= id.GetHashCode();
    if (count != 0) hash ^= count.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (count != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(count);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (count != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(count);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(id);
    }
    if (count != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(count);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoItem other) {
    if (other == null) {
      return;
    }
    if (other.id != 0) {
      id = other.id;
    }
    if (other.count != 0) {
      count = other.count;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 24: {
          count = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 24: {
          count = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoItemArray : pb::IMessage<InfoItemArray>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoItemArray> _parser = new pb::MessageParser<InfoItemArray>(() => new InfoItemArray());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoItemArray> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[57]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoItemArray() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoItemArray(InfoItemArray other) : this() {
    item_list_ = other.item_list_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoItemArray Clone() {
    return new InfoItemArray(this);
  }

  /// <summary>Field number for the "item_list" field.</summary>
  public const int item_listFieldNumber = 1;
  private static readonly pb::FieldCodec<global::InfoItem> _repeated_item_list_codec
      = pb::FieldCodec.ForMessage(10, global::InfoItem.Parser);
  private readonly pbc::RepeatedField<global::InfoItem> item_list_ = new pbc::RepeatedField<global::InfoItem>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::InfoItem> item_list {
    get { return item_list_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoItemArray);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoItemArray other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!item_list_.Equals(other.item_list_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= item_list_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    item_list_.WriteTo(output, _repeated_item_list_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    item_list_.WriteTo(ref output, _repeated_item_list_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += item_list_.CalculateSize(_repeated_item_list_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoItemArray other) {
    if (other == null) {
      return;
    }
    item_list_.Add(other.item_list_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          item_list_.AddEntriesFrom(input, _repeated_item_list_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          item_list_.AddEntriesFrom(ref input, _repeated_item_list_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoItemMap : pb::IMessage<InfoItemMap>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoItemMap> _parser = new pb::MessageParser<InfoItemMap>(() => new InfoItemMap());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoItemMap> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[58]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoItemMap() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoItemMap(InfoItemMap other) : this() {
    item_map_ = other.item_map_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoItemMap Clone() {
    return new InfoItemMap(this);
  }

  /// <summary>Field number for the "item_map" field.</summary>
  public const int item_mapFieldNumber = 1;
  private static readonly pbc::MapField<int, global::InfoItem>.Codec _map_item_map_codec
      = new pbc::MapField<int, global::InfoItem>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::InfoItem.Parser), 10);
  private readonly pbc::MapField<int, global::InfoItem> item_map_ = new pbc::MapField<int, global::InfoItem>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::InfoItem> item_map {
    get { return item_map_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoItemMap);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoItemMap other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!item_map.Equals(other.item_map)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= item_map.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    item_map_.WriteTo(output, _map_item_map_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    item_map_.WriteTo(ref output, _map_item_map_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += item_map_.CalculateSize(_map_item_map_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoItemMap other) {
    if (other == null) {
      return;
    }
    item_map_.Add(other.item_map_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          item_map_.AddEntriesFrom(input, _map_item_map_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          item_map_.AddEntriesFrom(ref input, _map_item_map_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoGiftCode : pb::IMessage<InfoGiftCode>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoGiftCode> _parser = new pb::MessageParser<InfoGiftCode>(() => new InfoGiftCode());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoGiftCode> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[59]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGiftCode() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGiftCode(InfoGiftCode other) : this() {
    used_code_ = other.used_code_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoGiftCode Clone() {
    return new InfoGiftCode(this);
  }

  /// <summary>Field number for the "used_code" field.</summary>
  public const int used_codeFieldNumber = 1;
  private static readonly pbc::MapField<int, string>.Codec _map_used_code_codec
      = new pbc::MapField<int, string>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForString(18, ""), 10);
  private readonly pbc::MapField<int, string> used_code_ = new pbc::MapField<int, string>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, string> used_code {
    get { return used_code_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoGiftCode);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoGiftCode other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!used_code.Equals(other.used_code)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= used_code.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    used_code_.WriteTo(output, _map_used_code_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    used_code_.WriteTo(ref output, _map_used_code_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += used_code_.CalculateSize(_map_used_code_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoGiftCode other) {
    if (other == null) {
      return;
    }
    used_code_.Add(other.used_code_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          used_code_.AddEntriesFrom(input, _map_used_code_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          used_code_.AddEntriesFrom(ref input, _map_used_code_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoRoulette : pb::IMessage<InfoRoulette>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoRoulette> _parser = new pb::MessageParser<InfoRoulette>(() => new InfoRoulette());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoRoulette> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[60]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoRoulette() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoRoulette(InfoRoulette other) : this() {
    todayAppearCount_ = other.todayAppearCount_;
    todayGainedCount_ = other.todayGainedCount_;
    lastAppearTimestamp_ = other.lastAppearTimestamp_;
    lastDisappearTimestamp_ = other.lastDisappearTimestamp_;
    lastRewardTimestamp_ = other.lastRewardTimestamp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoRoulette Clone() {
    return new InfoRoulette(this);
  }

  /// <summary>Field number for the "todayAppearCount" field.</summary>
  public const int todayAppearCountFieldNumber = 1;
  private int todayAppearCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int todayAppearCount {
    get { return todayAppearCount_; }
    set {
      todayAppearCount_ = value;
    }
  }

  /// <summary>Field number for the "todayGainedCount" field.</summary>
  public const int todayGainedCountFieldNumber = 2;
  private int todayGainedCount_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int todayGainedCount {
    get { return todayGainedCount_; }
    set {
      todayGainedCount_ = value;
    }
  }

  /// <summary>Field number for the "lastAppearTimestamp" field.</summary>
  public const int lastAppearTimestampFieldNumber = 3;
  private long lastAppearTimestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long lastAppearTimestamp {
    get { return lastAppearTimestamp_; }
    set {
      lastAppearTimestamp_ = value;
    }
  }

  /// <summary>Field number for the "lastDisappearTimestamp" field.</summary>
  public const int lastDisappearTimestampFieldNumber = 4;
  private long lastDisappearTimestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long lastDisappearTimestamp {
    get { return lastDisappearTimestamp_; }
    set {
      lastDisappearTimestamp_ = value;
    }
  }

  /// <summary>Field number for the "lastRewardTimestamp" field.</summary>
  public const int lastRewardTimestampFieldNumber = 5;
  private long lastRewardTimestamp_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long lastRewardTimestamp {
    get { return lastRewardTimestamp_; }
    set {
      lastRewardTimestamp_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoRoulette);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoRoulette other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (todayAppearCount != other.todayAppearCount) return false;
    if (todayGainedCount != other.todayGainedCount) return false;
    if (lastAppearTimestamp != other.lastAppearTimestamp) return false;
    if (lastDisappearTimestamp != other.lastDisappearTimestamp) return false;
    if (lastRewardTimestamp != other.lastRewardTimestamp) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (todayAppearCount != 0) hash ^= todayAppearCount.GetHashCode();
    if (todayGainedCount != 0) hash ^= todayGainedCount.GetHashCode();
    if (lastAppearTimestamp != 0L) hash ^= lastAppearTimestamp.GetHashCode();
    if (lastDisappearTimestamp != 0L) hash ^= lastDisappearTimestamp.GetHashCode();
    if (lastRewardTimestamp != 0L) hash ^= lastRewardTimestamp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (todayAppearCount != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(todayAppearCount);
    }
    if (todayGainedCount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(todayGainedCount);
    }
    if (lastAppearTimestamp != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(lastAppearTimestamp);
    }
    if (lastDisappearTimestamp != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(lastDisappearTimestamp);
    }
    if (lastRewardTimestamp != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(lastRewardTimestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (todayAppearCount != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(todayAppearCount);
    }
    if (todayGainedCount != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(todayGainedCount);
    }
    if (lastAppearTimestamp != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(lastAppearTimestamp);
    }
    if (lastDisappearTimestamp != 0L) {
      output.WriteRawTag(32);
      output.WriteInt64(lastDisappearTimestamp);
    }
    if (lastRewardTimestamp != 0L) {
      output.WriteRawTag(40);
      output.WriteInt64(lastRewardTimestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (todayAppearCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(todayAppearCount);
    }
    if (todayGainedCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(todayGainedCount);
    }
    if (lastAppearTimestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(lastAppearTimestamp);
    }
    if (lastDisappearTimestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(lastDisappearTimestamp);
    }
    if (lastRewardTimestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(lastRewardTimestamp);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoRoulette other) {
    if (other == null) {
      return;
    }
    if (other.todayAppearCount != 0) {
      todayAppearCount = other.todayAppearCount;
    }
    if (other.todayGainedCount != 0) {
      todayGainedCount = other.todayGainedCount;
    }
    if (other.lastAppearTimestamp != 0L) {
      lastAppearTimestamp = other.lastAppearTimestamp;
    }
    if (other.lastDisappearTimestamp != 0L) {
      lastDisappearTimestamp = other.lastDisappearTimestamp;
    }
    if (other.lastRewardTimestamp != 0L) {
      lastRewardTimestamp = other.lastRewardTimestamp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          todayAppearCount = input.ReadInt32();
          break;
        }
        case 16: {
          todayGainedCount = input.ReadInt32();
          break;
        }
        case 24: {
          lastAppearTimestamp = input.ReadInt64();
          break;
        }
        case 32: {
          lastDisappearTimestamp = input.ReadInt64();
          break;
        }
        case 40: {
          lastRewardTimestamp = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          todayAppearCount = input.ReadInt32();
          break;
        }
        case 16: {
          todayGainedCount = input.ReadInt32();
          break;
        }
        case 24: {
          lastAppearTimestamp = input.ReadInt64();
          break;
        }
        case 32: {
          lastDisappearTimestamp = input.ReadInt64();
          break;
        }
        case 40: {
          lastRewardTimestamp = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoStore : pb::IMessage<InfoStore>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoStore> _parser = new pb::MessageParser<InfoStore>(() => new InfoStore());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoStore> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[61]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoStore() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoStore(InfoStore other) : this() {
    limitGiftCount_ = other.limitGiftCount_;
    limitGiftTime_ = other.limitGiftTime_;
    diamondsCount_ = other.diamondsCount_;
    diamondsTime_ = other.diamondsTime_;
    silverBoxCount_ = other.silverBoxCount_;
    silverBoxTime_ = other.silverBoxTime_;
    goldenBoxTime_ = other.goldenBoxTime_;
    evilBoxTime_ = other.evilBoxTime_;
    freeGiftTime_ = other.freeGiftTime_;
    giftList_ = other.giftList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoStore Clone() {
    return new InfoStore(this);
  }

  /// <summary>Field number for the "limitGiftCount" field.</summary>
  public const int limitGiftCountFieldNumber = 1;
  private int limitGiftCount_;
  /// <summary>
  ///限时礼包剩余次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int limitGiftCount {
    get { return limitGiftCount_; }
    set {
      limitGiftCount_ = value;
    }
  }

  /// <summary>Field number for the "limitGiftTime" field.</summary>
  public const int limitGiftTimeFieldNumber = 2;
  private int limitGiftTime_;
  /// <summary>
  ///限时礼包计时点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int limitGiftTime {
    get { return limitGiftTime_; }
    set {
      limitGiftTime_ = value;
    }
  }

  /// <summary>Field number for the "diamondsCount" field.</summary>
  public const int diamondsCountFieldNumber = 3;
  private int diamondsCount_;
  /// <summary>
  ///钻石礼包剩余次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int diamondsCount {
    get { return diamondsCount_; }
    set {
      diamondsCount_ = value;
    }
  }

  /// <summary>Field number for the "diamondsTime" field.</summary>
  public const int diamondsTimeFieldNumber = 4;
  private int diamondsTime_;
  /// <summary>
  ///钻石礼包计时点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int diamondsTime {
    get { return diamondsTime_; }
    set {
      diamondsTime_ = value;
    }
  }

  /// <summary>Field number for the "silverBoxCount" field.</summary>
  public const int silverBoxCountFieldNumber = 5;
  private int silverBoxCount_;
  /// <summary>
  ///银宝箱剩余次数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int silverBoxCount {
    get { return silverBoxCount_; }
    set {
      silverBoxCount_ = value;
    }
  }

  /// <summary>Field number for the "silverBoxTime" field.</summary>
  public const int silverBoxTimeFieldNumber = 6;
  private int silverBoxTime_;
  /// <summary>
  ///银宝箱计时点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int silverBoxTime {
    get { return silverBoxTime_; }
    set {
      silverBoxTime_ = value;
    }
  }

  /// <summary>Field number for the "goldenBoxTime" field.</summary>
  public const int goldenBoxTimeFieldNumber = 7;
  private int goldenBoxTime_;
  /// <summary>
  ///金宝箱开启免费计时点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int goldenBoxTime {
    get { return goldenBoxTime_; }
    set {
      goldenBoxTime_ = value;
    }
  }

  /// <summary>Field number for the "evilBoxTime" field.</summary>
  public const int evilBoxTimeFieldNumber = 8;
  private int evilBoxTime_;
  /// <summary>
  ///恶魔宝箱开启免费计时点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int evilBoxTime {
    get { return evilBoxTime_; }
    set {
      evilBoxTime_ = value;
    }
  }

  /// <summary>Field number for the "freeGiftTime" field.</summary>
  public const int freeGiftTimeFieldNumber = 9;
  private int freeGiftTime_;
  /// <summary>
  ///免费礼包刷新计时点
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int freeGiftTime {
    get { return freeGiftTime_; }
    set {
      freeGiftTime_ = value;
    }
  }

  /// <summary>Field number for the "giftList" field.</summary>
  public const int giftListFieldNumber = 10;
  private static readonly pb::FieldCodec<int> _repeated_giftList_codec
      = pb::FieldCodec.ForInt32(82);
  private readonly pbc::RepeatedField<int> giftList_ = new pbc::RepeatedField<int>();
  /// <summary>
  ///免费礼包id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> giftList {
    get { return giftList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoStore);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoStore other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (limitGiftCount != other.limitGiftCount) return false;
    if (limitGiftTime != other.limitGiftTime) return false;
    if (diamondsCount != other.diamondsCount) return false;
    if (diamondsTime != other.diamondsTime) return false;
    if (silverBoxCount != other.silverBoxCount) return false;
    if (silverBoxTime != other.silverBoxTime) return false;
    if (goldenBoxTime != other.goldenBoxTime) return false;
    if (evilBoxTime != other.evilBoxTime) return false;
    if (freeGiftTime != other.freeGiftTime) return false;
    if(!giftList_.Equals(other.giftList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (limitGiftCount != 0) hash ^= limitGiftCount.GetHashCode();
    if (limitGiftTime != 0) hash ^= limitGiftTime.GetHashCode();
    if (diamondsCount != 0) hash ^= diamondsCount.GetHashCode();
    if (diamondsTime != 0) hash ^= diamondsTime.GetHashCode();
    if (silverBoxCount != 0) hash ^= silverBoxCount.GetHashCode();
    if (silverBoxTime != 0) hash ^= silverBoxTime.GetHashCode();
    if (goldenBoxTime != 0) hash ^= goldenBoxTime.GetHashCode();
    if (evilBoxTime != 0) hash ^= evilBoxTime.GetHashCode();
    if (freeGiftTime != 0) hash ^= freeGiftTime.GetHashCode();
    hash ^= giftList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (limitGiftCount != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(limitGiftCount);
    }
    if (limitGiftTime != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(limitGiftTime);
    }
    if (diamondsCount != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(diamondsCount);
    }
    if (diamondsTime != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(diamondsTime);
    }
    if (silverBoxCount != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(silverBoxCount);
    }
    if (silverBoxTime != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(silverBoxTime);
    }
    if (goldenBoxTime != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(goldenBoxTime);
    }
    if (evilBoxTime != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(evilBoxTime);
    }
    if (freeGiftTime != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(freeGiftTime);
    }
    giftList_.WriteTo(output, _repeated_giftList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (limitGiftCount != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(limitGiftCount);
    }
    if (limitGiftTime != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(limitGiftTime);
    }
    if (diamondsCount != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(diamondsCount);
    }
    if (diamondsTime != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(diamondsTime);
    }
    if (silverBoxCount != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(silverBoxCount);
    }
    if (silverBoxTime != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(silverBoxTime);
    }
    if (goldenBoxTime != 0) {
      output.WriteRawTag(56);
      output.WriteInt32(goldenBoxTime);
    }
    if (evilBoxTime != 0) {
      output.WriteRawTag(64);
      output.WriteInt32(evilBoxTime);
    }
    if (freeGiftTime != 0) {
      output.WriteRawTag(72);
      output.WriteInt32(freeGiftTime);
    }
    giftList_.WriteTo(ref output, _repeated_giftList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (limitGiftCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(limitGiftCount);
    }
    if (limitGiftTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(limitGiftTime);
    }
    if (diamondsCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(diamondsCount);
    }
    if (diamondsTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(diamondsTime);
    }
    if (silverBoxCount != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(silverBoxCount);
    }
    if (silverBoxTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(silverBoxTime);
    }
    if (goldenBoxTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(goldenBoxTime);
    }
    if (evilBoxTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(evilBoxTime);
    }
    if (freeGiftTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(freeGiftTime);
    }
    size += giftList_.CalculateSize(_repeated_giftList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoStore other) {
    if (other == null) {
      return;
    }
    if (other.limitGiftCount != 0) {
      limitGiftCount = other.limitGiftCount;
    }
    if (other.limitGiftTime != 0) {
      limitGiftTime = other.limitGiftTime;
    }
    if (other.diamondsCount != 0) {
      diamondsCount = other.diamondsCount;
    }
    if (other.diamondsTime != 0) {
      diamondsTime = other.diamondsTime;
    }
    if (other.silverBoxCount != 0) {
      silverBoxCount = other.silverBoxCount;
    }
    if (other.silverBoxTime != 0) {
      silverBoxTime = other.silverBoxTime;
    }
    if (other.goldenBoxTime != 0) {
      goldenBoxTime = other.goldenBoxTime;
    }
    if (other.evilBoxTime != 0) {
      evilBoxTime = other.evilBoxTime;
    }
    if (other.freeGiftTime != 0) {
      freeGiftTime = other.freeGiftTime;
    }
    giftList_.Add(other.giftList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          limitGiftCount = input.ReadInt32();
          break;
        }
        case 16: {
          limitGiftTime = input.ReadInt32();
          break;
        }
        case 24: {
          diamondsCount = input.ReadInt32();
          break;
        }
        case 32: {
          diamondsTime = input.ReadInt32();
          break;
        }
        case 40: {
          silverBoxCount = input.ReadInt32();
          break;
        }
        case 48: {
          silverBoxTime = input.ReadInt32();
          break;
        }
        case 56: {
          goldenBoxTime = input.ReadInt32();
          break;
        }
        case 64: {
          evilBoxTime = input.ReadInt32();
          break;
        }
        case 72: {
          freeGiftTime = input.ReadInt32();
          break;
        }
        case 82:
        case 80: {
          giftList_.AddEntriesFrom(input, _repeated_giftList_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          limitGiftCount = input.ReadInt32();
          break;
        }
        case 16: {
          limitGiftTime = input.ReadInt32();
          break;
        }
        case 24: {
          diamondsCount = input.ReadInt32();
          break;
        }
        case 32: {
          diamondsTime = input.ReadInt32();
          break;
        }
        case 40: {
          silverBoxCount = input.ReadInt32();
          break;
        }
        case 48: {
          silverBoxTime = input.ReadInt32();
          break;
        }
        case 56: {
          goldenBoxTime = input.ReadInt32();
          break;
        }
        case 64: {
          evilBoxTime = input.ReadInt32();
          break;
        }
        case 72: {
          freeGiftTime = input.ReadInt32();
          break;
        }
        case 82:
        case 80: {
          giftList_.AddEntriesFrom(ref input, _repeated_giftList_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoSignIn : pb::IMessage<InfoSignIn>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoSignIn> _parser = new pb::MessageParser<InfoSignIn>(() => new InfoSignIn());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoSignIn> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[62]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoSignIn() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoSignIn(InfoSignIn other) : this() {
    receivedDay_ = other.receivedDay_;
    loginDay_ = other.loginDay_;
    lastLoginTimestamp_ = other.lastLoginTimestamp_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoSignIn Clone() {
    return new InfoSignIn(this);
  }

  /// <summary>Field number for the "receivedDay" field.</summary>
  public const int receivedDayFieldNumber = 1;
  private int receivedDay_;
  /// <summary>
  ///领取天数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int receivedDay {
    get { return receivedDay_; }
    set {
      receivedDay_ = value;
    }
  }

  /// <summary>Field number for the "loginDay" field.</summary>
  public const int loginDayFieldNumber = 2;
  private int loginDay_;
  /// <summary>
  ///登陆天数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int loginDay {
    get { return loginDay_; }
    set {
      loginDay_ = value;
    }
  }

  /// <summary>Field number for the "lastLoginTimestamp" field.</summary>
  public const int lastLoginTimestampFieldNumber = 3;
  private long lastLoginTimestamp_;
  /// <summary>
  ///最新登陆时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long lastLoginTimestamp {
    get { return lastLoginTimestamp_; }
    set {
      lastLoginTimestamp_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoSignIn);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoSignIn other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (receivedDay != other.receivedDay) return false;
    if (loginDay != other.loginDay) return false;
    if (lastLoginTimestamp != other.lastLoginTimestamp) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (receivedDay != 0) hash ^= receivedDay.GetHashCode();
    if (loginDay != 0) hash ^= loginDay.GetHashCode();
    if (lastLoginTimestamp != 0L) hash ^= lastLoginTimestamp.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (receivedDay != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(receivedDay);
    }
    if (loginDay != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(loginDay);
    }
    if (lastLoginTimestamp != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(lastLoginTimestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (receivedDay != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(receivedDay);
    }
    if (loginDay != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(loginDay);
    }
    if (lastLoginTimestamp != 0L) {
      output.WriteRawTag(24);
      output.WriteInt64(lastLoginTimestamp);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (receivedDay != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(receivedDay);
    }
    if (loginDay != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(loginDay);
    }
    if (lastLoginTimestamp != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(lastLoginTimestamp);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoSignIn other) {
    if (other == null) {
      return;
    }
    if (other.receivedDay != 0) {
      receivedDay = other.receivedDay;
    }
    if (other.loginDay != 0) {
      loginDay = other.loginDay;
    }
    if (other.lastLoginTimestamp != 0L) {
      lastLoginTimestamp = other.lastLoginTimestamp;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          receivedDay = input.ReadInt32();
          break;
        }
        case 16: {
          loginDay = input.ReadInt32();
          break;
        }
        case 24: {
          lastLoginTimestamp = input.ReadInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          receivedDay = input.ReadInt32();
          break;
        }
        case 16: {
          loginDay = input.ReadInt32();
          break;
        }
        case 24: {
          lastLoginTimestamp = input.ReadInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class TimeGlobalBuffItem : pb::IMessage<TimeGlobalBuffItem>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<TimeGlobalBuffItem> _parser = new pb::MessageParser<TimeGlobalBuffItem>(() => new TimeGlobalBuffItem());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TimeGlobalBuffItem> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[63]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TimeGlobalBuffItem() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TimeGlobalBuffItem(TimeGlobalBuffItem other) : this() {
    id_ = other.id_;
    generate_ts_ = other.generate_ts_;
    durationTime_ = other.durationTime_;
    limit_ = other.limit_.Clone();
    value_ = other.value_;
    type_ = other.type_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TimeGlobalBuffItem Clone() {
    return new TimeGlobalBuffItem(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int idFieldNumber = 1;
  private int id_;
  /// <summary>
  ///buff效果里的id 和 buff type区别
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "generate_ts" field.</summary>
  public const int generate_tsFieldNumber = 2;
  private long generate_ts_;
  /// <summary>
  /// 生成时间戳
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long generate_ts {
    get { return generate_ts_; }
    set {
      generate_ts_ = value;
    }
  }

  /// <summary>Field number for the "durationTime" field.</summary>
  public const int durationTimeFieldNumber = 3;
  private int durationTime_;
  /// <summary>
  ///持续时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int durationTime {
    get { return durationTime_; }
    set {
      durationTime_ = value;
    }
  }

  /// <summary>Field number for the "limit" field.</summary>
  public const int limitFieldNumber = 4;
  private static readonly pb::FieldCodec<int> _repeated_limit_codec
      = pb::FieldCodec.ForInt32(34);
  private readonly pbc::RepeatedField<int> limit_ = new pbc::RepeatedField<int>();
  /// <summary>
  /// 限制条件比如男女顾客生效
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> limit {
    get { return limit_; }
  }

  /// <summary>Field number for the "value" field.</summary>
  public const int valueFieldNumber = 5;
  private int value_;
  /// <summary>
  ///buff加成数值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int value {
    get { return value_; }
    set {
      value_ = value;
    }
  }

  /// <summary>Field number for the "type" field.</summary>
  public const int typeFieldNumber = 6;
  private int type_;
  /// <summary>
  ///buff类型
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int type {
    get { return type_; }
    set {
      type_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TimeGlobalBuffItem);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TimeGlobalBuffItem other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (id != other.id) return false;
    if (generate_ts != other.generate_ts) return false;
    if (durationTime != other.durationTime) return false;
    if(!limit_.Equals(other.limit_)) return false;
    if (value != other.value) return false;
    if (type != other.type) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (id != 0) hash ^= id.GetHashCode();
    if (generate_ts != 0L) hash ^= generate_ts.GetHashCode();
    if (durationTime != 0) hash ^= durationTime.GetHashCode();
    hash ^= limit_.GetHashCode();
    if (value != 0) hash ^= value.GetHashCode();
    if (type != 0) hash ^= type.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (generate_ts != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(generate_ts);
    }
    if (durationTime != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(durationTime);
    }
    limit_.WriteTo(output, _repeated_limit_codec);
    if (value != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(value);
    }
    if (type != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (generate_ts != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(generate_ts);
    }
    if (durationTime != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(durationTime);
    }
    limit_.WriteTo(ref output, _repeated_limit_codec);
    if (value != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(value);
    }
    if (type != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(type);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(id);
    }
    if (generate_ts != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(generate_ts);
    }
    if (durationTime != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(durationTime);
    }
    size += limit_.CalculateSize(_repeated_limit_codec);
    if (value != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(value);
    }
    if (type != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(type);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TimeGlobalBuffItem other) {
    if (other == null) {
      return;
    }
    if (other.id != 0) {
      id = other.id;
    }
    if (other.generate_ts != 0L) {
      generate_ts = other.generate_ts;
    }
    if (other.durationTime != 0) {
      durationTime = other.durationTime;
    }
    limit_.Add(other.limit_);
    if (other.value != 0) {
      value = other.value;
    }
    if (other.type != 0) {
      type = other.type;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          generate_ts = input.ReadInt64();
          break;
        }
        case 24: {
          durationTime = input.ReadInt32();
          break;
        }
        case 34:
        case 32: {
          limit_.AddEntriesFrom(input, _repeated_limit_codec);
          break;
        }
        case 40: {
          value = input.ReadInt32();
          break;
        }
        case 48: {
          type = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          generate_ts = input.ReadInt64();
          break;
        }
        case 24: {
          durationTime = input.ReadInt32();
          break;
        }
        case 34:
        case 32: {
          limit_.AddEntriesFrom(ref input, _repeated_limit_codec);
          break;
        }
        case 40: {
          value = input.ReadInt32();
          break;
        }
        case 48: {
          type = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoTimeGlobalBuff : pb::IMessage<InfoTimeGlobalBuff>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoTimeGlobalBuff> _parser = new pb::MessageParser<InfoTimeGlobalBuff>(() => new InfoTimeGlobalBuff());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoTimeGlobalBuff> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[64]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoTimeGlobalBuff() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoTimeGlobalBuff(InfoTimeGlobalBuff other) : this() {
    buffs_ = other.buffs_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoTimeGlobalBuff Clone() {
    return new InfoTimeGlobalBuff(this);
  }

  /// <summary>Field number for the "buffs" field.</summary>
  public const int buffsFieldNumber = 1;
  private static readonly pb::FieldCodec<global::TimeGlobalBuffItem> _repeated_buffs_codec
      = pb::FieldCodec.ForMessage(10, global::TimeGlobalBuffItem.Parser);
  private readonly pbc::RepeatedField<global::TimeGlobalBuffItem> buffs_ = new pbc::RepeatedField<global::TimeGlobalBuffItem>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::TimeGlobalBuffItem> buffs {
    get { return buffs_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoTimeGlobalBuff);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoTimeGlobalBuff other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!buffs_.Equals(other.buffs_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= buffs_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    buffs_.WriteTo(output, _repeated_buffs_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    buffs_.WriteTo(ref output, _repeated_buffs_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += buffs_.CalculateSize(_repeated_buffs_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoTimeGlobalBuff other) {
    if (other == null) {
      return;
    }
    buffs_.Add(other.buffs_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          buffs_.AddEntriesFrom(input, _repeated_buffs_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          buffs_.AddEntriesFrom(ref input, _repeated_buffs_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoDialog : pb::IMessage<InfoDialog>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoDialog> _parser = new pb::MessageParser<InfoDialog>(() => new InfoDialog());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoDialog> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[65]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoDialog() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoDialog(InfoDialog other) : this() {
    dialogOrderId_ = other.dialogOrderId_;
    dialogRandomList_ = other.dialogRandomList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoDialog Clone() {
    return new InfoDialog(this);
  }

  /// <summary>Field number for the "dialogOrderId" field.</summary>
  public const int dialogOrderIdFieldNumber = 5;
  private int dialogOrderId_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int dialogOrderId {
    get { return dialogOrderId_; }
    set {
      dialogOrderId_ = value;
    }
  }

  /// <summary>Field number for the "dialogRandomList" field.</summary>
  public const int dialogRandomListFieldNumber = 6;
  private static readonly pb::FieldCodec<int> _repeated_dialogRandomList_codec
      = pb::FieldCodec.ForInt32(50);
  private readonly pbc::RepeatedField<int> dialogRandomList_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> dialogRandomList {
    get { return dialogRandomList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoDialog);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoDialog other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (dialogOrderId != other.dialogOrderId) return false;
    if(!dialogRandomList_.Equals(other.dialogRandomList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (dialogOrderId != 0) hash ^= dialogOrderId.GetHashCode();
    hash ^= dialogRandomList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (dialogOrderId != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(dialogOrderId);
    }
    dialogRandomList_.WriteTo(output, _repeated_dialogRandomList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (dialogOrderId != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(dialogOrderId);
    }
    dialogRandomList_.WriteTo(ref output, _repeated_dialogRandomList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (dialogOrderId != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(dialogOrderId);
    }
    size += dialogRandomList_.CalculateSize(_repeated_dialogRandomList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoDialog other) {
    if (other == null) {
      return;
    }
    if (other.dialogOrderId != 0) {
      dialogOrderId = other.dialogOrderId;
    }
    dialogRandomList_.Add(other.dialogRandomList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 40: {
          dialogOrderId = input.ReadInt32();
          break;
        }
        case 50:
        case 48: {
          dialogRandomList_.AddEntriesFrom(input, _repeated_dialogRandomList_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 40: {
          dialogOrderId = input.ReadInt32();
          break;
        }
        case 50:
        case 48: {
          dialogRandomList_.AddEntriesFrom(ref input, _repeated_dialogRandomList_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoDecorate : pb::IMessage<InfoDecorate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoDecorate> _parser = new pb::MessageParser<InfoDecorate>(() => new InfoDecorate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoDecorate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[66]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoDecorate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoDecorate(InfoDecorate other) : this() {
    id_ = other.id_;
    status_ = other.status_;
    decorateTimestamp_ = other.decorateTimestamp_;
    hasShowInfo_ = other.hasShowInfo_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoDecorate Clone() {
    return new InfoDecorate(this);
  }

  /// <summary>Field number for the "id" field.</summary>
  public const int idFieldNumber = 1;
  private int id_;
  /// <summary>
  ///id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int id {
    get { return id_; }
    set {
      id_ = value;
    }
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int statusFieldNumber = 2;
  private global::InfoDecorateStatus status_ = global::InfoDecorateStatus.Lock;
  /// <summary>
  ///装修状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::InfoDecorateStatus status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "decorateTimestamp" field.</summary>
  public const int decorateTimestampFieldNumber = 3;
  private int decorateTimestamp_;
  /// <summary>
  ///开始装修时间
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int decorateTimestamp {
    get { return decorateTimestamp_; }
    set {
      decorateTimestamp_ = value;
    }
  }

  /// <summary>Field number for the "hasShowInfo" field.</summary>
  public const int hasShowInfoFieldNumber = 4;
  private int hasShowInfo_;
  /// <summary>
  /// 是否打开过详情界面
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int hasShowInfo {
    get { return hasShowInfo_; }
    set {
      hasShowInfo_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoDecorate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoDecorate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (id != other.id) return false;
    if (status != other.status) return false;
    if (decorateTimestamp != other.decorateTimestamp) return false;
    if (hasShowInfo != other.hasShowInfo) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (id != 0) hash ^= id.GetHashCode();
    if (status != global::InfoDecorateStatus.Lock) hash ^= status.GetHashCode();
    if (decorateTimestamp != 0) hash ^= decorateTimestamp.GetHashCode();
    if (hasShowInfo != 0) hash ^= hasShowInfo.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (status != global::InfoDecorateStatus.Lock) {
      output.WriteRawTag(16);
      output.WriteEnum((int) status);
    }
    if (decorateTimestamp != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(decorateTimestamp);
    }
    if (hasShowInfo != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(hasShowInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (id != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(id);
    }
    if (status != global::InfoDecorateStatus.Lock) {
      output.WriteRawTag(16);
      output.WriteEnum((int) status);
    }
    if (decorateTimestamp != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(decorateTimestamp);
    }
    if (hasShowInfo != 0) {
      output.WriteRawTag(32);
      output.WriteInt32(hasShowInfo);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (id != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(id);
    }
    if (status != global::InfoDecorateStatus.Lock) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) status);
    }
    if (decorateTimestamp != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(decorateTimestamp);
    }
    if (hasShowInfo != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(hasShowInfo);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoDecorate other) {
    if (other == null) {
      return;
    }
    if (other.id != 0) {
      id = other.id;
    }
    if (other.status != global::InfoDecorateStatus.Lock) {
      status = other.status;
    }
    if (other.decorateTimestamp != 0) {
      decorateTimestamp = other.decorateTimestamp;
    }
    if (other.hasShowInfo != 0) {
      hasShowInfo = other.hasShowInfo;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          status = (global::InfoDecorateStatus) input.ReadEnum();
          break;
        }
        case 24: {
          decorateTimestamp = input.ReadInt32();
          break;
        }
        case 32: {
          hasShowInfo = input.ReadInt32();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          id = input.ReadInt32();
          break;
        }
        case 16: {
          status = (global::InfoDecorateStatus) input.ReadEnum();
          break;
        }
        case 24: {
          decorateTimestamp = input.ReadInt32();
          break;
        }
        case 32: {
          hasShowInfo = input.ReadInt32();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoDecorateMap : pb::IMessage<InfoDecorateMap>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoDecorateMap> _parser = new pb::MessageParser<InfoDecorateMap>(() => new InfoDecorateMap());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoDecorateMap> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[67]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoDecorateMap() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoDecorateMap(InfoDecorateMap other) : this() {
    decorateList_ = other.decorateList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoDecorateMap Clone() {
    return new InfoDecorateMap(this);
  }

  /// <summary>Field number for the "decorateList" field.</summary>
  public const int decorateListFieldNumber = 1;
  private static readonly pbc::MapField<int, global::InfoDecorate>.Codec _map_decorateList_codec
      = new pbc::MapField<int, global::InfoDecorate>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::InfoDecorate.Parser), 10);
  private readonly pbc::MapField<int, global::InfoDecorate> decorateList_ = new pbc::MapField<int, global::InfoDecorate>();
  /// <summary>
  /// 形象id列表
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::InfoDecorate> decorateList {
    get { return decorateList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoDecorateMap);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoDecorateMap other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!decorateList.Equals(other.decorateList)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= decorateList.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    decorateList_.WriteTo(output, _map_decorateList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    decorateList_.WriteTo(ref output, _map_decorateList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += decorateList_.CalculateSize(_map_decorateList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoDecorateMap other) {
    if (other == null) {
      return;
    }
    decorateList_.Add(other.decorateList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          decorateList_.AddEntriesFrom(input, _map_decorateList_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          decorateList_.AddEntriesFrom(ref input, _map_decorateList_codec);
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class InfoSceneDecorate : pb::IMessage<InfoSceneDecorate>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<InfoSceneDecorate> _parser = new pb::MessageParser<InfoSceneDecorate>(() => new InfoSceneDecorate());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<InfoSceneDecorate> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::ClientReflection.Descriptor.MessageTypes[68]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoSceneDecorate() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoSceneDecorate(InfoSceneDecorate other) : this() {
    curDecorateList_ = other.curDecorateList_.Clone();
    allDecorateList_ = other.allDecorateList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public InfoSceneDecorate Clone() {
    return new InfoSceneDecorate(this);
  }

  /// <summary>Field number for the "curDecorateList" field.</summary>
  public const int curDecorateListFieldNumber = 1;
  private static readonly pbc::MapField<int, int>.Codec _map_curDecorateList_codec
      = new pbc::MapField<int, int>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForInt32(16, 0), 10);
  private readonly pbc::MapField<int, int> curDecorateList_ = new pbc::MapField<int, int>();
  /// <summary>
  /// key:模块id，value:形象id，记录某模块当前的皮肤id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, int> curDecorateList {
    get { return curDecorateList_; }
  }

  /// <summary>Field number for the "allDecorateList" field.</summary>
  public const int allDecorateListFieldNumber = 2;
  private static readonly pbc::MapField<int, global::InfoDecorateMap>.Codec _map_allDecorateList_codec
      = new pbc::MapField<int, global::InfoDecorateMap>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::InfoDecorateMap.Parser), 18);
  private readonly pbc::MapField<int, global::InfoDecorateMap> allDecorateList_ = new pbc::MapField<int, global::InfoDecorateMap>();
  /// <summary>
  /// 某模块所有形象的状态
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::InfoDecorateMap> allDecorateList {
    get { return allDecorateList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as InfoSceneDecorate);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(InfoSceneDecorate other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!curDecorateList.Equals(other.curDecorateList)) return false;
    if (!allDecorateList.Equals(other.allDecorateList)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= curDecorateList.GetHashCode();
    hash ^= allDecorateList.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    curDecorateList_.WriteTo(output, _map_curDecorateList_codec);
    allDecorateList_.WriteTo(output, _map_allDecorateList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    curDecorateList_.WriteTo(ref output, _map_curDecorateList_codec);
    allDecorateList_.WriteTo(ref output, _map_allDecorateList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += curDecorateList_.CalculateSize(_map_curDecorateList_codec);
    size += allDecorateList_.CalculateSize(_map_allDecorateList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(InfoSceneDecorate other) {
    if (other == null) {
      return;
    }
    curDecorateList_.Add(other.curDecorateList_);
    allDecorateList_.Add(other.allDecorateList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          curDecorateList_.AddEntriesFrom(input, _map_curDecorateList_codec);
          break;
        }
        case 18: {
          allDecorateList_.AddEntriesFrom(input, _map_allDecorateList_codec);
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          curDecorateList_.AddEntriesFrom(ref input, _map_curDecorateList_codec);
          break;
        }
        case 18: {
          allDecorateList_.AddEntriesFrom(ref input, _map_allDecorateList_codec);
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
