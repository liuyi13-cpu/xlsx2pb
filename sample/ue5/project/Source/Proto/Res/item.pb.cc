// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: item.proto

#include "item.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace RES {
constexpr ResItem::ResItem(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , icon_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , image_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(0)
  , type_(0)
  , timepre_(0)
  , timeafter_(0){}
struct ResItemDefaultTypeInternal {
  constexpr ResItemDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResItemDefaultTypeInternal() {}
  union {
    ResItem _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResItemDefaultTypeInternal _ResItem_default_instance_;
constexpr ResItemArray::ResItemArray(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : items_(){}
struct ResItemArrayDefaultTypeInternal {
  constexpr ResItemArrayDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResItemArrayDefaultTypeInternal() {}
  union {
    ResItemArray _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResItemArrayDefaultTypeInternal _ResItemArray_default_instance_;
constexpr ResItemBag::ResItemBag(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : drop_array_()
  , _drop_array_cached_byte_size_()
  , drop_count_array_()
  , _drop_count_array_cached_byte_size_()
  , icon_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(0)
  , type_(0)
  , typeid__(0){}
struct ResItemBagDefaultTypeInternal {
  constexpr ResItemBagDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResItemBagDefaultTypeInternal() {}
  union {
    ResItemBag _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResItemBagDefaultTypeInternal _ResItemBag_default_instance_;
constexpr ResItemBagArray::ResItemBagArray(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : items_(){}
struct ResItemBagArrayDefaultTypeInternal {
  constexpr ResItemBagArrayDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResItemBagArrayDefaultTypeInternal() {}
  union {
    ResItemBagArray _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResItemBagArrayDefaultTypeInternal _ResItemBagArray_default_instance_;
constexpr ResItemDrop::ResItemDrop(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : reward1_list_()
  , reward2_list_()
  , image_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(0)
  , droptype_(0)
  , sellexp_(0)
  , rewardprobability1_(0)
  , rewardprobability2_(0){}
struct ResItemDropDefaultTypeInternal {
  constexpr ResItemDropDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResItemDropDefaultTypeInternal() {}
  union {
    ResItemDrop _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResItemDropDefaultTypeInternal _ResItemDrop_default_instance_;
constexpr ResItemDropArray::ResItemDropArray(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : items_(){}
struct ResItemDropArrayDefaultTypeInternal {
  constexpr ResItemDropArrayDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResItemDropArrayDefaultTypeInternal() {}
  union {
    ResItemDropArray _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResItemDropArrayDefaultTypeInternal _ResItemDropArray_default_instance_;
constexpr ResItemRange::ResItemRange(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : id_(0)
  , coins_min_(0)
  , coins_max_(0)
  , diamond_min_(0)
  , diamond_max_(0)
  , exp_min_(0)
  , exp_max_(0)
  , power_min_(0)
  , power_max_(0)
  , ach_point_min_(0)
  , ach_point_max_(0){}
struct ResItemRangeDefaultTypeInternal {
  constexpr ResItemRangeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResItemRangeDefaultTypeInternal() {}
  union {
    ResItemRange _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResItemRangeDefaultTypeInternal _ResItemRange_default_instance_;
constexpr ResItemRangeArray::ResItemRangeArray(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : items_(){}
struct ResItemRangeArrayDefaultTypeInternal {
  constexpr ResItemRangeArrayDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ResItemRangeArrayDefaultTypeInternal() {}
  union {
    ResItemRangeArray _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ResItemRangeArrayDefaultTypeInternal _ResItemRangeArray_default_instance_;
}  // namespace RES
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_item_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_item_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_item_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_item_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RES::ResItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::RES::ResItem, id_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItem, name_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItem, icon_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItem, image_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItem, desc_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItem, type_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItem, timepre_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItem, timeafter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RES::ResItemArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::RES::ResItemArray, items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RES::ResItemBag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::RES::ResItemBag, id_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemBag, type_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemBag, typeid__),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemBag, drop_array_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemBag, drop_count_array_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemBag, icon_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RES::ResItemBagArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::RES::ResItemBagArray, items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RES::ResItemDrop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::RES::ResItemDrop, id_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemDrop, droptype_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemDrop, image_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemDrop, sellexp_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemDrop, rewardprobability1_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemDrop, reward1_list_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemDrop, rewardprobability2_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemDrop, reward2_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RES::ResItemDropArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::RES::ResItemDropArray, items_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RES::ResItemRange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::RES::ResItemRange, id_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemRange, coins_min_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemRange, coins_max_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemRange, diamond_min_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemRange, diamond_max_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemRange, exp_min_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemRange, exp_max_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemRange, power_min_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemRange, power_max_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemRange, ach_point_min_),
  PROTOBUF_FIELD_OFFSET(::RES::ResItemRange, ach_point_max_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::RES::ResItemRangeArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::RES::ResItemRangeArray, items_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::RES::ResItem)},
  { 13, -1, sizeof(::RES::ResItemArray)},
  { 19, -1, sizeof(::RES::ResItemBag)},
  { 30, -1, sizeof(::RES::ResItemBagArray)},
  { 36, -1, sizeof(::RES::ResItemDrop)},
  { 49, -1, sizeof(::RES::ResItemDropArray)},
  { 55, -1, sizeof(::RES::ResItemRange)},
  { 71, -1, sizeof(::RES::ResItemRangeArray)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::RES::_ResItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::RES::_ResItemArray_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::RES::_ResItemBag_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::RES::_ResItemBagArray_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::RES::_ResItemDrop_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::RES::_ResItemDropArray_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::RES::_ResItemRange_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::RES::_ResItemRangeArray_default_instance_),
};

const char descriptor_table_protodef_item_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nitem.proto\022\003RES\032\014tsv2pb.proto\032\016keyword"
  "s.proto\032\025keywords_client.proto\"\262\002\n\007ResIt"
  "em\022\030\n\002id\030\001 \001(\005B\014\212\361\004\010\347\211\251\345\223\201ID\022\036\n\004name\030\002 \001"
  "(\tB\020\212\361\004\014\347\211\251\345\223\201\345\220\215\347\247\260\022\032\n\004icon\030\003 \001(\tB\014\212\361\004\010"
  "UI\345\233\276\346\240\207\022\037\n\005image\030\004 \001(\tB\020\212\361\004\014\345\234\272\346\231\257\345\233\276\346\240"
  "\207\022\036\n\004desc\030\005 \001(\tB\020\212\361\004\014\347\211\251\345\223\201\346\217\217\350\277\260\022\036\n\004typ"
  "e\030\006 \001(\005B\020\212\361\004\014\347\211\251\345\223\201\347\261\273\345\236\213\022*\n\007timePre\030\007 \001"
  "(\005B\031\212\361\004\025\350\264\255\344\271\260\345\211\215\347\255\211\345\276\205\346\227\266\351\227\264\022,\n\ttimeAft"
  "er\030\010 \001(\005B\031\212\361\004\025\350\264\255\344\271\260\345\220\216\347\255\211\345\276\205\346\227\266\351\227\264:\026\212\342\t"
  "\022\347\211\251\345\223\201\350\241\250#res_item\"+\n\014ResItemArray\022\033\n\005i"
  "tems\030\001 \003(\0132\014.RES.ResItem\"\336\001\n\nResItemBag\022"
  "\022\n\002id\030\001 \001(\005B\006\212\361\004\002id\022\030\n\004type\030\002 \001(\005B\n\212\361\004\006\347"
  "\247\215\347\261\273\022\034\n\006typeId\030\003 \001(\005B\014\212\361\004\010\347\261\273\345\236\213ID\022\036\n\nd"
  "rop_array\030\004 \003(\005B\n\212\361\004\006\346\216\211\350\220\275\022)\n\020drop_coun"
  "t_array\030\005 \003(\005B\017\212\361\004\013\346\216\211\350\220\275count\022\032\n\004icon\030\006"
  " \001(\tB\014\212\361\004\010UI\346\230\276\347\244\272:\035\212\342\t\031\347\211\251\345\223\201\345\214\205\350\241\250#res"
  "_item_bag\"1\n\017ResItemBagArray\022\036\n\005items\030\001 "
  "\003(\0132\017.RES.ResItemBag\"\360\002\n\013ResItemDrop\022\022\n\002"
  "id\030\001 \001(\005B\006\212\361\004\002id\022\"\n\010dropType\030\002 \001(\005B\020\212\361\004\014"
  "\346\216\211\350\220\275\347\261\273\345\236\213\022\037\n\005image\030\003 \001(\tB\020\212\361\004\014\345\234\272\346\231\257\346"
  "\230\276\347\244\272\022!\n\007sellExp\030\004 \001(\005B\020\212\361\004\014\345\270\246\350\264\247\347\273\217\351\252\214"
  "\022-\n\022rewardProbability1\030\005 \001(\005B\021\212\361\004\r\345\245\226\345\212\261"
  "1\346\246\202\347\216\207\0221\n\014reward1_list\030\006 \003(\0132\016.RES.ResR"
  "ewardB\013\212\361\004\007\345\245\226\345\212\2611\022-\n\022rewardProbability2"
  "\030\007 \001(\005B\021\212\361\004\r\345\245\226\345\212\2612\346\246\202\347\216\207\0221\n\014reward2_lis"
  "t\030\010 \003(\0132\016.RES.ResRewardB\013\212\361\004\007\345\245\226\345\212\2612:!\212\342"
  "\t\035\347\211\251\345\223\201\346\216\211\350\220\275\350\241\250#res_item_drop\"3\n\020ResIt"
  "emDropArray\022\037\n\005items\030\001 \003(\0132\020.RES.ResItem"
  "Drop\"\320\003\n\014ResItemRange\022\034\n\002id\030\001 \001(\005B\020\212\361\004\014\346"
  "\276\241\345\240\202\347\255\211\347\272\247\022#\n\tcoins_min\030\002 \001(\005B\020\212\361\004\014\351\207\221\345"
  "\270\201\344\270\213\351\231\220\022#\n\tcoins_max\030\003 \001(\005B\020\212\361\004\014\351\207\221\345\270\201\344"
  "\270\212\351\231\220\022%\n\013diamond_min\030\004 \001(\005B\020\212\361\004\014\351\222\273\347\237\263\344\270"
  "\213\351\231\220\022%\n\013diamond_max\030\005 \001(\005B\020\212\361\004\014\351\222\273\347\237\263\344\270\212"
  "\351\231\220\022!\n\007exp_min\030\006 \001(\005B\020\212\361\004\014\347\273\217\351\252\214\344\270\213\351\231\220\022!"
  "\n\007exp_max\030\007 \001(\005B\020\212\361\004\014\347\273\217\351\252\214\344\270\212\351\231\220\022#\n\tpow"
  "er_min\030\010 \001(\005B\020\212\361\004\014\344\275\223\345\212\233\344\270\213\351\231\220\022#\n\tpower_"
  "max\030\t \001(\005B\020\212\361\004\014\344\275\223\345\212\233\344\270\212\351\231\220\022*\n\rach_point"
  "_min\030\n \001(\005B\023\212\361\004\017\346\210\220\345\260\261\347\202\271\344\270\213\351\231\220\022*\n\rach_p"
  "oint_max\030\013 \001(\005B\023\212\361\004\017\346\210\220\345\260\261\347\202\271\344\270\212\351\231\220:\"\212\342\t"
  "\036\347\211\251\345\223\201\350\214\203\345\233\264\350\241\250#res_item_range\"5\n\021ResIt"
  "emRangeArray\022 \n\005items\030\001 \003(\0132\021.RES.ResIte"
  "mRangeb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_item_2eproto_deps[3] = {
  &::descriptor_table_keywords_2eproto,
  &::descriptor_table_keywords_5fclient_2eproto,
  &::descriptor_table_tsv2pb_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_item_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_item_2eproto = {
  false, false, 1654, descriptor_table_protodef_item_2eproto, "item.proto", 
  &descriptor_table_item_2eproto_once, descriptor_table_item_2eproto_deps, 3, 8,
  schemas, file_default_instances, TableStruct_item_2eproto::offsets,
  file_level_metadata_item_2eproto, file_level_enum_descriptors_item_2eproto, file_level_service_descriptors_item_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_item_2eproto_getter() {
  return &descriptor_table_item_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_item_2eproto(&descriptor_table_item_2eproto);
namespace RES {

// ===================================================================

class ResItem::_Internal {
 public:
};

ResItem::ResItem(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:RES.ResItem)
}
ResItem::ResItem(const ResItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_icon().empty()) {
    icon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_icon(), 
      GetArena());
  }
  image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image().empty()) {
    image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_image(), 
      GetArena());
  }
  desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_desc().empty()) {
    desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_desc(), 
      GetArena());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeafter_) -
    reinterpret_cast<char*>(&id_)) + sizeof(timeafter_));
  // @@protoc_insertion_point(copy_constructor:RES.ResItem)
}

void ResItem::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&timeafter_) -
    reinterpret_cast<char*>(&id_)) + sizeof(timeafter_));
}

ResItem::~ResItem() {
  // @@protoc_insertion_point(destructor:RES.ResItem)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResItem::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  image_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResItem::ArenaDtor(void* object) {
  ResItem* _this = reinterpret_cast< ResItem* >(object);
  (void)_this;
}
void ResItem::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResItem::Clear() {
// @@protoc_insertion_point(message_clear_start:RES.ResItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  icon_.ClearToEmpty();
  image_.ClearToEmpty();
  desc_.ClearToEmpty();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeafter_) -
      reinterpret_cast<char*>(&id_)) + sizeof(timeafter_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1 [(.field) = "\347\211\251\345\223\201ID"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2 [(.field) = "\347\211\251\345\223\201\345\220\215\347\247\260"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "RES.ResItem.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string icon = 3 [(.field) = "UI\345\233\276\346\240\207"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_icon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "RES.ResItem.icon"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image = 4 [(.field) = "\345\234\272\346\231\257\345\233\276\346\240\207"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_image();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "RES.ResItem.image"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string desc = 5 [(.field) = "\347\211\251\345\223\201\346\217\217\350\277\260"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "RES.ResItem.desc"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 type = 6 [(.field) = "\347\211\251\345\223\201\347\261\273\345\236\213"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 timePre = 7 [(.field) = "\350\264\255\344\271\260\345\211\215\347\255\211\345\276\205\346\227\266\351\227\264"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          timepre_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 timeAfter = 8 [(.field) = "\350\264\255\344\271\260\345\220\216\347\255\211\345\276\205\346\227\266\351\227\264"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          timeafter_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RES.ResItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1 [(.field) = "\347\211\251\345\223\201ID"];
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // string name = 2 [(.field) = "\347\211\251\345\223\201\345\220\215\347\247\260"];
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "RES.ResItem.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string icon = 3 [(.field) = "UI\345\233\276\346\240\207"];
  if (this->icon().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_icon().data(), static_cast<int>(this->_internal_icon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "RES.ResItem.icon");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_icon(), target);
  }

  // string image = 4 [(.field) = "\345\234\272\346\231\257\345\233\276\346\240\207"];
  if (this->image().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image().data(), static_cast<int>(this->_internal_image().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "RES.ResItem.image");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_image(), target);
  }

  // string desc = 5 [(.field) = "\347\211\251\345\223\201\346\217\217\350\277\260"];
  if (this->desc().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_desc().data(), static_cast<int>(this->_internal_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "RES.ResItem.desc");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_desc(), target);
  }

  // int32 type = 6 [(.field) = "\347\211\251\345\223\201\347\261\273\345\236\213"];
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_type(), target);
  }

  // int32 timePre = 7 [(.field) = "\350\264\255\344\271\260\345\211\215\347\255\211\345\276\205\346\227\266\351\227\264"];
  if (this->timepre() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_timepre(), target);
  }

  // int32 timeAfter = 8 [(.field) = "\350\264\255\344\271\260\345\220\216\347\255\211\345\276\205\346\227\266\351\227\264"];
  if (this->timeafter() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_timeafter(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RES.ResItem)
  return target;
}

size_t ResItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RES.ResItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2 [(.field) = "\347\211\251\345\223\201\345\220\215\347\247\260"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string icon = 3 [(.field) = "UI\345\233\276\346\240\207"];
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_icon());
  }

  // string image = 4 [(.field) = "\345\234\272\346\231\257\345\233\276\346\240\207"];
  if (this->image().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image());
  }

  // string desc = 5 [(.field) = "\347\211\251\345\223\201\346\217\217\350\277\260"];
  if (this->desc().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_desc());
  }

  // int32 id = 1 [(.field) = "\347\211\251\345\223\201ID"];
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 type = 6 [(.field) = "\347\211\251\345\223\201\347\261\273\345\236\213"];
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  // int32 timePre = 7 [(.field) = "\350\264\255\344\271\260\345\211\215\347\255\211\345\276\205\346\227\266\351\227\264"];
  if (this->timepre() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_timepre());
  }

  // int32 timeAfter = 8 [(.field) = "\350\264\255\344\271\260\345\220\216\347\255\211\345\276\205\346\227\266\351\227\264"];
  if (this->timeafter() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_timeafter());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RES.ResItem)
  GOOGLE_DCHECK_NE(&from, this);
  const ResItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RES.ResItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RES.ResItem)
    MergeFrom(*source);
  }
}

void ResItem::MergeFrom(const ResItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RES.ResItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.icon().size() > 0) {
    _internal_set_icon(from._internal_icon());
  }
  if (from.image().size() > 0) {
    _internal_set_image(from._internal_image());
  }
  if (from.desc().size() > 0) {
    _internal_set_desc(from._internal_desc());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.timepre() != 0) {
    _internal_set_timepre(from._internal_timepre());
  }
  if (from.timeafter() != 0) {
    _internal_set_timeafter(from._internal_timeafter());
  }
}

void ResItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RES.ResItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResItem::CopyFrom(const ResItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RES.ResItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResItem::IsInitialized() const {
  return true;
}

void ResItem::InternalSwap(ResItem* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  icon_.Swap(&other->icon_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  image_.Swap(&other->image_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  desc_.Swap(&other->desc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResItem, timeafter_)
      + sizeof(ResItem::timeafter_)
      - PROTOBUF_FIELD_OFFSET(ResItem, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResItem::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[0]);
}

// ===================================================================

class ResItemArray::_Internal {
 public:
};

ResItemArray::ResItemArray(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  items_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:RES.ResItemArray)
}
ResItemArray::ResItemArray(const ResItemArray& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:RES.ResItemArray)
}

void ResItemArray::SharedCtor() {
}

ResItemArray::~ResItemArray() {
  // @@protoc_insertion_point(destructor:RES.ResItemArray)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResItemArray::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ResItemArray::ArenaDtor(void* object) {
  ResItemArray* _this = reinterpret_cast< ResItemArray* >(object);
  (void)_this;
}
void ResItemArray::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResItemArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResItemArray::Clear() {
// @@protoc_insertion_point(message_clear_start:RES.ResItemArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResItemArray::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .RES.ResItem items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResItemArray::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RES.ResItemArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .RES.ResItem items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RES.ResItemArray)
  return target;
}

size_t ResItemArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RES.ResItemArray)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .RES.ResItem items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResItemArray::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RES.ResItemArray)
  GOOGLE_DCHECK_NE(&from, this);
  const ResItemArray* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResItemArray>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RES.ResItemArray)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RES.ResItemArray)
    MergeFrom(*source);
  }
}

void ResItemArray::MergeFrom(const ResItemArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RES.ResItemArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ResItemArray::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RES.ResItemArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResItemArray::CopyFrom(const ResItemArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RES.ResItemArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResItemArray::IsInitialized() const {
  return true;
}

void ResItemArray::InternalSwap(ResItemArray* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResItemArray::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[1]);
}

// ===================================================================

class ResItemBag::_Internal {
 public:
};

ResItemBag::ResItemBag(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  drop_array_(arena),
  drop_count_array_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:RES.ResItemBag)
}
ResItemBag::ResItemBag(const ResItemBag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      drop_array_(from.drop_array_),
      drop_count_array_(from.drop_count_array_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_icon().empty()) {
    icon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_icon(), 
      GetArena());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&typeid__) -
    reinterpret_cast<char*>(&id_)) + sizeof(typeid__));
  // @@protoc_insertion_point(copy_constructor:RES.ResItemBag)
}

void ResItemBag::SharedCtor() {
icon_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&typeid__) -
    reinterpret_cast<char*>(&id_)) + sizeof(typeid__));
}

ResItemBag::~ResItemBag() {
  // @@protoc_insertion_point(destructor:RES.ResItemBag)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResItemBag::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  icon_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResItemBag::ArenaDtor(void* object) {
  ResItemBag* _this = reinterpret_cast< ResItemBag* >(object);
  (void)_this;
}
void ResItemBag::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResItemBag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResItemBag::Clear() {
// @@protoc_insertion_point(message_clear_start:RES.ResItemBag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drop_array_.Clear();
  drop_count_array_.Clear();
  icon_.ClearToEmpty();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&typeid__) -
      reinterpret_cast<char*>(&id_)) + sizeof(typeid__));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResItemBag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1 [(.field) = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 type = 2 [(.field) = "\347\247\215\347\261\273"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 typeId = 3 [(.field) = "\347\261\273\345\236\213ID"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          typeid__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 drop_array = 4 [(.field) = "\346\216\211\350\220\275"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_drop_array(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32) {
          _internal_add_drop_array(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 drop_count_array = 5 [(.field) = "\346\216\211\350\220\275count"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_drop_count_array(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40) {
          _internal_add_drop_count_array(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string icon = 6 [(.field) = "UI\346\230\276\347\244\272"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_icon();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "RES.ResItemBag.icon"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResItemBag::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RES.ResItemBag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1 [(.field) = "id"];
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 type = 2 [(.field) = "\347\247\215\347\261\273"];
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_type(), target);
  }

  // int32 typeId = 3 [(.field) = "\347\261\273\345\236\213ID"];
  if (this->typeid_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_typeid_(), target);
  }

  // repeated int32 drop_array = 4 [(.field) = "\346\216\211\350\220\275"];
  {
    int byte_size = _drop_array_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          4, _internal_drop_array(), byte_size, target);
    }
  }

  // repeated int32 drop_count_array = 5 [(.field) = "\346\216\211\350\220\275count"];
  {
    int byte_size = _drop_count_array_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          5, _internal_drop_count_array(), byte_size, target);
    }
  }

  // string icon = 6 [(.field) = "UI\346\230\276\347\244\272"];
  if (this->icon().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_icon().data(), static_cast<int>(this->_internal_icon().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "RES.ResItemBag.icon");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_icon(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RES.ResItemBag)
  return target;
}

size_t ResItemBag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RES.ResItemBag)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 drop_array = 4 [(.field) = "\346\216\211\350\220\275"];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->drop_array_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _drop_array_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated int32 drop_count_array = 5 [(.field) = "\346\216\211\350\220\275count"];
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->drop_count_array_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _drop_count_array_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string icon = 6 [(.field) = "UI\346\230\276\347\244\272"];
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_icon());
  }

  // int32 id = 1 [(.field) = "id"];
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 type = 2 [(.field) = "\347\247\215\347\261\273"];
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_type());
  }

  // int32 typeId = 3 [(.field) = "\347\261\273\345\236\213ID"];
  if (this->typeid_() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_typeid_());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResItemBag::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RES.ResItemBag)
  GOOGLE_DCHECK_NE(&from, this);
  const ResItemBag* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResItemBag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RES.ResItemBag)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RES.ResItemBag)
    MergeFrom(*source);
  }
}

void ResItemBag::MergeFrom(const ResItemBag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RES.ResItemBag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  drop_array_.MergeFrom(from.drop_array_);
  drop_count_array_.MergeFrom(from.drop_count_array_);
  if (from.icon().size() > 0) {
    _internal_set_icon(from._internal_icon());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.typeid_() != 0) {
    _internal_set_typeid_(from._internal_typeid_());
  }
}

void ResItemBag::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RES.ResItemBag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResItemBag::CopyFrom(const ResItemBag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RES.ResItemBag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResItemBag::IsInitialized() const {
  return true;
}

void ResItemBag::InternalSwap(ResItemBag* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  drop_array_.InternalSwap(&other->drop_array_);
  drop_count_array_.InternalSwap(&other->drop_count_array_);
  icon_.Swap(&other->icon_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResItemBag, typeid__)
      + sizeof(ResItemBag::typeid__)
      - PROTOBUF_FIELD_OFFSET(ResItemBag, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResItemBag::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[2]);
}

// ===================================================================

class ResItemBagArray::_Internal {
 public:
};

ResItemBagArray::ResItemBagArray(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  items_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:RES.ResItemBagArray)
}
ResItemBagArray::ResItemBagArray(const ResItemBagArray& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:RES.ResItemBagArray)
}

void ResItemBagArray::SharedCtor() {
}

ResItemBagArray::~ResItemBagArray() {
  // @@protoc_insertion_point(destructor:RES.ResItemBagArray)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResItemBagArray::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ResItemBagArray::ArenaDtor(void* object) {
  ResItemBagArray* _this = reinterpret_cast< ResItemBagArray* >(object);
  (void)_this;
}
void ResItemBagArray::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResItemBagArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResItemBagArray::Clear() {
// @@protoc_insertion_point(message_clear_start:RES.ResItemBagArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResItemBagArray::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .RES.ResItemBag items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResItemBagArray::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RES.ResItemBagArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .RES.ResItemBag items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RES.ResItemBagArray)
  return target;
}

size_t ResItemBagArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RES.ResItemBagArray)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .RES.ResItemBag items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResItemBagArray::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RES.ResItemBagArray)
  GOOGLE_DCHECK_NE(&from, this);
  const ResItemBagArray* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResItemBagArray>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RES.ResItemBagArray)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RES.ResItemBagArray)
    MergeFrom(*source);
  }
}

void ResItemBagArray::MergeFrom(const ResItemBagArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RES.ResItemBagArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ResItemBagArray::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RES.ResItemBagArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResItemBagArray::CopyFrom(const ResItemBagArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RES.ResItemBagArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResItemBagArray::IsInitialized() const {
  return true;
}

void ResItemBagArray::InternalSwap(ResItemBagArray* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResItemBagArray::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[3]);
}

// ===================================================================

class ResItemDrop::_Internal {
 public:
};

void ResItemDrop::clear_reward1_list() {
  reward1_list_.Clear();
}
void ResItemDrop::clear_reward2_list() {
  reward2_list_.Clear();
}
ResItemDrop::ResItemDrop(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  reward1_list_(arena),
  reward2_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:RES.ResItemDrop)
}
ResItemDrop::ResItemDrop(const ResItemDrop& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      reward1_list_(from.reward1_list_),
      reward2_list_(from.reward2_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_image().empty()) {
    image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_image(), 
      GetArena());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rewardprobability2_) -
    reinterpret_cast<char*>(&id_)) + sizeof(rewardprobability2_));
  // @@protoc_insertion_point(copy_constructor:RES.ResItemDrop)
}

void ResItemDrop::SharedCtor() {
image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rewardprobability2_) -
    reinterpret_cast<char*>(&id_)) + sizeof(rewardprobability2_));
}

ResItemDrop::~ResItemDrop() {
  // @@protoc_insertion_point(destructor:RES.ResItemDrop)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResItemDrop::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  image_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ResItemDrop::ArenaDtor(void* object) {
  ResItemDrop* _this = reinterpret_cast< ResItemDrop* >(object);
  (void)_this;
}
void ResItemDrop::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResItemDrop::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResItemDrop::Clear() {
// @@protoc_insertion_point(message_clear_start:RES.ResItemDrop)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reward1_list_.Clear();
  reward2_list_.Clear();
  image_.ClearToEmpty();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rewardprobability2_) -
      reinterpret_cast<char*>(&id_)) + sizeof(rewardprobability2_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResItemDrop::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1 [(.field) = "id"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 dropType = 2 [(.field) = "\346\216\211\350\220\275\347\261\273\345\236\213"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          droptype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string image = 3 [(.field) = "\345\234\272\346\231\257\346\230\276\347\244\272"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_image();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "RES.ResItemDrop.image"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 sellExp = 4 [(.field) = "\345\270\246\350\264\247\347\273\217\351\252\214"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          sellexp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 rewardProbability1 = 5 [(.field) = "\345\245\226\345\212\2611\346\246\202\347\216\207"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          rewardprobability1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .RES.ResReward reward1_list = 6 [(.field) = "\345\245\226\345\212\2611"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_reward1_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 rewardProbability2 = 7 [(.field) = "\345\245\226\345\212\2612\346\246\202\347\216\207"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          rewardprobability2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .RES.ResReward reward2_list = 8 [(.field) = "\345\245\226\345\212\2612"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_reward2_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResItemDrop::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RES.ResItemDrop)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1 [(.field) = "id"];
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 dropType = 2 [(.field) = "\346\216\211\350\220\275\347\261\273\345\236\213"];
  if (this->droptype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_droptype(), target);
  }

  // string image = 3 [(.field) = "\345\234\272\346\231\257\346\230\276\347\244\272"];
  if (this->image().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_image().data(), static_cast<int>(this->_internal_image().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "RES.ResItemDrop.image");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_image(), target);
  }

  // int32 sellExp = 4 [(.field) = "\345\270\246\350\264\247\347\273\217\351\252\214"];
  if (this->sellexp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_sellexp(), target);
  }

  // int32 rewardProbability1 = 5 [(.field) = "\345\245\226\345\212\2611\346\246\202\347\216\207"];
  if (this->rewardprobability1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_rewardprobability1(), target);
  }

  // repeated .RES.ResReward reward1_list = 6 [(.field) = "\345\245\226\345\212\2611"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_reward1_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_reward1_list(i), target, stream);
  }

  // int32 rewardProbability2 = 7 [(.field) = "\345\245\226\345\212\2612\346\246\202\347\216\207"];
  if (this->rewardprobability2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_rewardprobability2(), target);
  }

  // repeated .RES.ResReward reward2_list = 8 [(.field) = "\345\245\226\345\212\2612"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_reward2_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_reward2_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RES.ResItemDrop)
  return target;
}

size_t ResItemDrop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RES.ResItemDrop)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .RES.ResReward reward1_list = 6 [(.field) = "\345\245\226\345\212\2611"];
  total_size += 1UL * this->_internal_reward1_list_size();
  for (const auto& msg : this->reward1_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .RES.ResReward reward2_list = 8 [(.field) = "\345\245\226\345\212\2612"];
  total_size += 1UL * this->_internal_reward2_list_size();
  for (const auto& msg : this->reward2_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string image = 3 [(.field) = "\345\234\272\346\231\257\346\230\276\347\244\272"];
  if (this->image().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_image());
  }

  // int32 id = 1 [(.field) = "id"];
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 dropType = 2 [(.field) = "\346\216\211\350\220\275\347\261\273\345\236\213"];
  if (this->droptype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_droptype());
  }

  // int32 sellExp = 4 [(.field) = "\345\270\246\350\264\247\347\273\217\351\252\214"];
  if (this->sellexp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sellexp());
  }

  // int32 rewardProbability1 = 5 [(.field) = "\345\245\226\345\212\2611\346\246\202\347\216\207"];
  if (this->rewardprobability1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rewardprobability1());
  }

  // int32 rewardProbability2 = 7 [(.field) = "\345\245\226\345\212\2612\346\246\202\347\216\207"];
  if (this->rewardprobability2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_rewardprobability2());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResItemDrop::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RES.ResItemDrop)
  GOOGLE_DCHECK_NE(&from, this);
  const ResItemDrop* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResItemDrop>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RES.ResItemDrop)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RES.ResItemDrop)
    MergeFrom(*source);
  }
}

void ResItemDrop::MergeFrom(const ResItemDrop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RES.ResItemDrop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reward1_list_.MergeFrom(from.reward1_list_);
  reward2_list_.MergeFrom(from.reward2_list_);
  if (from.image().size() > 0) {
    _internal_set_image(from._internal_image());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.droptype() != 0) {
    _internal_set_droptype(from._internal_droptype());
  }
  if (from.sellexp() != 0) {
    _internal_set_sellexp(from._internal_sellexp());
  }
  if (from.rewardprobability1() != 0) {
    _internal_set_rewardprobability1(from._internal_rewardprobability1());
  }
  if (from.rewardprobability2() != 0) {
    _internal_set_rewardprobability2(from._internal_rewardprobability2());
  }
}

void ResItemDrop::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RES.ResItemDrop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResItemDrop::CopyFrom(const ResItemDrop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RES.ResItemDrop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResItemDrop::IsInitialized() const {
  return true;
}

void ResItemDrop::InternalSwap(ResItemDrop* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  reward1_list_.InternalSwap(&other->reward1_list_);
  reward2_list_.InternalSwap(&other->reward2_list_);
  image_.Swap(&other->image_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResItemDrop, rewardprobability2_)
      + sizeof(ResItemDrop::rewardprobability2_)
      - PROTOBUF_FIELD_OFFSET(ResItemDrop, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResItemDrop::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[4]);
}

// ===================================================================

class ResItemDropArray::_Internal {
 public:
};

ResItemDropArray::ResItemDropArray(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  items_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:RES.ResItemDropArray)
}
ResItemDropArray::ResItemDropArray(const ResItemDropArray& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:RES.ResItemDropArray)
}

void ResItemDropArray::SharedCtor() {
}

ResItemDropArray::~ResItemDropArray() {
  // @@protoc_insertion_point(destructor:RES.ResItemDropArray)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResItemDropArray::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ResItemDropArray::ArenaDtor(void* object) {
  ResItemDropArray* _this = reinterpret_cast< ResItemDropArray* >(object);
  (void)_this;
}
void ResItemDropArray::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResItemDropArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResItemDropArray::Clear() {
// @@protoc_insertion_point(message_clear_start:RES.ResItemDropArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResItemDropArray::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .RES.ResItemDrop items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResItemDropArray::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RES.ResItemDropArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .RES.ResItemDrop items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RES.ResItemDropArray)
  return target;
}

size_t ResItemDropArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RES.ResItemDropArray)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .RES.ResItemDrop items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResItemDropArray::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RES.ResItemDropArray)
  GOOGLE_DCHECK_NE(&from, this);
  const ResItemDropArray* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResItemDropArray>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RES.ResItemDropArray)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RES.ResItemDropArray)
    MergeFrom(*source);
  }
}

void ResItemDropArray::MergeFrom(const ResItemDropArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RES.ResItemDropArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ResItemDropArray::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RES.ResItemDropArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResItemDropArray::CopyFrom(const ResItemDropArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RES.ResItemDropArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResItemDropArray::IsInitialized() const {
  return true;
}

void ResItemDropArray::InternalSwap(ResItemDropArray* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResItemDropArray::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[5]);
}

// ===================================================================

class ResItemRange::_Internal {
 public:
};

ResItemRange::ResItemRange(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:RES.ResItemRange)
}
ResItemRange::ResItemRange(const ResItemRange& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&ach_point_max_) -
    reinterpret_cast<char*>(&id_)) + sizeof(ach_point_max_));
  // @@protoc_insertion_point(copy_constructor:RES.ResItemRange)
}

void ResItemRange::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ach_point_max_) -
    reinterpret_cast<char*>(&id_)) + sizeof(ach_point_max_));
}

ResItemRange::~ResItemRange() {
  // @@protoc_insertion_point(destructor:RES.ResItemRange)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResItemRange::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ResItemRange::ArenaDtor(void* object) {
  ResItemRange* _this = reinterpret_cast< ResItemRange* >(object);
  (void)_this;
}
void ResItemRange::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResItemRange::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResItemRange::Clear() {
// @@protoc_insertion_point(message_clear_start:RES.ResItemRange)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ach_point_max_) -
      reinterpret_cast<char*>(&id_)) + sizeof(ach_point_max_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResItemRange::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 id = 1 [(.field) = "\346\276\241\345\240\202\347\255\211\347\272\247"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 coins_min = 2 [(.field) = "\351\207\221\345\270\201\344\270\213\351\231\220"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          coins_min_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 coins_max = 3 [(.field) = "\351\207\221\345\270\201\344\270\212\351\231\220"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          coins_max_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 diamond_min = 4 [(.field) = "\351\222\273\347\237\263\344\270\213\351\231\220"];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          diamond_min_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 diamond_max = 5 [(.field) = "\351\222\273\347\237\263\344\270\212\351\231\220"];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          diamond_max_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 exp_min = 6 [(.field) = "\347\273\217\351\252\214\344\270\213\351\231\220"];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          exp_min_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 exp_max = 7 [(.field) = "\347\273\217\351\252\214\344\270\212\351\231\220"];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          exp_max_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 power_min = 8 [(.field) = "\344\275\223\345\212\233\344\270\213\351\231\220"];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          power_min_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 power_max = 9 [(.field) = "\344\275\223\345\212\233\344\270\212\351\231\220"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          power_max_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ach_point_min = 10 [(.field) = "\346\210\220\345\260\261\347\202\271\344\270\213\351\231\220"];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ach_point_min_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 ach_point_max = 11 [(.field) = "\346\210\220\345\260\261\347\202\271\344\270\212\351\231\220"];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ach_point_max_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResItemRange::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RES.ResItemRange)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1 [(.field) = "\346\276\241\345\240\202\347\255\211\347\272\247"];
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_id(), target);
  }

  // int32 coins_min = 2 [(.field) = "\351\207\221\345\270\201\344\270\213\351\231\220"];
  if (this->coins_min() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_coins_min(), target);
  }

  // int32 coins_max = 3 [(.field) = "\351\207\221\345\270\201\344\270\212\351\231\220"];
  if (this->coins_max() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_coins_max(), target);
  }

  // int32 diamond_min = 4 [(.field) = "\351\222\273\347\237\263\344\270\213\351\231\220"];
  if (this->diamond_min() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_diamond_min(), target);
  }

  // int32 diamond_max = 5 [(.field) = "\351\222\273\347\237\263\344\270\212\351\231\220"];
  if (this->diamond_max() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_diamond_max(), target);
  }

  // int32 exp_min = 6 [(.field) = "\347\273\217\351\252\214\344\270\213\351\231\220"];
  if (this->exp_min() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_exp_min(), target);
  }

  // int32 exp_max = 7 [(.field) = "\347\273\217\351\252\214\344\270\212\351\231\220"];
  if (this->exp_max() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_exp_max(), target);
  }

  // int32 power_min = 8 [(.field) = "\344\275\223\345\212\233\344\270\213\351\231\220"];
  if (this->power_min() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_power_min(), target);
  }

  // int32 power_max = 9 [(.field) = "\344\275\223\345\212\233\344\270\212\351\231\220"];
  if (this->power_max() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_power_max(), target);
  }

  // int32 ach_point_min = 10 [(.field) = "\346\210\220\345\260\261\347\202\271\344\270\213\351\231\220"];
  if (this->ach_point_min() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(10, this->_internal_ach_point_min(), target);
  }

  // int32 ach_point_max = 11 [(.field) = "\346\210\220\345\260\261\347\202\271\344\270\212\351\231\220"];
  if (this->ach_point_max() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(11, this->_internal_ach_point_max(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RES.ResItemRange)
  return target;
}

size_t ResItemRange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RES.ResItemRange)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 id = 1 [(.field) = "\346\276\241\345\240\202\347\255\211\347\272\247"];
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_id());
  }

  // int32 coins_min = 2 [(.field) = "\351\207\221\345\270\201\344\270\213\351\231\220"];
  if (this->coins_min() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_coins_min());
  }

  // int32 coins_max = 3 [(.field) = "\351\207\221\345\270\201\344\270\212\351\231\220"];
  if (this->coins_max() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_coins_max());
  }

  // int32 diamond_min = 4 [(.field) = "\351\222\273\347\237\263\344\270\213\351\231\220"];
  if (this->diamond_min() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_diamond_min());
  }

  // int32 diamond_max = 5 [(.field) = "\351\222\273\347\237\263\344\270\212\351\231\220"];
  if (this->diamond_max() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_diamond_max());
  }

  // int32 exp_min = 6 [(.field) = "\347\273\217\351\252\214\344\270\213\351\231\220"];
  if (this->exp_min() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_exp_min());
  }

  // int32 exp_max = 7 [(.field) = "\347\273\217\351\252\214\344\270\212\351\231\220"];
  if (this->exp_max() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_exp_max());
  }

  // int32 power_min = 8 [(.field) = "\344\275\223\345\212\233\344\270\213\351\231\220"];
  if (this->power_min() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_power_min());
  }

  // int32 power_max = 9 [(.field) = "\344\275\223\345\212\233\344\270\212\351\231\220"];
  if (this->power_max() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_power_max());
  }

  // int32 ach_point_min = 10 [(.field) = "\346\210\220\345\260\261\347\202\271\344\270\213\351\231\220"];
  if (this->ach_point_min() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ach_point_min());
  }

  // int32 ach_point_max = 11 [(.field) = "\346\210\220\345\260\261\347\202\271\344\270\212\351\231\220"];
  if (this->ach_point_max() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ach_point_max());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResItemRange::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RES.ResItemRange)
  GOOGLE_DCHECK_NE(&from, this);
  const ResItemRange* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResItemRange>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RES.ResItemRange)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RES.ResItemRange)
    MergeFrom(*source);
  }
}

void ResItemRange::MergeFrom(const ResItemRange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RES.ResItemRange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.coins_min() != 0) {
    _internal_set_coins_min(from._internal_coins_min());
  }
  if (from.coins_max() != 0) {
    _internal_set_coins_max(from._internal_coins_max());
  }
  if (from.diamond_min() != 0) {
    _internal_set_diamond_min(from._internal_diamond_min());
  }
  if (from.diamond_max() != 0) {
    _internal_set_diamond_max(from._internal_diamond_max());
  }
  if (from.exp_min() != 0) {
    _internal_set_exp_min(from._internal_exp_min());
  }
  if (from.exp_max() != 0) {
    _internal_set_exp_max(from._internal_exp_max());
  }
  if (from.power_min() != 0) {
    _internal_set_power_min(from._internal_power_min());
  }
  if (from.power_max() != 0) {
    _internal_set_power_max(from._internal_power_max());
  }
  if (from.ach_point_min() != 0) {
    _internal_set_ach_point_min(from._internal_ach_point_min());
  }
  if (from.ach_point_max() != 0) {
    _internal_set_ach_point_max(from._internal_ach_point_max());
  }
}

void ResItemRange::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RES.ResItemRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResItemRange::CopyFrom(const ResItemRange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RES.ResItemRange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResItemRange::IsInitialized() const {
  return true;
}

void ResItemRange::InternalSwap(ResItemRange* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ResItemRange, ach_point_max_)
      + sizeof(ResItemRange::ach_point_max_)
      - PROTOBUF_FIELD_OFFSET(ResItemRange, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ResItemRange::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[6]);
}

// ===================================================================

class ResItemRangeArray::_Internal {
 public:
};

ResItemRangeArray::ResItemRangeArray(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  items_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:RES.ResItemRangeArray)
}
ResItemRangeArray::ResItemRangeArray(const ResItemRangeArray& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      items_(from.items_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:RES.ResItemRangeArray)
}

void ResItemRangeArray::SharedCtor() {
}

ResItemRangeArray::~ResItemRangeArray() {
  // @@protoc_insertion_point(destructor:RES.ResItemRangeArray)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ResItemRangeArray::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ResItemRangeArray::ArenaDtor(void* object) {
  ResItemRangeArray* _this = reinterpret_cast< ResItemRangeArray* >(object);
  (void)_this;
}
void ResItemRangeArray::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ResItemRangeArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ResItemRangeArray::Clear() {
// @@protoc_insertion_point(message_clear_start:RES.ResItemRangeArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResItemRangeArray::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .RES.ResItemRange items = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_items(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ResItemRangeArray::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RES.ResItemRangeArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .RES.ResItemRange items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_items_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_items(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RES.ResItemRangeArray)
  return target;
}

size_t ResItemRangeArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RES.ResItemRangeArray)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .RES.ResItemRange items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->items_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResItemRangeArray::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RES.ResItemRangeArray)
  GOOGLE_DCHECK_NE(&from, this);
  const ResItemRangeArray* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ResItemRangeArray>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RES.ResItemRangeArray)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RES.ResItemRangeArray)
    MergeFrom(*source);
  }
}

void ResItemRangeArray::MergeFrom(const ResItemRangeArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RES.ResItemRangeArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void ResItemRangeArray::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RES.ResItemRangeArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResItemRangeArray::CopyFrom(const ResItemRangeArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RES.ResItemRangeArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResItemRangeArray::IsInitialized() const {
  return true;
}

void ResItemRangeArray::InternalSwap(ResItemRangeArray* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  items_.InternalSwap(&other->items_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResItemRangeArray::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_item_2eproto_getter, &descriptor_table_item_2eproto_once,
      file_level_metadata_item_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace RES
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::RES::ResItem* Arena::CreateMaybeMessage< ::RES::ResItem >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RES::ResItem >(arena);
}
template<> PROTOBUF_NOINLINE ::RES::ResItemArray* Arena::CreateMaybeMessage< ::RES::ResItemArray >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RES::ResItemArray >(arena);
}
template<> PROTOBUF_NOINLINE ::RES::ResItemBag* Arena::CreateMaybeMessage< ::RES::ResItemBag >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RES::ResItemBag >(arena);
}
template<> PROTOBUF_NOINLINE ::RES::ResItemBagArray* Arena::CreateMaybeMessage< ::RES::ResItemBagArray >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RES::ResItemBagArray >(arena);
}
template<> PROTOBUF_NOINLINE ::RES::ResItemDrop* Arena::CreateMaybeMessage< ::RES::ResItemDrop >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RES::ResItemDrop >(arena);
}
template<> PROTOBUF_NOINLINE ::RES::ResItemDropArray* Arena::CreateMaybeMessage< ::RES::ResItemDropArray >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RES::ResItemDropArray >(arena);
}
template<> PROTOBUF_NOINLINE ::RES::ResItemRange* Arena::CreateMaybeMessage< ::RES::ResItemRange >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RES::ResItemRange >(arena);
}
template<> PROTOBUF_NOINLINE ::RES::ResItemRangeArray* Arena::CreateMaybeMessage< ::RES::ResItemRangeArray >(Arena* arena) {
  return Arena::CreateMessageInternal< ::RES::ResItemRangeArray >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
