// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: item.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_item_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_item_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3016000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3016000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "tsv2pb.pb.h"
#include "keywords.pb.h"
#include "keywords_client.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_item_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_item_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[8]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_item_2eproto;
namespace RES {
class ResItem;
struct ResItemDefaultTypeInternal;
extern ResItemDefaultTypeInternal _ResItem_default_instance_;
class ResItemArray;
struct ResItemArrayDefaultTypeInternal;
extern ResItemArrayDefaultTypeInternal _ResItemArray_default_instance_;
class ResItemBag;
struct ResItemBagDefaultTypeInternal;
extern ResItemBagDefaultTypeInternal _ResItemBag_default_instance_;
class ResItemBagArray;
struct ResItemBagArrayDefaultTypeInternal;
extern ResItemBagArrayDefaultTypeInternal _ResItemBagArray_default_instance_;
class ResItemDrop;
struct ResItemDropDefaultTypeInternal;
extern ResItemDropDefaultTypeInternal _ResItemDrop_default_instance_;
class ResItemDropArray;
struct ResItemDropArrayDefaultTypeInternal;
extern ResItemDropArrayDefaultTypeInternal _ResItemDropArray_default_instance_;
class ResItemRange;
struct ResItemRangeDefaultTypeInternal;
extern ResItemRangeDefaultTypeInternal _ResItemRange_default_instance_;
class ResItemRangeArray;
struct ResItemRangeArrayDefaultTypeInternal;
extern ResItemRangeArrayDefaultTypeInternal _ResItemRangeArray_default_instance_;
}  // namespace RES
PROTOBUF_NAMESPACE_OPEN
template<> ::RES::ResItem* Arena::CreateMaybeMessage<::RES::ResItem>(Arena*);
template<> ::RES::ResItemArray* Arena::CreateMaybeMessage<::RES::ResItemArray>(Arena*);
template<> ::RES::ResItemBag* Arena::CreateMaybeMessage<::RES::ResItemBag>(Arena*);
template<> ::RES::ResItemBagArray* Arena::CreateMaybeMessage<::RES::ResItemBagArray>(Arena*);
template<> ::RES::ResItemDrop* Arena::CreateMaybeMessage<::RES::ResItemDrop>(Arena*);
template<> ::RES::ResItemDropArray* Arena::CreateMaybeMessage<::RES::ResItemDropArray>(Arena*);
template<> ::RES::ResItemRange* Arena::CreateMaybeMessage<::RES::ResItemRange>(Arena*);
template<> ::RES::ResItemRangeArray* Arena::CreateMaybeMessage<::RES::ResItemRangeArray>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace RES {

// ===================================================================

class ResItem PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RES.ResItem) */ {
 public:
  inline ResItem() : ResItem(nullptr) {}
  ~ResItem() override;
  explicit constexpr ResItem(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResItem(const ResItem& from);
  ResItem(ResItem&& from) noexcept
    : ResItem() {
    *this = ::std::move(from);
  }

  inline ResItem& operator=(const ResItem& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResItem& operator=(ResItem&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResItem& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResItem* internal_default_instance() {
    return reinterpret_cast<const ResItem*>(
               &_ResItem_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ResItem& a, ResItem& b) {
    a.Swap(&b);
  }
  inline void Swap(ResItem* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResItem* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResItem* New() const final {
    return CreateMaybeMessage<ResItem>(nullptr);
  }

  ResItem* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResItem>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResItem& from);
  void MergeFrom(const ResItem& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResItem* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RES.ResItem";
  }
  protected:
  explicit ResItem(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kIconFieldNumber = 3,
    kImageFieldNumber = 4,
    kDescFieldNumber = 5,
    kIdFieldNumber = 1,
    kTypeFieldNumber = 6,
    kTimePreFieldNumber = 7,
    kTimeAfterFieldNumber = 8,
  };
  // string name = 2 [(.field) = "\347\211\251\345\223\201\345\220\215\347\247\260"];
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string icon = 3 [(.field) = "UI\345\233\276\346\240\207"];
  void clear_icon();
  const std::string& icon() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_icon(ArgT0&& arg0, ArgT... args);
  std::string* mutable_icon();
  std::string* release_icon();
  void set_allocated_icon(std::string* icon);
  private:
  const std::string& _internal_icon() const;
  void _internal_set_icon(const std::string& value);
  std::string* _internal_mutable_icon();
  public:

  // string image = 4 [(.field) = "\345\234\272\346\231\257\345\233\276\346\240\207"];
  void clear_image();
  const std::string& image() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_image(ArgT0&& arg0, ArgT... args);
  std::string* mutable_image();
  std::string* release_image();
  void set_allocated_image(std::string* image);
  private:
  const std::string& _internal_image() const;
  void _internal_set_image(const std::string& value);
  std::string* _internal_mutable_image();
  public:

  // string desc = 5 [(.field) = "\347\211\251\345\223\201\346\217\217\350\277\260"];
  void clear_desc();
  const std::string& desc() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_desc(ArgT0&& arg0, ArgT... args);
  std::string* mutable_desc();
  std::string* release_desc();
  void set_allocated_desc(std::string* desc);
  private:
  const std::string& _internal_desc() const;
  void _internal_set_desc(const std::string& value);
  std::string* _internal_mutable_desc();
  public:

  // int32 id = 1 [(.field) = "\347\211\251\345\223\201ID"];
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 6 [(.field) = "\347\211\251\345\223\201\347\261\273\345\236\213"];
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 timePre = 7 [(.field) = "\350\264\255\344\271\260\345\211\215\347\255\211\345\276\205\346\227\266\351\227\264"];
  void clear_timepre();
  ::PROTOBUF_NAMESPACE_ID::int32 timepre() const;
  void set_timepre(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_timepre() const;
  void _internal_set_timepre(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 timeAfter = 8 [(.field) = "\350\264\255\344\271\260\345\220\216\347\255\211\345\276\205\346\227\266\351\227\264"];
  void clear_timeafter();
  ::PROTOBUF_NAMESPACE_ID::int32 timeafter() const;
  void set_timeafter(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_timeafter() const;
  void _internal_set_timeafter(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:RES.ResItem)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr icon_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr image_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr desc_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 timepre_;
  ::PROTOBUF_NAMESPACE_ID::int32 timeafter_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_item_2eproto;
};
// -------------------------------------------------------------------

class ResItemArray PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RES.ResItemArray) */ {
 public:
  inline ResItemArray() : ResItemArray(nullptr) {}
  ~ResItemArray() override;
  explicit constexpr ResItemArray(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResItemArray(const ResItemArray& from);
  ResItemArray(ResItemArray&& from) noexcept
    : ResItemArray() {
    *this = ::std::move(from);
  }

  inline ResItemArray& operator=(const ResItemArray& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResItemArray& operator=(ResItemArray&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResItemArray& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResItemArray* internal_default_instance() {
    return reinterpret_cast<const ResItemArray*>(
               &_ResItemArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ResItemArray& a, ResItemArray& b) {
    a.Swap(&b);
  }
  inline void Swap(ResItemArray* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResItemArray* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResItemArray* New() const final {
    return CreateMaybeMessage<ResItemArray>(nullptr);
  }

  ResItemArray* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResItemArray>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResItemArray& from);
  void MergeFrom(const ResItemArray& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResItemArray* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RES.ResItemArray";
  }
  protected:
  explicit ResItemArray(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .RES.ResItem items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  ::RES::ResItem* mutable_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItem >*
      mutable_items();
  private:
  const ::RES::ResItem& _internal_items(int index) const;
  ::RES::ResItem* _internal_add_items();
  public:
  const ::RES::ResItem& items(int index) const;
  ::RES::ResItem* add_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItem >&
      items() const;

  // @@protoc_insertion_point(class_scope:RES.ResItemArray)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItem > items_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_item_2eproto;
};
// -------------------------------------------------------------------

class ResItemBag PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RES.ResItemBag) */ {
 public:
  inline ResItemBag() : ResItemBag(nullptr) {}
  ~ResItemBag() override;
  explicit constexpr ResItemBag(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResItemBag(const ResItemBag& from);
  ResItemBag(ResItemBag&& from) noexcept
    : ResItemBag() {
    *this = ::std::move(from);
  }

  inline ResItemBag& operator=(const ResItemBag& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResItemBag& operator=(ResItemBag&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResItemBag& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResItemBag* internal_default_instance() {
    return reinterpret_cast<const ResItemBag*>(
               &_ResItemBag_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ResItemBag& a, ResItemBag& b) {
    a.Swap(&b);
  }
  inline void Swap(ResItemBag* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResItemBag* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResItemBag* New() const final {
    return CreateMaybeMessage<ResItemBag>(nullptr);
  }

  ResItemBag* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResItemBag>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResItemBag& from);
  void MergeFrom(const ResItemBag& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResItemBag* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RES.ResItemBag";
  }
  protected:
  explicit ResItemBag(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDropArrayFieldNumber = 4,
    kDropCountArrayFieldNumber = 5,
    kIconFieldNumber = 6,
    kIdFieldNumber = 1,
    kTypeFieldNumber = 2,
    kTypeIdFieldNumber = 3,
  };
  // repeated int32 drop_array = 4 [(.field) = "\346\216\211\350\220\275"];
  int drop_array_size() const;
  private:
  int _internal_drop_array_size() const;
  public:
  void clear_drop_array();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_drop_array(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_drop_array() const;
  void _internal_add_drop_array(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_drop_array();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 drop_array(int index) const;
  void set_drop_array(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_drop_array(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      drop_array() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_drop_array();

  // repeated int32 drop_count_array = 5 [(.field) = "\346\216\211\350\220\275count"];
  int drop_count_array_size() const;
  private:
  int _internal_drop_count_array_size() const;
  public:
  void clear_drop_count_array();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_drop_count_array(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_drop_count_array() const;
  void _internal_add_drop_count_array(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_drop_count_array();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 drop_count_array(int index) const;
  void set_drop_count_array(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_drop_count_array(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      drop_count_array() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_drop_count_array();

  // string icon = 6 [(.field) = "UI\346\230\276\347\244\272"];
  void clear_icon();
  const std::string& icon() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_icon(ArgT0&& arg0, ArgT... args);
  std::string* mutable_icon();
  std::string* release_icon();
  void set_allocated_icon(std::string* icon);
  private:
  const std::string& _internal_icon() const;
  void _internal_set_icon(const std::string& value);
  std::string* _internal_mutable_icon();
  public:

  // int32 id = 1 [(.field) = "id"];
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 type = 2 [(.field) = "\347\247\215\347\261\273"];
  void clear_type();
  ::PROTOBUF_NAMESPACE_ID::int32 type() const;
  void set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_type() const;
  void _internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 typeId = 3 [(.field) = "\347\261\273\345\236\213ID"];
  void clear_typeid_();
  ::PROTOBUF_NAMESPACE_ID::int32 typeid_() const;
  void set_typeid_(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_typeid_() const;
  void _internal_set_typeid_(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:RES.ResItemBag)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > drop_array_;
  mutable std::atomic<int> _drop_array_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > drop_count_array_;
  mutable std::atomic<int> _drop_count_array_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr icon_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 type_;
  ::PROTOBUF_NAMESPACE_ID::int32 typeid__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_item_2eproto;
};
// -------------------------------------------------------------------

class ResItemBagArray PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RES.ResItemBagArray) */ {
 public:
  inline ResItemBagArray() : ResItemBagArray(nullptr) {}
  ~ResItemBagArray() override;
  explicit constexpr ResItemBagArray(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResItemBagArray(const ResItemBagArray& from);
  ResItemBagArray(ResItemBagArray&& from) noexcept
    : ResItemBagArray() {
    *this = ::std::move(from);
  }

  inline ResItemBagArray& operator=(const ResItemBagArray& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResItemBagArray& operator=(ResItemBagArray&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResItemBagArray& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResItemBagArray* internal_default_instance() {
    return reinterpret_cast<const ResItemBagArray*>(
               &_ResItemBagArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ResItemBagArray& a, ResItemBagArray& b) {
    a.Swap(&b);
  }
  inline void Swap(ResItemBagArray* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResItemBagArray* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResItemBagArray* New() const final {
    return CreateMaybeMessage<ResItemBagArray>(nullptr);
  }

  ResItemBagArray* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResItemBagArray>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResItemBagArray& from);
  void MergeFrom(const ResItemBagArray& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResItemBagArray* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RES.ResItemBagArray";
  }
  protected:
  explicit ResItemBagArray(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .RES.ResItemBag items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  ::RES::ResItemBag* mutable_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItemBag >*
      mutable_items();
  private:
  const ::RES::ResItemBag& _internal_items(int index) const;
  ::RES::ResItemBag* _internal_add_items();
  public:
  const ::RES::ResItemBag& items(int index) const;
  ::RES::ResItemBag* add_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItemBag >&
      items() const;

  // @@protoc_insertion_point(class_scope:RES.ResItemBagArray)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItemBag > items_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_item_2eproto;
};
// -------------------------------------------------------------------

class ResItemDrop PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RES.ResItemDrop) */ {
 public:
  inline ResItemDrop() : ResItemDrop(nullptr) {}
  ~ResItemDrop() override;
  explicit constexpr ResItemDrop(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResItemDrop(const ResItemDrop& from);
  ResItemDrop(ResItemDrop&& from) noexcept
    : ResItemDrop() {
    *this = ::std::move(from);
  }

  inline ResItemDrop& operator=(const ResItemDrop& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResItemDrop& operator=(ResItemDrop&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResItemDrop& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResItemDrop* internal_default_instance() {
    return reinterpret_cast<const ResItemDrop*>(
               &_ResItemDrop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ResItemDrop& a, ResItemDrop& b) {
    a.Swap(&b);
  }
  inline void Swap(ResItemDrop* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResItemDrop* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResItemDrop* New() const final {
    return CreateMaybeMessage<ResItemDrop>(nullptr);
  }

  ResItemDrop* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResItemDrop>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResItemDrop& from);
  void MergeFrom(const ResItemDrop& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResItemDrop* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RES.ResItemDrop";
  }
  protected:
  explicit ResItemDrop(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReward1ListFieldNumber = 6,
    kReward2ListFieldNumber = 8,
    kImageFieldNumber = 3,
    kIdFieldNumber = 1,
    kDropTypeFieldNumber = 2,
    kSellExpFieldNumber = 4,
    kRewardProbability1FieldNumber = 5,
    kRewardProbability2FieldNumber = 7,
  };
  // repeated .RES.ResReward reward1_list = 6 [(.field) = "\345\245\226\345\212\2611"];
  int reward1_list_size() const;
  private:
  int _internal_reward1_list_size() const;
  public:
  void clear_reward1_list();
  ::RES::ResReward* mutable_reward1_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResReward >*
      mutable_reward1_list();
  private:
  const ::RES::ResReward& _internal_reward1_list(int index) const;
  ::RES::ResReward* _internal_add_reward1_list();
  public:
  const ::RES::ResReward& reward1_list(int index) const;
  ::RES::ResReward* add_reward1_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResReward >&
      reward1_list() const;

  // repeated .RES.ResReward reward2_list = 8 [(.field) = "\345\245\226\345\212\2612"];
  int reward2_list_size() const;
  private:
  int _internal_reward2_list_size() const;
  public:
  void clear_reward2_list();
  ::RES::ResReward* mutable_reward2_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResReward >*
      mutable_reward2_list();
  private:
  const ::RES::ResReward& _internal_reward2_list(int index) const;
  ::RES::ResReward* _internal_add_reward2_list();
  public:
  const ::RES::ResReward& reward2_list(int index) const;
  ::RES::ResReward* add_reward2_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResReward >&
      reward2_list() const;

  // string image = 3 [(.field) = "\345\234\272\346\231\257\346\230\276\347\244\272"];
  void clear_image();
  const std::string& image() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_image(ArgT0&& arg0, ArgT... args);
  std::string* mutable_image();
  std::string* release_image();
  void set_allocated_image(std::string* image);
  private:
  const std::string& _internal_image() const;
  void _internal_set_image(const std::string& value);
  std::string* _internal_mutable_image();
  public:

  // int32 id = 1 [(.field) = "id"];
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 dropType = 2 [(.field) = "\346\216\211\350\220\275\347\261\273\345\236\213"];
  void clear_droptype();
  ::PROTOBUF_NAMESPACE_ID::int32 droptype() const;
  void set_droptype(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_droptype() const;
  void _internal_set_droptype(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 sellExp = 4 [(.field) = "\345\270\246\350\264\247\347\273\217\351\252\214"];
  void clear_sellexp();
  ::PROTOBUF_NAMESPACE_ID::int32 sellexp() const;
  void set_sellexp(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sellexp() const;
  void _internal_set_sellexp(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 rewardProbability1 = 5 [(.field) = "\345\245\226\345\212\2611\346\246\202\347\216\207"];
  void clear_rewardprobability1();
  ::PROTOBUF_NAMESPACE_ID::int32 rewardprobability1() const;
  void set_rewardprobability1(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rewardprobability1() const;
  void _internal_set_rewardprobability1(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 rewardProbability2 = 7 [(.field) = "\345\245\226\345\212\2612\346\246\202\347\216\207"];
  void clear_rewardprobability2();
  ::PROTOBUF_NAMESPACE_ID::int32 rewardprobability2() const;
  void set_rewardprobability2(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_rewardprobability2() const;
  void _internal_set_rewardprobability2(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:RES.ResItemDrop)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResReward > reward1_list_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResReward > reward2_list_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr image_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 droptype_;
  ::PROTOBUF_NAMESPACE_ID::int32 sellexp_;
  ::PROTOBUF_NAMESPACE_ID::int32 rewardprobability1_;
  ::PROTOBUF_NAMESPACE_ID::int32 rewardprobability2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_item_2eproto;
};
// -------------------------------------------------------------------

class ResItemDropArray PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RES.ResItemDropArray) */ {
 public:
  inline ResItemDropArray() : ResItemDropArray(nullptr) {}
  ~ResItemDropArray() override;
  explicit constexpr ResItemDropArray(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResItemDropArray(const ResItemDropArray& from);
  ResItemDropArray(ResItemDropArray&& from) noexcept
    : ResItemDropArray() {
    *this = ::std::move(from);
  }

  inline ResItemDropArray& operator=(const ResItemDropArray& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResItemDropArray& operator=(ResItemDropArray&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResItemDropArray& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResItemDropArray* internal_default_instance() {
    return reinterpret_cast<const ResItemDropArray*>(
               &_ResItemDropArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ResItemDropArray& a, ResItemDropArray& b) {
    a.Swap(&b);
  }
  inline void Swap(ResItemDropArray* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResItemDropArray* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResItemDropArray* New() const final {
    return CreateMaybeMessage<ResItemDropArray>(nullptr);
  }

  ResItemDropArray* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResItemDropArray>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResItemDropArray& from);
  void MergeFrom(const ResItemDropArray& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResItemDropArray* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RES.ResItemDropArray";
  }
  protected:
  explicit ResItemDropArray(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .RES.ResItemDrop items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  ::RES::ResItemDrop* mutable_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItemDrop >*
      mutable_items();
  private:
  const ::RES::ResItemDrop& _internal_items(int index) const;
  ::RES::ResItemDrop* _internal_add_items();
  public:
  const ::RES::ResItemDrop& items(int index) const;
  ::RES::ResItemDrop* add_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItemDrop >&
      items() const;

  // @@protoc_insertion_point(class_scope:RES.ResItemDropArray)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItemDrop > items_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_item_2eproto;
};
// -------------------------------------------------------------------

class ResItemRange PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RES.ResItemRange) */ {
 public:
  inline ResItemRange() : ResItemRange(nullptr) {}
  ~ResItemRange() override;
  explicit constexpr ResItemRange(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResItemRange(const ResItemRange& from);
  ResItemRange(ResItemRange&& from) noexcept
    : ResItemRange() {
    *this = ::std::move(from);
  }

  inline ResItemRange& operator=(const ResItemRange& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResItemRange& operator=(ResItemRange&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResItemRange& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResItemRange* internal_default_instance() {
    return reinterpret_cast<const ResItemRange*>(
               &_ResItemRange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ResItemRange& a, ResItemRange& b) {
    a.Swap(&b);
  }
  inline void Swap(ResItemRange* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResItemRange* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResItemRange* New() const final {
    return CreateMaybeMessage<ResItemRange>(nullptr);
  }

  ResItemRange* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResItemRange>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResItemRange& from);
  void MergeFrom(const ResItemRange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResItemRange* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RES.ResItemRange";
  }
  protected:
  explicit ResItemRange(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kCoinsMinFieldNumber = 2,
    kCoinsMaxFieldNumber = 3,
    kDiamondMinFieldNumber = 4,
    kDiamondMaxFieldNumber = 5,
    kExpMinFieldNumber = 6,
    kExpMaxFieldNumber = 7,
    kPowerMinFieldNumber = 8,
    kPowerMaxFieldNumber = 9,
    kAchPointMinFieldNumber = 10,
    kAchPointMaxFieldNumber = 11,
  };
  // int32 id = 1 [(.field) = "\346\276\241\345\240\202\347\255\211\347\272\247"];
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 coins_min = 2 [(.field) = "\351\207\221\345\270\201\344\270\213\351\231\220"];
  void clear_coins_min();
  ::PROTOBUF_NAMESPACE_ID::int32 coins_min() const;
  void set_coins_min(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_coins_min() const;
  void _internal_set_coins_min(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 coins_max = 3 [(.field) = "\351\207\221\345\270\201\344\270\212\351\231\220"];
  void clear_coins_max();
  ::PROTOBUF_NAMESPACE_ID::int32 coins_max() const;
  void set_coins_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_coins_max() const;
  void _internal_set_coins_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 diamond_min = 4 [(.field) = "\351\222\273\347\237\263\344\270\213\351\231\220"];
  void clear_diamond_min();
  ::PROTOBUF_NAMESPACE_ID::int32 diamond_min() const;
  void set_diamond_min(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_diamond_min() const;
  void _internal_set_diamond_min(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 diamond_max = 5 [(.field) = "\351\222\273\347\237\263\344\270\212\351\231\220"];
  void clear_diamond_max();
  ::PROTOBUF_NAMESPACE_ID::int32 diamond_max() const;
  void set_diamond_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_diamond_max() const;
  void _internal_set_diamond_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 exp_min = 6 [(.field) = "\347\273\217\351\252\214\344\270\213\351\231\220"];
  void clear_exp_min();
  ::PROTOBUF_NAMESPACE_ID::int32 exp_min() const;
  void set_exp_min(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_exp_min() const;
  void _internal_set_exp_min(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 exp_max = 7 [(.field) = "\347\273\217\351\252\214\344\270\212\351\231\220"];
  void clear_exp_max();
  ::PROTOBUF_NAMESPACE_ID::int32 exp_max() const;
  void set_exp_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_exp_max() const;
  void _internal_set_exp_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 power_min = 8 [(.field) = "\344\275\223\345\212\233\344\270\213\351\231\220"];
  void clear_power_min();
  ::PROTOBUF_NAMESPACE_ID::int32 power_min() const;
  void set_power_min(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_power_min() const;
  void _internal_set_power_min(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 power_max = 9 [(.field) = "\344\275\223\345\212\233\344\270\212\351\231\220"];
  void clear_power_max();
  ::PROTOBUF_NAMESPACE_ID::int32 power_max() const;
  void set_power_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_power_max() const;
  void _internal_set_power_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ach_point_min = 10 [(.field) = "\346\210\220\345\260\261\347\202\271\344\270\213\351\231\220"];
  void clear_ach_point_min();
  ::PROTOBUF_NAMESPACE_ID::int32 ach_point_min() const;
  void set_ach_point_min(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ach_point_min() const;
  void _internal_set_ach_point_min(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 ach_point_max = 11 [(.field) = "\346\210\220\345\260\261\347\202\271\344\270\212\351\231\220"];
  void clear_ach_point_max();
  ::PROTOBUF_NAMESPACE_ID::int32 ach_point_max() const;
  void set_ach_point_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ach_point_max() const;
  void _internal_set_ach_point_max(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:RES.ResItemRange)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 coins_min_;
  ::PROTOBUF_NAMESPACE_ID::int32 coins_max_;
  ::PROTOBUF_NAMESPACE_ID::int32 diamond_min_;
  ::PROTOBUF_NAMESPACE_ID::int32 diamond_max_;
  ::PROTOBUF_NAMESPACE_ID::int32 exp_min_;
  ::PROTOBUF_NAMESPACE_ID::int32 exp_max_;
  ::PROTOBUF_NAMESPACE_ID::int32 power_min_;
  ::PROTOBUF_NAMESPACE_ID::int32 power_max_;
  ::PROTOBUF_NAMESPACE_ID::int32 ach_point_min_;
  ::PROTOBUF_NAMESPACE_ID::int32 ach_point_max_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_item_2eproto;
};
// -------------------------------------------------------------------

class ResItemRangeArray PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:RES.ResItemRangeArray) */ {
 public:
  inline ResItemRangeArray() : ResItemRangeArray(nullptr) {}
  ~ResItemRangeArray() override;
  explicit constexpr ResItemRangeArray(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ResItemRangeArray(const ResItemRangeArray& from);
  ResItemRangeArray(ResItemRangeArray&& from) noexcept
    : ResItemRangeArray() {
    *this = ::std::move(from);
  }

  inline ResItemRangeArray& operator=(const ResItemRangeArray& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResItemRangeArray& operator=(ResItemRangeArray&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResItemRangeArray& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResItemRangeArray* internal_default_instance() {
    return reinterpret_cast<const ResItemRangeArray*>(
               &_ResItemRangeArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ResItemRangeArray& a, ResItemRangeArray& b) {
    a.Swap(&b);
  }
  inline void Swap(ResItemRangeArray* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResItemRangeArray* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ResItemRangeArray* New() const final {
    return CreateMaybeMessage<ResItemRangeArray>(nullptr);
  }

  ResItemRangeArray* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ResItemRangeArray>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ResItemRangeArray& from);
  void MergeFrom(const ResItemRangeArray& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ResItemRangeArray* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "RES.ResItemRangeArray";
  }
  protected:
  explicit ResItemRangeArray(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .RES.ResItemRange items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;
  public:
  void clear_items();
  ::RES::ResItemRange* mutable_items(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItemRange >*
      mutable_items();
  private:
  const ::RES::ResItemRange& _internal_items(int index) const;
  ::RES::ResItemRange* _internal_add_items();
  public:
  const ::RES::ResItemRange& items(int index) const;
  ::RES::ResItemRange* add_items();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItemRange >&
      items() const;

  // @@protoc_insertion_point(class_scope:RES.ResItemRangeArray)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItemRange > items_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_item_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ResItem

// int32 id = 1 [(.field) = "\347\211\251\345\223\201ID"];
inline void ResItem::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItem::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItem::id() const {
  // @@protoc_insertion_point(field_get:RES.ResItem.id)
  return _internal_id();
}
inline void ResItem::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void ResItem::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:RES.ResItem.id)
}

// string name = 2 [(.field) = "\347\211\251\345\223\201\345\220\215\347\247\260"];
inline void ResItem::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& ResItem::name() const {
  // @@protoc_insertion_point(field_get:RES.ResItem.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
PROTOBUF_ALWAYS_INLINE
inline void ResItem::set_name(ArgT0&& arg0, ArgT... args) {
 
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArena());
  // @@protoc_insertion_point(field_set:RES.ResItem.name)
}
inline std::string* ResItem::mutable_name() {
  // @@protoc_insertion_point(field_mutable:RES.ResItem.name)
  return _internal_mutable_name();
}
inline const std::string& ResItem::_internal_name() const {
  return name_.Get();
}
inline void ResItem::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline std::string* ResItem::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ResItem::release_name() {
  // @@protoc_insertion_point(field_release:RES.ResItem.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ResItem::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:RES.ResItem.name)
}

// string icon = 3 [(.field) = "UI\345\233\276\346\240\207"];
inline void ResItem::clear_icon() {
  icon_.ClearToEmpty();
}
inline const std::string& ResItem::icon() const {
  // @@protoc_insertion_point(field_get:RES.ResItem.icon)
  return _internal_icon();
}
template <typename ArgT0, typename... ArgT>
PROTOBUF_ALWAYS_INLINE
inline void ResItem::set_icon(ArgT0&& arg0, ArgT... args) {
 
 icon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArena());
  // @@protoc_insertion_point(field_set:RES.ResItem.icon)
}
inline std::string* ResItem::mutable_icon() {
  // @@protoc_insertion_point(field_mutable:RES.ResItem.icon)
  return _internal_mutable_icon();
}
inline const std::string& ResItem::_internal_icon() const {
  return icon_.Get();
}
inline void ResItem::_internal_set_icon(const std::string& value) {
  
  icon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline std::string* ResItem::_internal_mutable_icon() {
  
  return icon_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ResItem::release_icon() {
  // @@protoc_insertion_point(field_release:RES.ResItem.icon)
  return icon_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ResItem::set_allocated_icon(std::string* icon) {
  if (icon != nullptr) {
    
  } else {
    
  }
  icon_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), icon,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:RES.ResItem.icon)
}

// string image = 4 [(.field) = "\345\234\272\346\231\257\345\233\276\346\240\207"];
inline void ResItem::clear_image() {
  image_.ClearToEmpty();
}
inline const std::string& ResItem::image() const {
  // @@protoc_insertion_point(field_get:RES.ResItem.image)
  return _internal_image();
}
template <typename ArgT0, typename... ArgT>
PROTOBUF_ALWAYS_INLINE
inline void ResItem::set_image(ArgT0&& arg0, ArgT... args) {
 
 image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArena());
  // @@protoc_insertion_point(field_set:RES.ResItem.image)
}
inline std::string* ResItem::mutable_image() {
  // @@protoc_insertion_point(field_mutable:RES.ResItem.image)
  return _internal_mutable_image();
}
inline const std::string& ResItem::_internal_image() const {
  return image_.Get();
}
inline void ResItem::_internal_set_image(const std::string& value) {
  
  image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline std::string* ResItem::_internal_mutable_image() {
  
  return image_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ResItem::release_image() {
  // @@protoc_insertion_point(field_release:RES.ResItem.image)
  return image_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ResItem::set_allocated_image(std::string* image) {
  if (image != nullptr) {
    
  } else {
    
  }
  image_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), image,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:RES.ResItem.image)
}

// string desc = 5 [(.field) = "\347\211\251\345\223\201\346\217\217\350\277\260"];
inline void ResItem::clear_desc() {
  desc_.ClearToEmpty();
}
inline const std::string& ResItem::desc() const {
  // @@protoc_insertion_point(field_get:RES.ResItem.desc)
  return _internal_desc();
}
template <typename ArgT0, typename... ArgT>
PROTOBUF_ALWAYS_INLINE
inline void ResItem::set_desc(ArgT0&& arg0, ArgT... args) {
 
 desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArena());
  // @@protoc_insertion_point(field_set:RES.ResItem.desc)
}
inline std::string* ResItem::mutable_desc() {
  // @@protoc_insertion_point(field_mutable:RES.ResItem.desc)
  return _internal_mutable_desc();
}
inline const std::string& ResItem::_internal_desc() const {
  return desc_.Get();
}
inline void ResItem::_internal_set_desc(const std::string& value) {
  
  desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline std::string* ResItem::_internal_mutable_desc() {
  
  return desc_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ResItem::release_desc() {
  // @@protoc_insertion_point(field_release:RES.ResItem.desc)
  return desc_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ResItem::set_allocated_desc(std::string* desc) {
  if (desc != nullptr) {
    
  } else {
    
  }
  desc_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), desc,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:RES.ResItem.desc)
}

// int32 type = 6 [(.field) = "\347\211\251\345\223\201\347\261\273\345\236\213"];
inline void ResItem::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItem::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItem::type() const {
  // @@protoc_insertion_point(field_get:RES.ResItem.type)
  return _internal_type();
}
inline void ResItem::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void ResItem::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:RES.ResItem.type)
}

// int32 timePre = 7 [(.field) = "\350\264\255\344\271\260\345\211\215\347\255\211\345\276\205\346\227\266\351\227\264"];
inline void ResItem::clear_timepre() {
  timepre_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItem::_internal_timepre() const {
  return timepre_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItem::timepre() const {
  // @@protoc_insertion_point(field_get:RES.ResItem.timePre)
  return _internal_timepre();
}
inline void ResItem::_internal_set_timepre(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  timepre_ = value;
}
inline void ResItem::set_timepre(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_timepre(value);
  // @@protoc_insertion_point(field_set:RES.ResItem.timePre)
}

// int32 timeAfter = 8 [(.field) = "\350\264\255\344\271\260\345\220\216\347\255\211\345\276\205\346\227\266\351\227\264"];
inline void ResItem::clear_timeafter() {
  timeafter_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItem::_internal_timeafter() const {
  return timeafter_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItem::timeafter() const {
  // @@protoc_insertion_point(field_get:RES.ResItem.timeAfter)
  return _internal_timeafter();
}
inline void ResItem::_internal_set_timeafter(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  timeafter_ = value;
}
inline void ResItem::set_timeafter(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_timeafter(value);
  // @@protoc_insertion_point(field_set:RES.ResItem.timeAfter)
}

// -------------------------------------------------------------------

// ResItemArray

// repeated .RES.ResItem items = 1;
inline int ResItemArray::_internal_items_size() const {
  return items_.size();
}
inline int ResItemArray::items_size() const {
  return _internal_items_size();
}
inline void ResItemArray::clear_items() {
  items_.Clear();
}
inline ::RES::ResItem* ResItemArray::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:RES.ResItemArray.items)
  return items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItem >*
ResItemArray::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:RES.ResItemArray.items)
  return &items_;
}
inline const ::RES::ResItem& ResItemArray::_internal_items(int index) const {
  return items_.Get(index);
}
inline const ::RES::ResItem& ResItemArray::items(int index) const {
  // @@protoc_insertion_point(field_get:RES.ResItemArray.items)
  return _internal_items(index);
}
inline ::RES::ResItem* ResItemArray::_internal_add_items() {
  return items_.Add();
}
inline ::RES::ResItem* ResItemArray::add_items() {
  // @@protoc_insertion_point(field_add:RES.ResItemArray.items)
  return _internal_add_items();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItem >&
ResItemArray::items() const {
  // @@protoc_insertion_point(field_list:RES.ResItemArray.items)
  return items_;
}

// -------------------------------------------------------------------

// ResItemBag

// int32 id = 1 [(.field) = "id"];
inline void ResItemBag::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemBag::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemBag::id() const {
  // @@protoc_insertion_point(field_get:RES.ResItemBag.id)
  return _internal_id();
}
inline void ResItemBag::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void ResItemBag::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:RES.ResItemBag.id)
}

// int32 type = 2 [(.field) = "\347\247\215\347\261\273"];
inline void ResItemBag::clear_type() {
  type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemBag::_internal_type() const {
  return type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemBag::type() const {
  // @@protoc_insertion_point(field_get:RES.ResItemBag.type)
  return _internal_type();
}
inline void ResItemBag::_internal_set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  type_ = value;
}
inline void ResItemBag::set_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:RES.ResItemBag.type)
}

// int32 typeId = 3 [(.field) = "\347\261\273\345\236\213ID"];
inline void ResItemBag::clear_typeid_() {
  typeid__ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemBag::_internal_typeid_() const {
  return typeid__;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemBag::typeid_() const {
  // @@protoc_insertion_point(field_get:RES.ResItemBag.typeId)
  return _internal_typeid_();
}
inline void ResItemBag::_internal_set_typeid_(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  typeid__ = value;
}
inline void ResItemBag::set_typeid_(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_typeid_(value);
  // @@protoc_insertion_point(field_set:RES.ResItemBag.typeId)
}

// repeated int32 drop_array = 4 [(.field) = "\346\216\211\350\220\275"];
inline int ResItemBag::_internal_drop_array_size() const {
  return drop_array_.size();
}
inline int ResItemBag::drop_array_size() const {
  return _internal_drop_array_size();
}
inline void ResItemBag::clear_drop_array() {
  drop_array_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemBag::_internal_drop_array(int index) const {
  return drop_array_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemBag::drop_array(int index) const {
  // @@protoc_insertion_point(field_get:RES.ResItemBag.drop_array)
  return _internal_drop_array(index);
}
inline void ResItemBag::set_drop_array(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  drop_array_.Set(index, value);
  // @@protoc_insertion_point(field_set:RES.ResItemBag.drop_array)
}
inline void ResItemBag::_internal_add_drop_array(::PROTOBUF_NAMESPACE_ID::int32 value) {
  drop_array_.Add(value);
}
inline void ResItemBag::add_drop_array(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_drop_array(value);
  // @@protoc_insertion_point(field_add:RES.ResItemBag.drop_array)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ResItemBag::_internal_drop_array() const {
  return drop_array_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ResItemBag::drop_array() const {
  // @@protoc_insertion_point(field_list:RES.ResItemBag.drop_array)
  return _internal_drop_array();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ResItemBag::_internal_mutable_drop_array() {
  return &drop_array_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ResItemBag::mutable_drop_array() {
  // @@protoc_insertion_point(field_mutable_list:RES.ResItemBag.drop_array)
  return _internal_mutable_drop_array();
}

// repeated int32 drop_count_array = 5 [(.field) = "\346\216\211\350\220\275count"];
inline int ResItemBag::_internal_drop_count_array_size() const {
  return drop_count_array_.size();
}
inline int ResItemBag::drop_count_array_size() const {
  return _internal_drop_count_array_size();
}
inline void ResItemBag::clear_drop_count_array() {
  drop_count_array_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemBag::_internal_drop_count_array(int index) const {
  return drop_count_array_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemBag::drop_count_array(int index) const {
  // @@protoc_insertion_point(field_get:RES.ResItemBag.drop_count_array)
  return _internal_drop_count_array(index);
}
inline void ResItemBag::set_drop_count_array(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  drop_count_array_.Set(index, value);
  // @@protoc_insertion_point(field_set:RES.ResItemBag.drop_count_array)
}
inline void ResItemBag::_internal_add_drop_count_array(::PROTOBUF_NAMESPACE_ID::int32 value) {
  drop_count_array_.Add(value);
}
inline void ResItemBag::add_drop_count_array(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_drop_count_array(value);
  // @@protoc_insertion_point(field_add:RES.ResItemBag.drop_count_array)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ResItemBag::_internal_drop_count_array() const {
  return drop_count_array_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ResItemBag::drop_count_array() const {
  // @@protoc_insertion_point(field_list:RES.ResItemBag.drop_count_array)
  return _internal_drop_count_array();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ResItemBag::_internal_mutable_drop_count_array() {
  return &drop_count_array_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ResItemBag::mutable_drop_count_array() {
  // @@protoc_insertion_point(field_mutable_list:RES.ResItemBag.drop_count_array)
  return _internal_mutable_drop_count_array();
}

// string icon = 6 [(.field) = "UI\346\230\276\347\244\272"];
inline void ResItemBag::clear_icon() {
  icon_.ClearToEmpty();
}
inline const std::string& ResItemBag::icon() const {
  // @@protoc_insertion_point(field_get:RES.ResItemBag.icon)
  return _internal_icon();
}
template <typename ArgT0, typename... ArgT>
PROTOBUF_ALWAYS_INLINE
inline void ResItemBag::set_icon(ArgT0&& arg0, ArgT... args) {
 
 icon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArena());
  // @@protoc_insertion_point(field_set:RES.ResItemBag.icon)
}
inline std::string* ResItemBag::mutable_icon() {
  // @@protoc_insertion_point(field_mutable:RES.ResItemBag.icon)
  return _internal_mutable_icon();
}
inline const std::string& ResItemBag::_internal_icon() const {
  return icon_.Get();
}
inline void ResItemBag::_internal_set_icon(const std::string& value) {
  
  icon_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline std::string* ResItemBag::_internal_mutable_icon() {
  
  return icon_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ResItemBag::release_icon() {
  // @@protoc_insertion_point(field_release:RES.ResItemBag.icon)
  return icon_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ResItemBag::set_allocated_icon(std::string* icon) {
  if (icon != nullptr) {
    
  } else {
    
  }
  icon_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), icon,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:RES.ResItemBag.icon)
}

// -------------------------------------------------------------------

// ResItemBagArray

// repeated .RES.ResItemBag items = 1;
inline int ResItemBagArray::_internal_items_size() const {
  return items_.size();
}
inline int ResItemBagArray::items_size() const {
  return _internal_items_size();
}
inline void ResItemBagArray::clear_items() {
  items_.Clear();
}
inline ::RES::ResItemBag* ResItemBagArray::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:RES.ResItemBagArray.items)
  return items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItemBag >*
ResItemBagArray::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:RES.ResItemBagArray.items)
  return &items_;
}
inline const ::RES::ResItemBag& ResItemBagArray::_internal_items(int index) const {
  return items_.Get(index);
}
inline const ::RES::ResItemBag& ResItemBagArray::items(int index) const {
  // @@protoc_insertion_point(field_get:RES.ResItemBagArray.items)
  return _internal_items(index);
}
inline ::RES::ResItemBag* ResItemBagArray::_internal_add_items() {
  return items_.Add();
}
inline ::RES::ResItemBag* ResItemBagArray::add_items() {
  // @@protoc_insertion_point(field_add:RES.ResItemBagArray.items)
  return _internal_add_items();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItemBag >&
ResItemBagArray::items() const {
  // @@protoc_insertion_point(field_list:RES.ResItemBagArray.items)
  return items_;
}

// -------------------------------------------------------------------

// ResItemDrop

// int32 id = 1 [(.field) = "id"];
inline void ResItemDrop::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemDrop::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemDrop::id() const {
  // @@protoc_insertion_point(field_get:RES.ResItemDrop.id)
  return _internal_id();
}
inline void ResItemDrop::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void ResItemDrop::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:RES.ResItemDrop.id)
}

// int32 dropType = 2 [(.field) = "\346\216\211\350\220\275\347\261\273\345\236\213"];
inline void ResItemDrop::clear_droptype() {
  droptype_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemDrop::_internal_droptype() const {
  return droptype_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemDrop::droptype() const {
  // @@protoc_insertion_point(field_get:RES.ResItemDrop.dropType)
  return _internal_droptype();
}
inline void ResItemDrop::_internal_set_droptype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  droptype_ = value;
}
inline void ResItemDrop::set_droptype(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_droptype(value);
  // @@protoc_insertion_point(field_set:RES.ResItemDrop.dropType)
}

// string image = 3 [(.field) = "\345\234\272\346\231\257\346\230\276\347\244\272"];
inline void ResItemDrop::clear_image() {
  image_.ClearToEmpty();
}
inline const std::string& ResItemDrop::image() const {
  // @@protoc_insertion_point(field_get:RES.ResItemDrop.image)
  return _internal_image();
}
template <typename ArgT0, typename... ArgT>
PROTOBUF_ALWAYS_INLINE
inline void ResItemDrop::set_image(ArgT0&& arg0, ArgT... args) {
 
 image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArena());
  // @@protoc_insertion_point(field_set:RES.ResItemDrop.image)
}
inline std::string* ResItemDrop::mutable_image() {
  // @@protoc_insertion_point(field_mutable:RES.ResItemDrop.image)
  return _internal_mutable_image();
}
inline const std::string& ResItemDrop::_internal_image() const {
  return image_.Get();
}
inline void ResItemDrop::_internal_set_image(const std::string& value) {
  
  image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline std::string* ResItemDrop::_internal_mutable_image() {
  
  return image_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ResItemDrop::release_image() {
  // @@protoc_insertion_point(field_release:RES.ResItemDrop.image)
  return image_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ResItemDrop::set_allocated_image(std::string* image) {
  if (image != nullptr) {
    
  } else {
    
  }
  image_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), image,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:RES.ResItemDrop.image)
}

// int32 sellExp = 4 [(.field) = "\345\270\246\350\264\247\347\273\217\351\252\214"];
inline void ResItemDrop::clear_sellexp() {
  sellexp_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemDrop::_internal_sellexp() const {
  return sellexp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemDrop::sellexp() const {
  // @@protoc_insertion_point(field_get:RES.ResItemDrop.sellExp)
  return _internal_sellexp();
}
inline void ResItemDrop::_internal_set_sellexp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sellexp_ = value;
}
inline void ResItemDrop::set_sellexp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sellexp(value);
  // @@protoc_insertion_point(field_set:RES.ResItemDrop.sellExp)
}

// int32 rewardProbability1 = 5 [(.field) = "\345\245\226\345\212\2611\346\246\202\347\216\207"];
inline void ResItemDrop::clear_rewardprobability1() {
  rewardprobability1_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemDrop::_internal_rewardprobability1() const {
  return rewardprobability1_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemDrop::rewardprobability1() const {
  // @@protoc_insertion_point(field_get:RES.ResItemDrop.rewardProbability1)
  return _internal_rewardprobability1();
}
inline void ResItemDrop::_internal_set_rewardprobability1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rewardprobability1_ = value;
}
inline void ResItemDrop::set_rewardprobability1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_rewardprobability1(value);
  // @@protoc_insertion_point(field_set:RES.ResItemDrop.rewardProbability1)
}

// repeated .RES.ResReward reward1_list = 6 [(.field) = "\345\245\226\345\212\2611"];
inline int ResItemDrop::_internal_reward1_list_size() const {
  return reward1_list_.size();
}
inline int ResItemDrop::reward1_list_size() const {
  return _internal_reward1_list_size();
}
inline ::RES::ResReward* ResItemDrop::mutable_reward1_list(int index) {
  // @@protoc_insertion_point(field_mutable:RES.ResItemDrop.reward1_list)
  return reward1_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResReward >*
ResItemDrop::mutable_reward1_list() {
  // @@protoc_insertion_point(field_mutable_list:RES.ResItemDrop.reward1_list)
  return &reward1_list_;
}
inline const ::RES::ResReward& ResItemDrop::_internal_reward1_list(int index) const {
  return reward1_list_.Get(index);
}
inline const ::RES::ResReward& ResItemDrop::reward1_list(int index) const {
  // @@protoc_insertion_point(field_get:RES.ResItemDrop.reward1_list)
  return _internal_reward1_list(index);
}
inline ::RES::ResReward* ResItemDrop::_internal_add_reward1_list() {
  return reward1_list_.Add();
}
inline ::RES::ResReward* ResItemDrop::add_reward1_list() {
  // @@protoc_insertion_point(field_add:RES.ResItemDrop.reward1_list)
  return _internal_add_reward1_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResReward >&
ResItemDrop::reward1_list() const {
  // @@protoc_insertion_point(field_list:RES.ResItemDrop.reward1_list)
  return reward1_list_;
}

// int32 rewardProbability2 = 7 [(.field) = "\345\245\226\345\212\2612\346\246\202\347\216\207"];
inline void ResItemDrop::clear_rewardprobability2() {
  rewardprobability2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemDrop::_internal_rewardprobability2() const {
  return rewardprobability2_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemDrop::rewardprobability2() const {
  // @@protoc_insertion_point(field_get:RES.ResItemDrop.rewardProbability2)
  return _internal_rewardprobability2();
}
inline void ResItemDrop::_internal_set_rewardprobability2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  rewardprobability2_ = value;
}
inline void ResItemDrop::set_rewardprobability2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_rewardprobability2(value);
  // @@protoc_insertion_point(field_set:RES.ResItemDrop.rewardProbability2)
}

// repeated .RES.ResReward reward2_list = 8 [(.field) = "\345\245\226\345\212\2612"];
inline int ResItemDrop::_internal_reward2_list_size() const {
  return reward2_list_.size();
}
inline int ResItemDrop::reward2_list_size() const {
  return _internal_reward2_list_size();
}
inline ::RES::ResReward* ResItemDrop::mutable_reward2_list(int index) {
  // @@protoc_insertion_point(field_mutable:RES.ResItemDrop.reward2_list)
  return reward2_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResReward >*
ResItemDrop::mutable_reward2_list() {
  // @@protoc_insertion_point(field_mutable_list:RES.ResItemDrop.reward2_list)
  return &reward2_list_;
}
inline const ::RES::ResReward& ResItemDrop::_internal_reward2_list(int index) const {
  return reward2_list_.Get(index);
}
inline const ::RES::ResReward& ResItemDrop::reward2_list(int index) const {
  // @@protoc_insertion_point(field_get:RES.ResItemDrop.reward2_list)
  return _internal_reward2_list(index);
}
inline ::RES::ResReward* ResItemDrop::_internal_add_reward2_list() {
  return reward2_list_.Add();
}
inline ::RES::ResReward* ResItemDrop::add_reward2_list() {
  // @@protoc_insertion_point(field_add:RES.ResItemDrop.reward2_list)
  return _internal_add_reward2_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResReward >&
ResItemDrop::reward2_list() const {
  // @@protoc_insertion_point(field_list:RES.ResItemDrop.reward2_list)
  return reward2_list_;
}

// -------------------------------------------------------------------

// ResItemDropArray

// repeated .RES.ResItemDrop items = 1;
inline int ResItemDropArray::_internal_items_size() const {
  return items_.size();
}
inline int ResItemDropArray::items_size() const {
  return _internal_items_size();
}
inline void ResItemDropArray::clear_items() {
  items_.Clear();
}
inline ::RES::ResItemDrop* ResItemDropArray::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:RES.ResItemDropArray.items)
  return items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItemDrop >*
ResItemDropArray::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:RES.ResItemDropArray.items)
  return &items_;
}
inline const ::RES::ResItemDrop& ResItemDropArray::_internal_items(int index) const {
  return items_.Get(index);
}
inline const ::RES::ResItemDrop& ResItemDropArray::items(int index) const {
  // @@protoc_insertion_point(field_get:RES.ResItemDropArray.items)
  return _internal_items(index);
}
inline ::RES::ResItemDrop* ResItemDropArray::_internal_add_items() {
  return items_.Add();
}
inline ::RES::ResItemDrop* ResItemDropArray::add_items() {
  // @@protoc_insertion_point(field_add:RES.ResItemDropArray.items)
  return _internal_add_items();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItemDrop >&
ResItemDropArray::items() const {
  // @@protoc_insertion_point(field_list:RES.ResItemDropArray.items)
  return items_;
}

// -------------------------------------------------------------------

// ResItemRange

// int32 id = 1 [(.field) = "\346\276\241\345\240\202\347\255\211\347\272\247"];
inline void ResItemRange::clear_id() {
  id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::id() const {
  // @@protoc_insertion_point(field_get:RES.ResItemRange.id)
  return _internal_id();
}
inline void ResItemRange::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  id_ = value;
}
inline void ResItemRange::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:RES.ResItemRange.id)
}

// int32 coins_min = 2 [(.field) = "\351\207\221\345\270\201\344\270\213\351\231\220"];
inline void ResItemRange::clear_coins_min() {
  coins_min_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::_internal_coins_min() const {
  return coins_min_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::coins_min() const {
  // @@protoc_insertion_point(field_get:RES.ResItemRange.coins_min)
  return _internal_coins_min();
}
inline void ResItemRange::_internal_set_coins_min(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  coins_min_ = value;
}
inline void ResItemRange::set_coins_min(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_coins_min(value);
  // @@protoc_insertion_point(field_set:RES.ResItemRange.coins_min)
}

// int32 coins_max = 3 [(.field) = "\351\207\221\345\270\201\344\270\212\351\231\220"];
inline void ResItemRange::clear_coins_max() {
  coins_max_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::_internal_coins_max() const {
  return coins_max_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::coins_max() const {
  // @@protoc_insertion_point(field_get:RES.ResItemRange.coins_max)
  return _internal_coins_max();
}
inline void ResItemRange::_internal_set_coins_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  coins_max_ = value;
}
inline void ResItemRange::set_coins_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_coins_max(value);
  // @@protoc_insertion_point(field_set:RES.ResItemRange.coins_max)
}

// int32 diamond_min = 4 [(.field) = "\351\222\273\347\237\263\344\270\213\351\231\220"];
inline void ResItemRange::clear_diamond_min() {
  diamond_min_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::_internal_diamond_min() const {
  return diamond_min_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::diamond_min() const {
  // @@protoc_insertion_point(field_get:RES.ResItemRange.diamond_min)
  return _internal_diamond_min();
}
inline void ResItemRange::_internal_set_diamond_min(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  diamond_min_ = value;
}
inline void ResItemRange::set_diamond_min(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_diamond_min(value);
  // @@protoc_insertion_point(field_set:RES.ResItemRange.diamond_min)
}

// int32 diamond_max = 5 [(.field) = "\351\222\273\347\237\263\344\270\212\351\231\220"];
inline void ResItemRange::clear_diamond_max() {
  diamond_max_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::_internal_diamond_max() const {
  return diamond_max_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::diamond_max() const {
  // @@protoc_insertion_point(field_get:RES.ResItemRange.diamond_max)
  return _internal_diamond_max();
}
inline void ResItemRange::_internal_set_diamond_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  diamond_max_ = value;
}
inline void ResItemRange::set_diamond_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_diamond_max(value);
  // @@protoc_insertion_point(field_set:RES.ResItemRange.diamond_max)
}

// int32 exp_min = 6 [(.field) = "\347\273\217\351\252\214\344\270\213\351\231\220"];
inline void ResItemRange::clear_exp_min() {
  exp_min_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::_internal_exp_min() const {
  return exp_min_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::exp_min() const {
  // @@protoc_insertion_point(field_get:RES.ResItemRange.exp_min)
  return _internal_exp_min();
}
inline void ResItemRange::_internal_set_exp_min(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  exp_min_ = value;
}
inline void ResItemRange::set_exp_min(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_exp_min(value);
  // @@protoc_insertion_point(field_set:RES.ResItemRange.exp_min)
}

// int32 exp_max = 7 [(.field) = "\347\273\217\351\252\214\344\270\212\351\231\220"];
inline void ResItemRange::clear_exp_max() {
  exp_max_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::_internal_exp_max() const {
  return exp_max_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::exp_max() const {
  // @@protoc_insertion_point(field_get:RES.ResItemRange.exp_max)
  return _internal_exp_max();
}
inline void ResItemRange::_internal_set_exp_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  exp_max_ = value;
}
inline void ResItemRange::set_exp_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_exp_max(value);
  // @@protoc_insertion_point(field_set:RES.ResItemRange.exp_max)
}

// int32 power_min = 8 [(.field) = "\344\275\223\345\212\233\344\270\213\351\231\220"];
inline void ResItemRange::clear_power_min() {
  power_min_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::_internal_power_min() const {
  return power_min_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::power_min() const {
  // @@protoc_insertion_point(field_get:RES.ResItemRange.power_min)
  return _internal_power_min();
}
inline void ResItemRange::_internal_set_power_min(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  power_min_ = value;
}
inline void ResItemRange::set_power_min(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_power_min(value);
  // @@protoc_insertion_point(field_set:RES.ResItemRange.power_min)
}

// int32 power_max = 9 [(.field) = "\344\275\223\345\212\233\344\270\212\351\231\220"];
inline void ResItemRange::clear_power_max() {
  power_max_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::_internal_power_max() const {
  return power_max_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::power_max() const {
  // @@protoc_insertion_point(field_get:RES.ResItemRange.power_max)
  return _internal_power_max();
}
inline void ResItemRange::_internal_set_power_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  power_max_ = value;
}
inline void ResItemRange::set_power_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_power_max(value);
  // @@protoc_insertion_point(field_set:RES.ResItemRange.power_max)
}

// int32 ach_point_min = 10 [(.field) = "\346\210\220\345\260\261\347\202\271\344\270\213\351\231\220"];
inline void ResItemRange::clear_ach_point_min() {
  ach_point_min_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::_internal_ach_point_min() const {
  return ach_point_min_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::ach_point_min() const {
  // @@protoc_insertion_point(field_get:RES.ResItemRange.ach_point_min)
  return _internal_ach_point_min();
}
inline void ResItemRange::_internal_set_ach_point_min(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ach_point_min_ = value;
}
inline void ResItemRange::set_ach_point_min(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ach_point_min(value);
  // @@protoc_insertion_point(field_set:RES.ResItemRange.ach_point_min)
}

// int32 ach_point_max = 11 [(.field) = "\346\210\220\345\260\261\347\202\271\344\270\212\351\231\220"];
inline void ResItemRange::clear_ach_point_max() {
  ach_point_max_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::_internal_ach_point_max() const {
  return ach_point_max_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ResItemRange::ach_point_max() const {
  // @@protoc_insertion_point(field_get:RES.ResItemRange.ach_point_max)
  return _internal_ach_point_max();
}
inline void ResItemRange::_internal_set_ach_point_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ach_point_max_ = value;
}
inline void ResItemRange::set_ach_point_max(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_ach_point_max(value);
  // @@protoc_insertion_point(field_set:RES.ResItemRange.ach_point_max)
}

// -------------------------------------------------------------------

// ResItemRangeArray

// repeated .RES.ResItemRange items = 1;
inline int ResItemRangeArray::_internal_items_size() const {
  return items_.size();
}
inline int ResItemRangeArray::items_size() const {
  return _internal_items_size();
}
inline void ResItemRangeArray::clear_items() {
  items_.Clear();
}
inline ::RES::ResItemRange* ResItemRangeArray::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:RES.ResItemRangeArray.items)
  return items_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItemRange >*
ResItemRangeArray::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:RES.ResItemRangeArray.items)
  return &items_;
}
inline const ::RES::ResItemRange& ResItemRangeArray::_internal_items(int index) const {
  return items_.Get(index);
}
inline const ::RES::ResItemRange& ResItemRangeArray::items(int index) const {
  // @@protoc_insertion_point(field_get:RES.ResItemRangeArray.items)
  return _internal_items(index);
}
inline ::RES::ResItemRange* ResItemRangeArray::_internal_add_items() {
  return items_.Add();
}
inline ::RES::ResItemRange* ResItemRangeArray::add_items() {
  // @@protoc_insertion_point(field_add:RES.ResItemRangeArray.items)
  return _internal_add_items();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::RES::ResItemRange >&
ResItemRangeArray::items() const {
  // @@protoc_insertion_point(field_list:RES.ResItemRangeArray.items)
  return items_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace RES

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_item_2eproto
